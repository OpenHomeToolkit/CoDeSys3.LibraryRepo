<?xml version="1.0" encoding="utf-8"?>
<Library Name="CmpTls, 3.5.10.0 (System)">
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="Project Information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="ERRORS" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{71a7f65c-b47a-48ba-bbf6-d41d7e0a8659}" />
  <Node Name="CmpTlsWrite" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Send data over the encrypted channel. If the connection is not established yet, this will be done&#xD;&#xA; transparent in the background. Normally only data is written to the unterlaying IO. In some cases data have to be read&#xD;&#xA; (Handshaking has not finished or renegotiation of the session keys). If not data is for reading is available this will&#xD;&#xA; be indicated through the corresponding error code.&#xD;&#xA;&#xD;&#xA; :return: Number of bytes sent. 0 if an error occured." ObjectGUID="{13c3808a-d26f-4fc5-bf43-6a95a51c5fbc}" />
  <Node Name="CmpTlsShutdown" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" There are two ways to shutdown the TLS connection:&#xD;&#xA; bidirectional: The first call of TlsShutdown will send the shutdown message. The operation will return ERR_TLS_RETRY_OPERATION.&#xD;&#xA;             Then the function has to be called again. If the acknowledge of the peer was received ERR_OK will be returned. If the&#xD;&#xA;             acknowledge was not received yet the function will return ERR_TLS_WANT_READ.&#xD;&#xA; unidirectional: The first call of TlsShutdown will send the shutdown message. The operation will return ERR_TLS_RETRY_OPERATION.&#xD;&#xA;             Close the IO channel and clean up. Don't wait for the acknowledge of the peer.&#xD;&#xA;&#xD;&#xA; :return: Result of this operation. May be one of these values:&#xD;&#xA;		- ERR_OK: No error. Everything worked as expected.&#xD;&#xA;		- ERR_NOTINITIALIZED: The TLS component was not initialized proberly.&#xD;&#xA;		- ERR_TLS_CONNECTION_CLOSED: The TLS connection is closed.&#xD;&#xA;     - ERR_TLS_WANT_READ: The operation needs TO read data FROM the IO system. There is no data available.&#xD;&#xA;     - ERR_TLS_WANT_WRITE: The operation needs to write data to the IO system. This is not possible.&#xD;&#xA;		- ERR_TLS_RETRY_OPERATION: Something went wrong. Try the same function call again&#xD;&#xA;		- ERR_TLS_IO_SYSTEM: An error in the unterlaying IO system.&#xD;&#xA;		- ERR_TLS_INTERNAL: An internal Error of the TLS Component&#xD;&#xA;		- ERR_FAILED: Unknown error." ObjectGUID="{f7d5a026-6c64-4c3f-8a77-d87d0d0ded0f}" />
  <Node Name="CmpTlsRead" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Receive data from the encrypted channel. If the connection is not established yet, this will be done&#xD;&#xA; transparent in the background. Normally only data is of the encrypted channel is consumed. In some cases (Handshaking has&#xD;&#xA; not finished or renegotiation of the session keys) this function will also write data. If the unterlaying IO doens't write&#xD;&#xA; automatically the need to send data will be indicated using the corresponding error code.&#xD;&#xA;&#xD;&#xA; :return: Number of bytes received. 0 if an error occured." ObjectGUID="{3c0a044b-b1ab-40ac-b9f7-cbb64df12334}" />
  <Node Name="CmpTlsMethod" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{2269dc83-5061-4376-8b77-a405b93baaf1}" />
  <Node Name="CmpTlsFreeContext" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function cleans up the TLS context created with CmpTlsCreateContext." ObjectGUID="{f885ca90-76f9-464a-bc71-52df19371e46}" />
  <Node Name="CmpTlsCreateContext" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function create a TLS context. This context is needed to perform TLS communication&#xD;&#xA; using the SysSocket2 library. The context contains all informaiton how to handle this&#xD;&#xA; TLS connection.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; :return: Handle to the new accepted socket or RTS_INVALID_HANDLE if failed." ObjectGUID="{33892461-a738-4b8b-866a-728f326f8974}" />
  <Node Name="CmpTlsConstants" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{8c0a5ba0-3949-4939-b078-59333b8fb099}" />
  <Node Name="CmpTlsConnect" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Starts handshaking on the client side. This data is likley to read and write data.&#xD;&#xA;&#xD;&#xA; :return: Result of this operation. May be one of these values:&#xD;&#xA;		- ERR_OK: No error. Everything worked as expected.&#xD;&#xA;		- ERR_NOTINITIALIZED: The TLS component was not initialized proberly.&#xD;&#xA;		- ERR_TLS_CONNECTION_CLOSED: The TLS connection is closed. Use TlsShutdown to shutdown locally.&#xD;&#xA;     - ERR_TLS_WANT_READ: The operation needs TO read data FROM the IO system. There is no data available.&#xD;&#xA;     - ERR_TLS_WANT_WRITE: The operation needs to write data to the IO system. This is not possible.&#xD;&#xA;		- ERR_TLS_RETRY_OPERATION: Something went wrong. Try the same function call again&#xD;&#xA;		- ERR_TLS_IO_SYSTEM: An error in the unterlaying IO system.&#xD;&#xA;		- ERR_TLS_INTERNAL: An internal Error of the TLS Component&#xD;&#xA;		- ERR_FAILED: Unknown error." ObjectGUID="{ad190361-0bf0-4c17-ad99-6dd5d32686bd}" />
  <Node Name="CmpTlsClose" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" lose the TLS connection. All data will be cleand up. The handle used for creating the connection will&#xD;&#xA; be closed too. No shutdown is done here. This is allowed by the TLS protocol.&#xD;&#xA;&#xD;&#xA; :return: Result of this operation. May be one of these values:&#xD;&#xA; 	- ERR_OK: No error. Everything worked as expected.&#xD;&#xA; 	- ERR_FAILED: Unknown error." ObjectGUID="{965f9606-8837-4ce3-9fa7-98c690edd31f}" />
  <Node Name="CmpTlsBufferOpen" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Create a TLS connection around any existing transport media. There are two buffers needed: a send and a receive buffer. &#xD;&#xA; Put the data received from the peer to the Rx buffer. The data written by the TLS implementation &#xD;&#xA; will be put to the Tx buffer. This buffer has to be sent to the peer after calling the connect, accept or write functions. Maybe&#xD;&#xA; after calling the read function the buffer has to be sent too. This depends on internal TLS protocol stuff (change of &#xD;&#xA; session keys etc) which may occur at any time. This will be indicated throuth the corresponding returned flag.&#xD;&#xA; The TLS connection will be established explicit by calling TSLConnect, or on the server side by calling the Accept function.&#xD;&#xA; If the handshaking hasn't finished the read and write functions will internally finish the handshaking until the connection is&#xD;&#xA; established. The implementation will start writing at the beginning at each call. If the function indicated that the&#xD;&#xA; the data must be sent the next call will overwrite the data in the Tx buffer. So the caller must handle the data before calling&#xD;&#xA; the next TLS function. The buffers given here contain raw TLS protocol data. This data has to be transferred to the peer using&#xD;&#xA; a reliable way. The packages have to arrive completely and in the right order. Otherwise TLS won't work. &#xD;&#xA; To read or to write the corresponding plaintext data use the TlsRead and TlsWrite functions.&#xD;&#xA; Handling is done as follows:&#xD;&#xA;    Received data: &#xD;&#xA;		- The bytestrings pointer will point to the beginning of the data.&#xD;&#xA;     - The bytestrings max length will hold the buffers size&#xD;&#xA;     - The bytestrings length will hold the current available amount of data.&#xD;&#xA;     - The function ResetRx will not change any of the byte string. Only the internal read position will be set to the beginning of the buffer&#xD;&#xA;&#xD;&#xA;    Transmit data: &#xD;&#xA;		- The bytestrings pointer will point to the of the empty writing buffer.&#xD;&#xA;     - The bytestrings max length will hold the buffer size&#xD;&#xA;     - The bytestrings length will contain the amount of data written by the TLS implementation.&#xD;&#xA;     - The function ResetTx will reset the internal write position. The length of the bytestring will be set to 0.&#xD;&#xA;&#xD;&#xA; :return: The handle to the created TLS connection, or RTS_INVALID_HANDLE, if operation failed." ObjectGUID="{1bbff5db-932d-4849-aac1-09fd25692e98}" />
  <Node Name="CmpTlsBufferDataToSendAvailable" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function is called to determine if the tx buffer contains data which should be sent to the peer." ObjectGUID="{03c1f0b6-e839-4fa3-b294-b3e3caa092a5}" />
  <Node Name="CmpTlsBufferDataSent" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function is used to indicate that the data written by the TLS implementation has been sent to the peer. If this function&#xD;&#xA; is called the TLS implementation will start writing it's output at the beginning of the Tx buffer again. Call this function if the data of &#xD;&#xA; the Tx buffer has been sent. The length parameter of the Tx buffer will be set to 0." ObjectGUID="{d7be9c3c-cbf4-4c75-abbf-959794cf4bcf}" />
  <Node Name="CmpTlsBufferDataReceived" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function is used to indicate that the Rx buffer contains new TLS data. Call this function is new data have arrived. All data of the &#xD;&#xA; buffer has to be consumed by the TLS implementation before overwritting the existing data and calling this funciton. Call TlsRead until the corresponding &#xD;&#xA; error code is returned. If not all data is consumed the TLS stream will be broken and the data can't be decrypted anymore. The Rx buffer will not be changed." ObjectGUID="{11582edd-9e2d-46ed-b588-a1190805590b}" />
  <Node Name="CmpTlsAccept" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Starts handshaking on the server side. The client has to initiate the handshaking.&#xD;&#xA; This is the first function call on the serverside after establishing the unterlaying connection.&#xD;&#xA; Data has to be received first. This function will is likley to read and write data.&#xD;&#xA;&#xD;&#xA; :return: Result of this operation. May be one of these values:&#xD;&#xA;		- ERR_OK: No error. Everything worked as expected.&#xD;&#xA;		- ERR_NOTINITIALIZED: The TLS component was not initialized proberly.&#xD;&#xA;		- ERR_TLS_CONNECTION_CLOSED: The TLS connection is closed. Use TlsShutdown to shutdown locally.&#xD;&#xA;     - ERR_TLS_WANT_READ: The operation needs TO read data FROM the IO system. There is no data available.&#xD;&#xA;     - ERR_TLS_WANT_WRITE: The operation needs to write data to the IO system. This is not possible.&#xD;&#xA;		- ERR_TLS_RETRY_OPERATION: Something went wrong. Try the same function call again&#xD;&#xA;		- ERR_TLS_IO_SYSTEM: An error in the unterlaying IO system.&#xD;&#xA;		- ERR_TLS_INTERNAL: An internal Error of the TLS Component&#xD;&#xA;		- ERR_FAILED: Unknown error." ObjectGUID="{a8860f99-eb29-40a1-b7d9-28febc5e9eeb}" />
  <Node Name="Bibliotheksverwalter" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{85a6963a-b898-4751-8478-15ecaec987fe}" />
</Library>