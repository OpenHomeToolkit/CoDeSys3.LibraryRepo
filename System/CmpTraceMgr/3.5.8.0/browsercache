<?xml version="1.0" encoding="utf-8"?>
<Library Name="CmpTraceMgr, 3.5.8.0 (System)">
  <Node Name="TypeClass3" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" See enum IBase.TypeClass for the possible values" ObjectGUID="{5de0d991-1359-4458-ba16-a7e779ed9ddc}" />
  <Node Name="TriggerValue" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" An union for all possible types of trigger values" ObjectGUID="{64023e88-e64b-42d5-82fc-679f75de7e5f}" />
  <Node Name="TriggerState" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The state of the trigger" ObjectGUID="{8e813677-154e-4cb8-9a69-3260fdbf9d08}" />
  <Node Name="TraceVariableAddress" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Address description of a single trace variable" ObjectGUID="{5478f2e4-e706-426f-9bb4-3c5bc9676c58}" />
  <Node Name="TraceVariable" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Definition of a single trace variable" ObjectGUID="{1d30a2b4-b775-4ef9-8652-0e961018cd3f}" />
  <Node Name="TraceVarInfo" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{547bb870-ecb2-46d8-b7d0-4cafbba3a64a}" />
  <Node Name="TraceTrigger" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Configuration of the trace trigger" ObjectGUID="{5fcc379c-fcfd-4d21-bde2-6d9e91dba0d8}" />
  <Node Name="TraceState" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The state of a trace packet" ObjectGUID="{e4b337f0-220a-40db-90f1-380ee378335d}" />
  <Node Name="TraceRecordEntry" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" A single entry recorded for a trace variable consisting of a relative time stamp&#xD;&#xA; and a (variable-size) data part.  The size of the data depends on the type class&#xD;&#xA; of the trace variable." ObjectGUID="{3a349bc6-a1d6-4f61-8499-6dfd473e800f}" />
  <Node Name="TraceRecordConfiguration" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Trace record configuration&#xD;&#xA;&#xD;&#xA; The colors (ulGraphColor, ulMinWarningColor, ulMaxWarningColor)&#xD;&#xA; and are encoded in UDINTs in the ARGB format: the most significand&#xD;&#xA; byte is the alpha value, the next byte the red value, followed by&#xD;&#xA; green and blue.  Each color component takes a value between 0 and FF.&#xD;&#xA; So 0xFF000000 is white, 0xFFFFFFFF is black, 0xFFFF0000 is red,&#xD;&#xA; 0xFF00FF00 is green, and 0xFF0000FF is blue." ObjectGUID="{353873c2-d7e6-41b3-867d-cacfd8d9933d}" />
  <Node Name="TracePacketConfiguration" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Configuration of a trace packet" ObjectGUID="{533e3c1f-406d-4fe7-ab4e-abbb46edf13e}" />
  <Node Name="TraceAddress" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Address of a trace variable" ObjectGUID="{6d58be70-0d1b-45e0-a6a6-d70b553c6731}" />
  <Node Name="SystemParameter" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Description of an IO-config device parameter" ObjectGUID="{d05cdcfb-c973-4d9b-bcf3-3b208e363ec0}" />
  <Node Name="SymVarAccess" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{e63ed65d-2b74-4585-b28f-f582c129e4e2}" />
  <Node Name="PropertyLocation" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{5e386903-0cbb-410a-b63c-6439b968281e}" />
  <Node Name="MonitoringService" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{4daef659-ae30-4670-af21-ef9dd916b817}" />
  <Node Name="Monitoring2ByteCodeUnion" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{3c61b66c-2062-48c2-9026-a20cd60cdc86}" />
  <Node Name="Monitoring2ByteCode" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{e9a6ff08-187d-4c69-b031-1de0851cf053}" />
  <Node Name="AddressArea" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Description of an IEC address" ObjectGUID="{fa5d7530-c7fc-4f16-8720-37d4cd65e36c}" />
  <Node Name="EventIDs" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Event Ids for the events of CmpTraceMgr.&#xD;&#xA;&#xD;&#xA; All packet events have the parameter type |EVTPARAM_CmpTraceMgr_Packet|.&#xD;&#xA; All record events have the parameter type |EVTPARAM_CmpTraceMgr_Record|." ObjectGUID="{601ca840-d55f-4634-8bab-0fc2fbc8c0d3}" />
  <Node Name="EVTPARAM_CmpTraceMgr_Record" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Parameter type for trace manager record events" ObjectGUID="{5400897c-988d-48b7-b58a-6a999d0831ff}" />
  <Node Name="EVTPARAM_CmpTraceMgr_Packet" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Parameter type for trace manager packet events" ObjectGUID="{51a1cfc5-91d3-4c86-bc6a-0326fc383fa6}" />
  <Node Name="TraceMgrRecordUpdate3" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Stores one entry in the ring buffer of a trace record.&#xD;&#xA;&#xD;&#xA; This function can be used to provide the data for so called system parameters&#xD;&#xA; from the IEC application. (See |TRACE_VAR_ADDRESS_FLAGS_SYSTEM|.)&#xD;&#xA; If more than one single entry is to be added, consider using |TraceMgrRecordUpdate2|&#xD;&#xA; instead.&#xD;&#xA;&#xD;&#xA; .. note:: in contrast to |TraceMgrRecordUpdate2|, the time stamp of the entry is not&#xD;&#xA;    provided by the caller but set inside |TraceMgrRecordUpdate3|.&#xD;&#xA;&#xD;&#xA; .. note:: If pData is 0, the current value of the trace variable is read, i.e. the&#xD;&#xA;    function behaves TraceMgrRecordUpdate.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket or hPrevRecord is not a valid handle, or if ulLen differs from the size of the trace variable&#xD;&#xA;   - ERR_NOTINITIALIZED if the packet is not currently recording (not started, trigger reached, ...)&#xD;&#xA;   - ERR_PENDING if no value is recorded for this cycle due to TracePacketConfiguration.ulEveryNCycles&#xD;&#xA;   - ERR_FAILED if pData is 0 and the current value of the trace variable cannot be read" ObjectGUID="{3c5006cb-6723-45f3-a1f9-78782beeaa37}" />
  <Node Name="TraceMgrRecordUpdate2" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Stores entries in the ring buffer of a trace record.&#xD;&#xA;&#xD;&#xA; This function can be used to provide the data for so called system parameters&#xD;&#xA; from the IEC application. (See |TRACE_VAR_ADDRESS_FLAGS_SYSTEM|.)&#xD;&#xA; If only a single entry is to be added, consider using |TraceMgrRecordUpdate3|&#xD;&#xA; instead.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket or hPrevRecord is not a valid handle&#xD;&#xA;   - ERR_NOTINITIALIZED if the packet is not currently recording (not started, trigger reached, ...)&#xD;&#xA;   - ERR_PENDING if no value is recorded for this cycle due to TracePacketConfiguration.ulEveryNCycles&#xD;&#xA;   - ERR_FAILED if ulLen is not a multiple of the entry size (size of a time stamp plus a sample value) " ObjectGUID="{244b4089-ba91-40e0-a5d2-32084d69518d}" />
  <Node Name="TraceMgrRecordUpdate" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Records the current value of the trace variable of a record&#xD;&#xA; together with the current time stamp.&#xD;&#xA;&#xD;&#xA; .. note:: This function is called cyclically by CmpTraceMgr.  It&#xD;&#xA;    should not be called by the application.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket or hPrevRecord is not a valid handle&#xD;&#xA;   - ERR_NOTINITIALIZED if the packet is not currently recording (not started, trigger reached, ...)&#xD;&#xA;   - ERR_PENDING if no value is recorded for this cycle due to TracePacketConfiguration.ulEveryNCycles&#xD;&#xA;   - ERR_FAILED if reading the value of the trace variable failed" ObjectGUID="{acc18a72-28cf-4172-972a-80a137725282}" />
  <Node Name="TraceMgrRecordRemove" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Removes a trace record from a trace packet.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if the packet handle or the record handle is invalid" ObjectGUID="{22eb8485-e273-4598-ab06-64103446f306}" />
  <Node Name="TraceMgrRecordGetNext" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the next trace record of a trace packet.&#xD;&#xA; This function can be used together with |TraceMgrRecordGetFirst| to iterate&#xD;&#xA; through all trace records of a packet.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket or hPrevRecord is not a valid handle&#xD;&#xA;   - ERR_NO_OBJECT if the packet has no next trace record" ObjectGUID="{821adee8-0b09-4f68-89f4-b0f16b798057}" />
  <Node Name="TraceMgrRecordGetFirst" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the first trace record of a trace packet.&#xD;&#xA; This function can be used together with |TraceMgrRecordGetNext| to iterate&#xD;&#xA; through all trace records of a packet.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle&#xD;&#xA;   - ERR_NO_OBJECT if the packet has no trace record" ObjectGUID="{e5206a8e-a962-4b0f-b8e7-3d8c067da8a9}" />
  <Node Name="TraceMgrRecordGetConfig" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Queries the configuration of a trace record.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket or hRecord is not a valid handle" ObjectGUID="{1c421153-597d-4abc-be8e-e6214701acfa}" />
  <Node Name="TraceMgrRecordAdd" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Adds a new record to a trace packet&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle, if the variable name is not set, or if the variable type is not supported&#xD;&#xA;   - ERR_NOMEMORY if there is not enough free memory to create the record" ObjectGUID="{5f09502f-eadf-472f-af81-6ae96b86096f}" />
  <Node Name="TraceMgrPacketStore" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Stores a trace packet to a trace file.&#xD;&#xA; Both the trace configuration and the current trace values are stored.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid handle, or if pszFileName is not a valid file path&#xD;&#xA;   - ERR_NOMEMORY if the memory is not sufficient for opening the file&#xD;&#xA;   - ERR_NOT_SUPPORTED if writing to files is not supported by the runtime system&#xD;&#xA;   - ERR_NO_OBJECT if opening the file failed&#xD;&#xA;   - ERR_FAILED if creating or writing to the file failed" ObjectGUID="{c78bff81-43af-43c0-967d-5d3cacdccb36}" />
  <Node Name="TraceMgrPacketStop" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Stops a trace packet.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{9432fb06-95ad-4996-bd03-d1ba9d5b0651}" />
  <Node Name="TraceMgrPacketStart" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Starts a trace packet and resets the trigger.&#xD;&#xA;&#xD;&#xA; .. note:: if the packet is started for the first time, the start&#xD;&#xA;    time of the packet is set to the current time. See: |TraceMgrPacketGetStartTime|.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{050d6362-2229-486d-a71e-dd7f0ffb570e}" />
  <Node Name="TraceMgrPacketRestore" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Loads a trace packet from a trace file.&#xD;&#xA; Both the trace configuration and the current trace values are restored.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid handle, or if pszFileName is not a valid file path&#xD;&#xA;   - ERR_NOMEMORY if the memory is not sufficient for opening the file&#xD;&#xA;   - ERR_NOT_SUPPORTED if reading from files is not supported by the runtime system&#xD;&#xA;     or if an addressing mode is not supported (e.g. symbolic access)&#xD;&#xA;   - ERR_NO_OBJECT if opening the file failed&#xD;&#xA;   - ERR_FAILED if opening the file failed" ObjectGUID="{b00248c2-5beb-4f7c-94bd-4d9e3e8e47fd}" />
  <Node Name="TraceMgrPacketRestart" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Restarts a trace packet and resets the start time and the trigger.&#xD;&#xA;&#xD;&#xA; In contrast to TraceMgrPacketStart, the trace is stopped and&#xD;&#xA; the start time is reset to the current time before it is&#xD;&#xA; started again.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{8eb7a1df-b2ee-483c-af65-2063d8cd782e}" />
  <Node Name="TraceMgrPacketResetTrigger" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Resets the trigger of a trace packet.  The start time and date of&#xD;&#xA; of the trigger is reset to 0 and the trigger is set to state enabled&#xD;&#xA; (if it is not disabled).&#xD;&#xA; &#xD;&#xA; .. note: if the trigger is currently disabled, it stays disabled.  To enable&#xD;&#xA;    it, call TraceMgrPacketEnableTrigger.&#xD;&#xA; &#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{3bd79743-3216-4590-b742-733ea7fe766f}" />
  <Node Name="TraceMgrPacketReadNext2" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads the contents of the next record, starting at a given time stamp.&#xD;&#xA;&#xD;&#xA; Only entries with a time stamp greater than or equal to ulTimestamp are&#xD;&#xA; copied.  If the time stamp is zero, the function behaves like&#xD;&#xA; |TraceMgrPacketReadNext|.&#xD;&#xA;&#xD;&#xA; .. note:: if the result code is ERR_ENTRIES_REMAINING, data has been&#xD;&#xA;    successfully copied to pTraceBuffer, but more data can be read&#xD;&#xA;    by a subsequent call.  (Either because the destination buffer was&#xD;&#xA;    too small, or because new data has been recorded in the mean time.)&#xD;&#xA;&#xD;&#xA; .. note:: Data is always returned in little endian byte order even if&#xD;&#xA;    the device has big endian byte order.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle or if hPrevRecord is not a valid record handle&#xD;&#xA;   - ERR_NO_OBJECT if there is no next record&#xD;&#xA;   - ERR_NOTINITIALIZED if the packet is not complete&#xD;&#xA;   - ERR_TIMEOUT if reading took too long&#xD;&#xA;   - ERR_ENTRIES_REMAINING if more data can be read by a subsequent call (this is not an error)" ObjectGUID="{8ef2a5cf-0a9e-4c90-a6a3-6be13e111565}" />
  <Node Name="TraceMgrPacketReadNext" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads the contents of the next record.&#xD;&#xA;&#xD;&#xA; .. note:: if the result code is ERR_ENTRIES_REMAINING, data has been&#xD;&#xA;    successfully copied to pTraceBuffer, but more data can be read&#xD;&#xA;    by a subsequent call.  (Either because the destination buffer was&#xD;&#xA;    too small, or because new data has been recorded in the mean time.)&#xD;&#xA;&#xD;&#xA; .. note:: Data is always returned in little endian byte order even if&#xD;&#xA;    the device has big endian byte order.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle or if hPrevRecord is not a valid record handle&#xD;&#xA;   - ERR_NO_OBJECT if there is no next record&#xD;&#xA;   - ERR_NOTINITIALIZED if the packet is not complete&#xD;&#xA;   - ERR_TIMEOUT if reading took too long&#xD;&#xA;   - ERR_ENTRIES_REMAINING if more data can be read by a subsequent call (this is not an error)" ObjectGUID="{47900f71-9d3a-493c-80e7-f59cd9581c43}" />
  <Node Name="TraceMgrPacketReadFirst2" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads the contents of the first record, starting at a given time stamp.&#xD;&#xA;&#xD;&#xA; Only entries with a time stamp greater than or equal to ulTimestamp are&#xD;&#xA; copied.  If the time stamp is zero, the function behaves like&#xD;&#xA; |TraceMgrPacketReadFirst|.&#xD;&#xA;&#xD;&#xA; .. note:: if the result code is ERR_ENTRIES_REMAINING, data has been&#xD;&#xA;    successfully copied to pTraceBuffer, but more data can be read&#xD;&#xA;    by a subsequent call.  (Either because the destination buffer was&#xD;&#xA;    too small, or because new data has been recorded in the mean time.)&#xD;&#xA;&#xD;&#xA; .. note:: You should call |TraceMgrPacketReadBegin| before calling&#xD;&#xA;    this function, to make sure any outstanding trace values are written&#xD;&#xA;    to the trace buffers.&#xD;&#xA;&#xD;&#xA; .. note:: Data is always returned in little endian byte order even if&#xD;&#xA;    the device has big endian byte order.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle&#xD;&#xA;   - ERR_NO_OBJECT if the packet does not have a single record&#xD;&#xA;   - ERR_NOTINITIALIZED if the packet is not complete&#xD;&#xA;   - ERR_TIMEOUT if reading took too long&#xD;&#xA;   - ERR_ENTRIES_REMAINING if more data can be read by a subsequent call (this is not an error)" ObjectGUID="{cfe75097-fecc-4496-8fdd-2ef31a3c79b0}" />
  <Node Name="TraceMgrPacketReadFirst" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads the contents of the first record.&#xD;&#xA;&#xD;&#xA; .. note:: if the result code is ERR_ENTRIES_REMAINING, data has been&#xD;&#xA;    successfully copied to pTraceBuffer, but more data can be read&#xD;&#xA;    by a subsequent call.  (Either because the destination buffer was&#xD;&#xA;    too small, or because new data has been recorded in the mean time.)&#xD;&#xA;&#xD;&#xA; .. note:: You should call |TraceMgrPacketReadBegin| before calling&#xD;&#xA;    this function, to make sure any outstanding trace values are written&#xD;&#xA;    to the trace buffers.&#xD;&#xA; &#xD;&#xA; .. note:: Data is always returned in little endian byte order even if &#xD;&#xA;    the device has big endian byte order.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle&#xD;&#xA;   - ERR_NO_OBJECT if the packet does not have a single record&#xD;&#xA;   - ERR_NOTINITIALIZED if the packet is not complete&#xD;&#xA;   - ERR_TIMEOUT if reading took too long&#xD;&#xA;   - ERR_ENTRIES_REMAINING if more data can be read by a subsequent call (this is not an error)" ObjectGUID="{f1cb3cc0-7caa-4cba-ad5c-1c321cb1c137}" />
  <Node Name="TraceMgrPacketReadEnd" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" End reading trace packet.&#xD;&#xA;&#xD;&#xA; See description of function |TraceMgrPacketReadBegin|.&#xD;&#xA; &#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle&#xD;&#xA;   - ERR_NOTINITIALIZED if hPacket is not complete and started" ObjectGUID="{ff33c376-8d13-4fb0-8afe-eda503aabfc1}" />
  <Node Name="TraceMgrPacketReadBegin" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Start reading trace packet.&#xD;&#xA; &#xD;&#xA; The purpose of this function is to trigger the event&#xD;&#xA; EVT_TRACEMGR_PACKET_SAMPLE.&#xD;&#xA; In response to the event, any outstanding trace samples will be written&#xD;&#xA; by runtime system components and IEC applications that provide trace&#xD;&#xA; values for system parameters.&#xD;&#xA;&#xD;&#xA; .. note:: Normally, there is no need to call this function. It should be&#xD;&#xA;    called before |TraceMgrPacketReadFirst| and |TraceMgrPacketReadFirst2| to&#xD;&#xA;    make sure all trace values are present before reading.  When finished&#xD;&#xA;    with reading, TraceMgrPacketReadEnd should be called.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle&#xD;&#xA;   - ERR_NOTINITIALIZED if hPacket is not complete and started" ObjectGUID="{89edc96d-0ad0-4149-a604-a3f4e6b80658}" />
  <Node Name="TraceMgrPacketOpen" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Opens a trace packet specified by name.&#xD;&#xA;&#xD;&#xA; .. note:: Comparison of packet names is case-insensitive.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_NO_OBJECT if no packet with the given name is found. " ObjectGUID="{54522391-d7f2-4748-9880-ebe88c1a6293}" />
  <Node Name="TraceMgrPacketGetState" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the state of a trace packet.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{4f9d2b1d-eb46-4c32-83d0-51642a29a322}" />
  <Node Name="TraceMgrPacketGetStartTime" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the start time of a trace packet or 0 if trace packet has not&#xD;&#xA; been started yet.&#xD;&#xA;&#xD;&#xA; .. note:: the start time is the time when the packet was started for the first time.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid handle" ObjectGUID="{d992e4c7-dadb-499d-ae19-31045e38fd73}" />
  <Node Name="TraceMgrPacketGetNext" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the next trace packet.&#xD;&#xA; This function can be used together with |TraceMgrPacketGetFirst| to iterate&#xD;&#xA; through all trace packets.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPrevPacket is not a valid handle&#xD;&#xA;   - ERR_NO_OBJECT if hPrevPacket is the last trace packet" ObjectGUID="{125daa2b-6759-43f2-82b6-f73672706a6b}" />
  <Node Name="TraceMgrPacketGetFirst" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the first trace packet.&#xD;&#xA; This function can be used together with |TraceMgrPacketGetNext| to iterate&#xD;&#xA; through all trace packets.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_NO_OBJECT if there is no trace packet" ObjectGUID="{26bf629d-ae8d-487d-87c5-4f2a44c41695}" />
  <Node Name="TraceMgrPacketGetConfig" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Queries the configuration of a trace packet.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid handle" ObjectGUID="{144a7d15-864b-444d-b155-281d8e542bc4}" />
  <Node Name="TraceMgrPacketGetChangeTimestamp" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the timestamp of a trace packet's last modification.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{081e1319-c9aa-4617-bcbf-e43f9f58e093}" />
  <Node Name="TraceMgrPacketGetAbsoluteStartTime" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the absolute start time of a trace packet or 0 if trace packet has not&#xD;&#xA; been started yet.&#xD;&#xA;&#xD;&#xA; .. note:: The start time is the time when the packet was started for the first time.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid handle" ObjectGUID="{09e19276-cf5b-4d69-870c-ce491b979ccb}" />
  <Node Name="TraceMgrPacketEnableTrigger" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Enables the trigger of a trace packet.&#xD;&#xA; &#xD;&#xA; .. note:: This function should be called if the trigger is currently disabled.&#xD;&#xA;    If the trigger has already fired, call |TraceMgrPacketResetTrigger|&#xD;&#xA;    to reset the trigger, instead.&#xD;&#xA; &#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{e4e9f2a3-d1c9-48be-8edf-d3dfb053e3f6}" />
  <Node Name="TraceMgrPacketEnable" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Enables a trace packet.  Does nothing if the trace packet is&#xD;&#xA; enabled.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{4faeb3d4-c70a-4464-85b4-c23fdbb8225f}" />
  <Node Name="TraceMgrPacketDisableTrigger" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Disables the trigger of a trace packet.&#xD;&#xA; &#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{62ecaa05-b8e8-445d-8795-41611e64882d}" />
  <Node Name="TraceMgrPacketDisable" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Disables a trace packet.  Does nothing if the trace packet is&#xD;&#xA; disabled.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{733a3da8-1359-40a8-9cef-aa30fe923f27}" />
  <Node Name="TraceMgrPacketDelete" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Deletes an existing handle.  The handle must have been created with&#xD;&#xA; TraceMgrPacketCreate.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid packet handle" ObjectGUID="{c91856a0-c655-4d5e-8923-3b78ee15015b}" />
  <Node Name="TraceMgrPacketCreate" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Creates a new trace packet.  The returned handle must be deleted with&#xD;&#xA; TraceMgrPacketDelete when the packet is no longer needed.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;  - ERR_PARAMETER if pConfiguration.pszName is 0&#xD;&#xA;  - ERR_DUPLICATE if a packet with the given name already exists&#xD;&#xA;  - ERR_NOMEMORY if the available memory is not sufficient to create the packet" ObjectGUID="{fa8d52cc-447c-40ec-8aa6-ecdeb550e98f}" />
  <Node Name="TraceMgrPacketComplete" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Completes a trace packet and finishes the configuration.&#xD;&#xA; This function must be called after all records have been added to the packet.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid handle" ObjectGUID="{a34b4fd4-5258-4f0a-acfd-9b1afdad148e}" />
  <Node Name="TraceMgrPacketClose" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Closes a handle opened by TraceMgrPacketOpen.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid handle" ObjectGUID="{08f533d5-ed2d-4586-b7fb-97d7ba09d976}" />
  <Node Name="TraceMgrPacketCheckTrigger" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Checks if the trigger fires this cycle and sets the trigger state&#xD;&#xA; accordingly.&#xD;&#xA;&#xD;&#xA; If the trigger is already reached, ERR_OK is returned.&#xD;&#xA;&#xD;&#xA; Note: this function is called cyclically by CmpTraceMgr and should normally &#xD;&#xA; not be called from an application.  Use TraceMgrPacketGetState instead to&#xD;&#xA; query the current trigger state.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if hPacket is not a valid trace packet&#xD;&#xA;   - ERR_NOTINITIALIZED if no trigger is defined or if the trigger is disabled&#xD;&#xA;   - ERR_FAILED if the check fails" ObjectGUID="{60b614b3-3e67-495b-8c61-665444be2109}" />
  <Node Name="TraceMgrGetConfigFromFileRelease" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function has to be called after |TraceMgrGetConfigFromFile|. It frees&#xD;&#xA; the dynamically allocated memory for the strings of the packet resp. record configuration.&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library) " ObjectGUID="{f61e8008-53d0-4697-bc2f-d900a541d3b1}" />
  <Node Name="TraceMgrGetConfigFromFile" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Loads a given trace file and returns the configuration it contains. After this function&#xD;&#xA; call a call to function |TraceMgrGetConfigFromFileRelease| is necessary to free the dynamically allocated&#xD;&#xA; memory.&#xD;&#xA;&#xD;&#xA; :return: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;   - ERR_PARAMETER if pszFileName is not a valid file path&#xD;&#xA;   - ERR_NOMEMORY if the memory is not sufficient for opening the file&#xD;&#xA;   - ERR_NOT_SUPPORTED if reading from files is not supported by the runtime system&#xD;&#xA;     or if an addressing mode is not supported (e.g. symbolic access)&#xD;&#xA;   - ERR_NO_OBJECT if opening the file failed&#xD;&#xA;   - ERR_FAILED if opening the file failed&#xD;&#xA;   - ERR_END_OF_OBJECT if either the packet configuration or the record configuration is incomplete&#xD;&#xA;   - ERR_NO_CHANGE if a NULL pointer was passed to parameter&#xD;&#xA;   - ERR_OUT_OF_LIMITS if the parameters ``pRecordConfiguration`` and ``iMaxRecordCount``&#xD;&#xA;     do not have enough memory to hold all the records from the file" ObjectGUID="{14a17018-d143-4a53-8cf2-7d2206e4b0e0}" />
  <Node Name="TRACE_VAR_ADDRESS_FLAGS" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Trace variable address flags.&#xD;&#xA; &#xD;&#xA; Usage: The flags mus be used in combination. Here are some typical combinations:&#xD;&#xA;  * TRACE_VAR_ADDRESS_FLAGS_IEC | TRACE_VAR_ADDRESS_FLAGS_AREA_OFFSET&#xD;&#xA;  * TRACE_VAR_ADDRESS_FLAGS_IEC | TRACE_VAR_ADDRESS_FLAGS_PROPERTY&#xD;&#xA;  * TRACE_VAR_ADDRESS_FLAGS_IEC | TRACE_VAR_ADDRESS_FLAGS_POINTER&#xD;&#xA;  * TRACE_VAR_ADDRESS_FLAGS_IEC | TRACE_VAR_ADDRESS_FLAGS_MONITORING&#xD;&#xA;  * TRACE_VAR_ADDRESS_FLAGS_IOCONFIG&#xD;&#xA;  * TRACE_VAR_ADDRESS_FLAGS_SYSTEM&#xD;&#xA;  * TRACE_VAR_ADDRESS_FLAGS_IEC | TRACE_VAR_ADDRESS_FLAGS_SYMBOLIC" ObjectGUID="{566e3a75-a2d6-40f3-8473-f44a61443996}" />
  <Node Name="TRACE_TRIGGER_STATE" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Trigger state" ObjectGUID="{870ab912-bb52-4971-adba-1b2f5940adab}" />
  <Node Name="TRACE_TRIGGER_FLAGS" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Trigger flags" ObjectGUID="{6b27552c-a8ac-4e6f-895c-4099ff2a13a8}" />
  <Node Name="TRACE_TRIGGER_EDGE" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Trigger edge" ObjectGUID="{d916f6da-63be-489d-93be-3e7cfe39d137}" />
  <Node Name="TRACE_RECORD_GRAPH_TYPES" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment="&#xD;&#xA; * Graph types. See |TraceRecordConfiguration|&#xD;&#xA; " ObjectGUID="{9afd1c78-4347-42d1-8c92-4071ee0d7ce1}" />
  <Node Name="TRACE_PACKET_STATE" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Trace state" ObjectGUID="{1169ca41-b63c-4d85-88bf-5d3ca6657638}" />
  <Node Name="TRACE_PACKET_FLAGS" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Trace packet flags" ObjectGUID="{bf284d47-75fd-483a-b371-dc02d80b5a27}" />
  <Node Name="Structs" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{53484896-97ba-4b83-97bd-f70950095926}" />
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="Project Information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="GlobalConstants" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{ef782e96-a62f-4635-9084-26f04a202c17}" />
  <Node Name="EventParameter" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{08b4f600-3fbe-498b-9ac7-b2ee0f79e607}" />
  <Node Name="ComponentId" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{61a71296-3b39-4b4c-9e67-cea520fcd5cc}" />
  <Node Name="Bibliotheksverwalter" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{8e9ccd54-fd4b-4721-9392-b7f8aa1d373f}" />
</Library>