<?xml version="1.0" encoding="utf-8"?>
<Library Name="Common Behaviour Model, 3.5.13.0 (3S - Smart Software Solutions GmbH)">
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{87881ba2-8bf9-427c-b64d-8f4281435376}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{4a3880ae-005e-4988-9c3a-953feae97621}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{f6e2db68-0643-4a4c-9c33-36a74f95141d}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{4d89da10-9dae-4f78-9c17-5831019222bd}" />
  <Node Name="ILConTo" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with a ``LConTo`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``LConTo`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with LConTo behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(ILConTo) &#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;   :Starting: ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;   :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;   :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;              | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;              | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;              | After a ``Error Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Abort Condition`` as input, only the output states&#xD;&#xA;              | ``Resetting`` or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;              | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;   :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;               | After that:&#xD;&#xA;               | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;               | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{e2351a5d-d595-4435-a9b4-4667fbf60afc}" />
  <Node Name="ILConTlTo" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with a ``LConTlTo`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``LConTlTo`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA;&#xD;&#xA; .. admonition:: A state chart for function blocks with LConTlTo behaviour&#xD;&#xA;&#xD;&#xA;    .. image:: @(ILConTlTo)&#xD;&#xA;       :width: 100%&#xD;&#xA;&#xD;&#xA;   :Starting: ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;   :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;   :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;              | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;              | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;              | After a ``Error Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Abort Condition`` as input, only the output states&#xD;&#xA;              | ``Resetting`` or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;              | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;   :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;               | After that:&#xD;&#xA;               | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;               | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{177028ca-4ed4-4cb6-bef7-bdfc9f186fb7}" />
  <Node Name="ILConTl" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with a ``LConTl`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``LConTl`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA;&#xD;&#xA; .. admonition:: A state chart for function blocks with LConTl behaviour&#xD;&#xA;&#xD;&#xA;    .. image:: @(ILConTl)&#xD;&#xA;       :width: 100%&#xD;&#xA;&#xD;&#xA;   :Starting: ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;   :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;   :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;              | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;              | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;              | After a ``Error Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Abort Condition`` as input, only the output states&#xD;&#xA;              | ``Resetting`` or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;              | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;   :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;               | After that:&#xD;&#xA;               | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;               | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``. " ObjectGUID="{0a773c93-5116-45ff-b234-59d082b14da9}" />
  <Node Name="ILCon" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with a ``LCon`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``LCon`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA;&#xD;&#xA; .. admonition:: A state chart for function blocks with LCon behaviour&#xD;&#xA;&#xD;&#xA;    .. image:: @(ILCon)&#xD;&#xA;       :width: 100%&#xD;&#xA;&#xD;&#xA;   :Starting: ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;   :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;   :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;              | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;              | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;              | After a ``Error Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Abort Condition`` as input, only the output states&#xD;&#xA;              | ``Resetting`` or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;              | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;   :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;               | After that:&#xD;&#xA;               | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;               | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{a2c872df-0d6d-48fd-85da-73e15b376146}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b3defa0d-fec9-47cf-9d06-8b955d568cc1}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{32179cec-bb88-4716-88fd-251726fa822b}" />
  <Node Name="ILConTlC" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with a ``LConTlC`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``LConTlC`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA;&#xD;&#xA; .. admonition:: A state chart for function blocks with LConTlC behaviour&#xD;&#xA;&#xD;&#xA;    .. image:: @(ILConTlC)&#xD;&#xA;       :width: 100%&#xD;&#xA;&#xD;&#xA;   :Starting: ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;   :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;   :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;              | After a ``Ready Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Error Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Abort Condition`` as Input, only the output states&#xD;&#xA;              | ``Resetting`` or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;              | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;   :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;               | After that:&#xD;&#xA;               | - the output ``xError`` will be set to ``FALSE``.&#xD;&#xA;               | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{c87ab51a-1a2a-4ee5-8295-0afeeacc3711}" />
  <Node Name="ILConC" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with a ``LConC`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``LConC`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with LConC behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(ILConC) &#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;   :Starting: ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;   :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;   :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;              | After a ``Ready Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Error Condition`` as input, only the output state&#xD;&#xA;              | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;              | After a ``Abort Condition`` as Input, only the output states&#xD;&#xA;              | ``Resetting`` or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;              | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;   :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;   :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;               | After that:&#xD;&#xA;               | - the output ``xError`` will be set to ``FALSE``.&#xD;&#xA;               | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{1c00d615-a937-45a2-a487-9bf84cc5a3b5}" />
  <Node Name="IStartActionProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The ``StartAction`` of this ``ActionProvider`` is called while the ``StateMachine`` of the ``BahaviourModel`` is in the state |STATE.STARTING|." ObjectGUID="{fbf016a2-bd10-4380-88e4-49e2709b9e9c}">
    <Node Name="StartAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The ``StartAction`` is running until either the output ``xComplete`` is ``TRUE`` or ``iErrorID`` ≠ 0 (Zero).&#xD;&#xA; If ``xComplete`` is ``TRUE`` the state |STATE.EXECUTING| is reached. If there is a ``iErrorID`` ≠  0 (Zero) the state |STATE.CLEANING| is reached.&#xD;&#xA;&#xD;&#xA; .. note::&#xD;&#xA;&#xD;&#xA;    To sample the inputs in the first invocation of a function block the method SampleAction is the solution of choice.&#xD;&#xA;    See: |ISampleActionProvider.SampleAction|&#xD;&#xA;" ObjectGUID="{92d98123-a1a6-4e73-9a9d-2accfedc26de}" />
  </Node>
  <Node Name="ISampleActionProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Optinal element of an |IActionProvider| for sampling the input variables in the first invocation.&#xD;&#xA; The ``StateMachine`` of the ``BahaviourModel`` will call its ``SampleAction`` once while switching from |STATE.DORMANT| to |STATE.STARTING|." ObjectGUID="{416cf97e-3684-42ed-b4bd-71688f4b5d40}">
    <Node Name="SampleAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" After leaving the state |STATE.DORMANT| the ``SampleAction`` is running one time then the state |STATE.STARTING| is reached.&#xD;&#xA; If there is a ``iErrorID`` ≠  0 (Zero) the state |STATE.CLEANING| is reached instead." ObjectGUID="{91b4462f-edad-4f71-a5e5-a9920700da13}" />
  </Node>
  <Node Name="IResetActionProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The ``ResetAction`` of this ``ActionProvider`` is called while the ``StateMachine`` of the ``BahaviourModel`` is in the state |STATE.RESETTING|." ObjectGUID="{245169cb-fb52-4ea0-96a3-417db0d8ae77}">
    <Node Name="ResetAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The ``ResetAction`` is running until the output ``xComplete`` is ``TRUE``.&#xD;&#xA; If ``xComplete`` is ``TRUE`` the state |STATE.DORMANT| is reached." ObjectGUID="{70912172-78e9-4f2f-9db2-5aedd8ee9885}" />
  </Node>
  <Node Name="IExitActionProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Optinal element of an |IActionProvider| for the handling of external resources.&#xD;&#xA; The ``StateMachine`` of the ``BahaviourModel`` will call its ``ExitAction`` once while switching from |STATE.CLEANING| to |STATE.DONE|, |STATE.ERROR| or |STATE.ABORTED|.&#xD;&#xA; The implementation should provide the code conditioned for the additional call in the context of ``FB_EXIT``." ObjectGUID="{7508192a-05ca-449b-bb59-1652b4038277}">
    <Node Name="ExitAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" This method is intended for releasing external resources (like RTS handles).&#xD;&#xA; Do not call other internal function block instances in the context of this method.&#xD;&#xA; Call only external functions defined inside the RTS.&#xD;&#xA; For cleaning up other resources then external ones, please use the ``CleanupAction``.&#xD;&#xA; This method should be callable in the context of ``FB_EXIT`` for example&#xD;&#xA; before downloading a new application or before reseting an application." ObjectGUID="{28eafe10-d294-4e84-b6ec-66548dedb4f3}" />
  </Node>
  <Node Name="ICyclicActionProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The ``CyclicAction`` of this ``ActionProvider`` is called while the ``StateMachine`` of the ``BahaviourModel`` is in the state |STATE.EXECUTING|." ObjectGUID="{80295c98-5a83-4645-8b02-63a45d96f612}">
    <Node Name="CyclicAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The CyclicAction is running until either ``xComplete`` is ``TRUE`` or ``iErrorID`` ≠  0 (Zero).&#xD;&#xA; If ``xComplete`` is ``TRUE`` or ``iErrorID`` ≠  0 (Zero) the state |STATE.CLEANING| is reached.&#xD;&#xA; With ``itfTimingController`` ≠  0 (Zero) it is possible to check the current invocation time (see: |ITimingController.ControllerCheckTiming|).&#xD;&#xA; Function blocks with a ``udiTimeLimit`` input variable (see: |IETrigTl|, |IETrigATl|, |IETrigTlTo|, |IETrigATlTo|, |ILConTl|, |ILConTlTo|, |ILConTlC|) should be implement in such a way that the current&#xD;&#xA; invocation is exited when the consumed time for this invocation has exceeded the settings from udiTimeLimit.&#xD;&#xA;&#xD;&#xA; .. admonition:: Example&#xD;&#xA;&#xD;&#xA;     .. code-block:: codesys&#xD;&#xA;     &#xD;&#xA;         REPEAT&#xD;&#xA;             // working to reach the ready condition&#xD;&#xA;             // ⇒ xComplete := TRUE&#xD;&#xA;             // if the maximum invocation time is reached&#xD;&#xA;             // ⇒ xTimeLimit := TRUE&#xD;&#xA;             // if the maximum operating time is reached&#xD;&#xA;             // ⇒ xTimeOut := TRUE&#xD;&#xA;             // if an error condition is reached&#xD;&#xA;             // ⇒ set iErrorID to a value other than 0 (Zero)&#xD;&#xA;             itfTimingController.ControllerCheckTiming(&#xD;&#xA;                 xTimeOut=&gt;xTimeOut,&#xD;&#xA;                 xTimeLimit=&gt;xTimeLimit&#xD;&#xA;             );&#xD;&#xA;         &#xD;&#xA;             xComplete := TRUE;&#xD;&#xA;             iErrorID := ERROR.NO_ERROR;&#xD;&#xA;     &#xD;&#xA;         UNTIL xComplete OR&#xD;&#xA;               xTimeOut OR xTimeLimit OR&#xD;&#xA;               iErrorID &lt;&gt; ERROR.NO_ERROR&#xD;&#xA;         END_REPEAT&#xD;&#xA;     " ObjectGUID="{0dc51558-7c6a-4a67-afa6-bb276f3dd02e}" />
  </Node>
  <Node Name="ICleanupActionProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The ``CleanupAction`` of this ``ActionProvider`` is called while the ``StateMachine`` of the ``BahaviourModel`` is in the state |STATE.CLEANING|." ObjectGUID="{405cd5bc-bcbd-43e1-b81b-e5f6227e7a24}">
    <Node Name="CleanupAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" ``CleanupAction`` is running until one of the following events occurs:&#xD;&#xA; When ``xComplete`` is ``TRUE`` the state |STATE.DONE| is reached.&#xD;&#xA; When ``xAbort`` is ``TRUE`` the state |STATE.ABORTED| is reached.&#xD;&#xA; When ``iErrorID`` ≠ 0 (Zero) the state |STATE.ERROR| is reached.&#xD;&#xA;&#xD;&#xA; | After a *Ready Condition* as input (``iErrorIDProposed`` = 0 and ``xAbortProposed`` = ``FALSE``), only the output states&#xD;&#xA; | `DONE` (``xComplete`` is ``TRUE``) or `ERROR` (``iErrorID`` ≠ 0) are possible.&#xD;&#xA;&#xD;&#xA; | After a *Error Condition* as input (``iErrorIDProposed`` ≠ 0), only the output state&#xD;&#xA; | `ERROR` (``iErrorID`` ≠ 0) is possible.&#xD;&#xA;&#xD;&#xA; | After a *Abort Condition* as Input (``xAbortProposed`` = ``TRUE``), only the output states&#xD;&#xA; | `ABORTED` (``xAbort`` is ``TRUE``) or `ERROR` (``iErrorID`` ≠ 0) are possible.&#xD;&#xA;&#xD;&#xA; .. admonition:: Example&#xD;&#xA;&#xD;&#xA;     .. code-block:: codesys&#xD;&#xA;     &#xD;&#xA;         (* common cleanup -- first steps *) &#xD;&#xA;         &#xD;&#xA;         IF xComplete THEN&#xD;&#xA;             IF xAbortProposed THEN&#xD;&#xA;                 (* abort condition -- abort specific cleanup *)&#xD;&#xA;                 xAbort := TRUE;&#xD;&#xA;                 xComplete := FALSE;&#xD;&#xA;             ELSIF iErrorIDProposed &lt;&gt; 0 THEN&#xD;&#xA;                 (* error condition -- error specific cleanup *)&#xD;&#xA;                 iErrorID := SEL(xComplete, 0, iErrorIDProposed);&#xD;&#xA;                 xComplete := FALSE;&#xD;&#xA;             ELSE&#xD;&#xA;                 (* ready condition -- done specific cleanup*)&#xD;&#xA;             END_IF&#xD;&#xA;         END_IF&#xD;&#xA;&#xD;&#xA;         (* common cleanup -- last steps *) " ObjectGUID="{c80fa471-dbff-4c48-b8db-f01c6843b556}" />
  </Node>
  <Node Name="IActionProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{eb813656-2307-43ab-85e6-b2d3b5058088}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b8c4dcd4-5d73-4e85-9485-163ffb311ded}" />
  <Node Name="IActionProvider" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{a0b92652-3516-4c25-a811-c6212e74cd52}" />
  <Node Name="IActionProvider" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{3b98af1c-6fb1-4027-859b-4e037866f7a7}" />
  <Node Name="IActionProvider" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{5376fdf4-e98c-4cb3-b27e-90ab75f9951e}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{10084cf6-66f9-45a1-a184-08b39a4dffe1}" />
  <Node Name="IActionProvider" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{ae974a5f-343f-497e-b0d7-480dca69e1c9}" />
  <Node Name="LConTo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Level Controlled Behavior Model` (see: |ILConTo|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{bca4044c-4423-4d44-972b-88b631afed26}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ea0d1c00-4a76-4974-a9eb-b2565a67cfde}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6a6f9083-7d2a-481b-a891-b544d7a3193c}" />
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{600dfe0b-ad4a-4a82-97d7-2b2c399ec54d}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{44aaf9de-aa34-4c81-863a-e4fc750f2608}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{98821747-0193-41e9-8947-29381570bb20}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7636de58-ab2c-4d0b-9b26-bd5098ec00c0}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{099dad78-2504-464d-8cd9-6e3c4e7620b3}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1948bf82-e6fa-4c6e-b671-7a13919c5ef6}" />
  </Node>
  <Node Name="LConTlTo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Level Controlled Behavior Model` (see: |ILConTlTo|)&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{7781fdab-d792-4cc9-8d8c-5a77edefc0b8}">
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{071e8914-6fd2-4827-99db-d8a7a2b16553}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{90a9f302-1794-4fb5-81f9-f08b457cd7ec}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{8f4048aa-d34a-4adb-83ef-e35bd32db5e5}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2d847535-4ded-42d6-bb01-8e6d38197713}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c9766263-dd85-422a-b891-b687d7dd2318}" />
  </Node>
  <Node Name="LConTl" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Level Controlled Behavior Model` (see: |ILConTl|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{4966c070-314b-4586-8013-1ef6c7219383}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{67721a73-13c9-4c75-a7bb-6c0a83c6fc5a}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2aea3360-e7d9-47fd-a3ef-555e89d27892}" />
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{b75cc7c0-9e3c-4a1a-b44c-eb2ef483b2da}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ebd58db1-17a8-49b3-b594-87e099e245ba}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{901cf8b4-adad-47ab-a79a-6e6e8b1b1759}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{56625f07-d75f-44fb-895d-9f920abdcaae}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a16aaabb-bec4-45ad-aafc-6427ec9ee53f}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2349f27e-9ef3-454f-a8e7-dfe77d320639}" />
  </Node>
  <Node Name="LCon" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Level Controlled Behavior Model` (see: |ILCon|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{7a72bffb-0157-4620-9f00-5019de80b2a5}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e0b0ff2e-5e22-4a0b-a381-a383876727e6}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9173d063-7408-4325-bb6d-8eaabd0ef227}" />
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{0c415a61-5870-48fe-8531-2ec102da4a52}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{541f3a65-7bc2-48d8-89c0-52aaa1bedb81}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{4c371ed3-635b-4814-8701-e5c509efc64f}" />
  </Node>
  <Node Name="Interfaces" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{90f788ce-a650-42b1-8590-b3249d7385f4}" />
  <Node Name="LConTlC" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Level Controlled Behavior Model` (see: |ILConTlC|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{68e1e521-6596-4def-a2c9-16b3a0eccc8d}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e44ba32b-3aa2-4f54-b94c-386bbcbd8ad0}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1c0f1839-918a-40a4-a660-4c6b2bcd312d}" />
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{af3d5064-921e-4eb4-9357-f77f326a01fe}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d2985b51-7a34-430a-9049-b2bec024fba9}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{25d4420b-0bd4-47bb-a00b-16d9f6ef9d2d}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b1b5a15a-aa64-4d5e-8e80-163e00b76ee1}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{50fff757-73cc-4c42-a871-39baae0e89a9}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{dd62168d-d5c1-4e5e-8335-0caf2a5875b1}" />
  </Node>
  <Node Name="LConC" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Level Controlled Behavior Model` (see: |ILConC|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{bfdedf12-e566-4450-a151-a8a1353f6e23}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a029dc78-c663-4183-8164-d161f34f755f}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c78631cd-728e-4d4a-823e-0a530d498d75}" />
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c7b911cb-0267-4299-98a9-b30756395b15}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ff3b3734-8256-41dd-9f0e-f4bc4f2bd742}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{433c5522-d511-41e7-a009-372f5458df3c}" />
  </Node>
  <Node Name="Interfaces" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{48611490-a2cf-4c6a-92b9-248b522cceaa}" />
  <Node Name="IETrigTo" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrigTo`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrigTo`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with ETrigTo behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(IETrigTo) &#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{b699f3ea-2b36-4e6c-a8f5-e7545190f590}" />
  <Node Name="IETrigTlTo" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrigTlTo`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrigTlTo`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA;&#xD;&#xA; .. admonition:: A state chart for function blocks with ETrigTlTo behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(IETrigTlTo) &#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``. " ObjectGUID="{8859e807-660b-4705-b018-a0105bbc3e86}" />
  <Node Name="IETrigTl" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrigTl`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrigTl`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with ETrigTl behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(IETrigTl)&#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{f4df0f8d-0a0a-4559-a574-f40f709e7582}" />
  <Node Name="IETrigATo" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrigATo`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrigATo`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA;&#xD;&#xA; .. admonition:: A state chart for function blocks with ETrigATo behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(IETrigATo)  &#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;               | After a ``Abort Condition`` as Input, only the output states&#xD;&#xA;               | ``Aborted`` (``xAbort`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;               | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Aborted: ``xAborted`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone``, ``xError`` and ``xAborted`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{04bbcd4a-8135-40bf-aab0-f1b9d24755ae}" />
  <Node Name="IETrigATlTo" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrigATlTo`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrigATlTo`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with ETrigATlTo behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(IETrigATlTo) &#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;               | After a ``Abort Condition`` as Input, only the output states&#xD;&#xA;               | ``Aborted`` (``xAbort`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;               | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Aborted: ``xAborted`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone``, ``xError`` and ``xAborted`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{e73a9372-4409-4bd4-96ae-a50a7774b905}" />
  <Node Name="IETrigATl" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrigATl`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrigATl`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with ETrigATl behaviour&#xD;&#xA; &#xD;&#xA;    .. image:: @(IETrigATl) &#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;               | After a ``Abort Condition`` as Input, only the output states&#xD;&#xA;               | ``Aborted`` (``xAbort`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;               | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Aborted: ``xAborted`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone``, ``xError`` and ``xAborted`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{acc4a34a-3d8a-4b2b-8cd3-04d46ab2f0a4}" />
  <Node Name="IETrigA" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrigA`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrigA`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with ETrigA behaviour&#xD;&#xA;&#xD;&#xA;    .. image:: @(IETrigA)&#xD;&#xA;       :width: 100%&#xD;&#xA;&#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;               | After a ``Abort Condition`` as Input, only the output states&#xD;&#xA;               | ``Aborted`` (``xAbort`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are  possible.&#xD;&#xA;               | (``xBusy`` is still ``TRUE``!)&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Aborted: ``xAborted`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone``, ``xError`` and ``xAborted`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{9e7d6c08-73c4-4f2c-954a-bb99cd9f5113}" />
  <Node Name="IETrig" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" In order to build a function block with an ``ETrig`` behaviour, its action provider has to be decorated with this interface.&#xD;&#xA; This will determine the state machine which then forces the function block to the appropriate ``ETrig`` behaviour.&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Behaviour Model.fld-Decorators` for more information about the concept.&#xD;&#xA; &#xD;&#xA; .. admonition:: A state chart for function blocks with ETrig behaviour&#xD;&#xA;&#xD;&#xA;    .. image:: @(IETrig)&#xD;&#xA;       :width: 100%&#xD;&#xA;&#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.              &#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running. At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{95e21589-5563-4397-9dd9-39180bcd72b9}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{48daa706-1f97-43f2-9269-53491d7c5d18}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6ff7a2e8-45c8-4c30-88f2-8502dcb3deb0}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{8128454f-3460-40b9-a196-ce402741a67f}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{9405abb6-c27f-4dc4-a816-81b05b874901}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{26960e90-6907-45d4-ab40-5999b8784629}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c0a4c214-aff4-4ff7-828b-e867aba3bf08}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{fdd9289c-4d1f-4cad-8547-a9f04b6c80db}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c82fced4-b213-4d12-ac64-191e4d4ebb1f}" />
  <Node Name="ITimingController" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Applied whenever the timing related behaviour needs to be checked, for&#xD;&#xA; example, if a specific time limit is required." ObjectGUID="{bf085e39-ad9a-4658-ad0c-7b937bb1cbdd}">
    <Node Name="StartOperationTimer" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Starts the measurement of the operation time " ObjectGUID="{ca4021b6-58a9-44b6-9b48-e0190b9bf9a5}" />
    <Node Name="StartInvocationTimer" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Starts the measurement of the invocation time " ObjectGUID="{60299251-6a15-43f9-b352-d15ba7c46cd0}" />
    <Node Name="CurrentControllerTime" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{488bca37-2cbf-4385-ad70-83d39290942b}">
      <Node Name="Get" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{963910fa-7a1c-45d1-ae7d-9e38d81ba2ea}" />
    </Node>
    <Node Name="ControllerTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{dbd5e732-1040-4f29-bb16-ed865f9e26a9}">
      <Node Name="Set" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{73dab28e-9e87-4120-a93d-2ab7813eabc9}" />
      <Node Name="Get" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{b9872a2f-a0b4-4937-ba7e-9aec62710ce6}" />
    </Node>
    <Node Name="ControllerTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{ebc2f5e9-bd53-4c4e-adf3-48331c0d21a0}">
      <Node Name="Set" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{c7661785-e744-4c74-a05f-fb9cebf4fb5b}" />
      <Node Name="Get" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{41999ca2-d8d2-40d1-a693-88368ea998a9}" />
    </Node>
    <Node Name="ControllerCheckTiming" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Evaluates the current state of the timing controller" ObjectGUID="{f4de822d-4d03-4c52-a764-b3e1d5972095}" />
  </Node>
  <Node Name="IConfigurationProvider2" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Allows to identify the current configuration of an action provider" ObjectGUID="{5979d587-efb1-473b-a8d3-2a9180fbde8b}">
    <Node Name="GetConfiguration2" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Identifies the current configuration of an action provider, if connencted to the behaviour model&#xD;&#xA;&#xD;&#xA; An output returning ``TRUE`` signalizes that the corresponding behaviour has been implemented for the related action provider." ObjectGUID="{b96ab162-165d-44ad-bf31-46b2608a2c92}" />
  </Node>
  <Node Name="IConfigurationProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Allows to identify the current configuration of an action provider" ObjectGUID="{57e0de06-8f55-4a85-a4c4-26c7e57a5eef}">
    <Node Name="GetConfiguration" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Identifies the current configuration of an action provider, if connencted to the behaviour model&#xD;&#xA;&#xD;&#xA; An output returning ``TRUE`` signalizes that the corresponding behaviour has been implemented for the related action provider." ObjectGUID="{302eb221-7a61-4867-90e6-1e375c996fa3}" />
  </Node>
  <Node Name="IBehaviourModel" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Implemented by the function block |BehaviourModel|.&#xD;&#xA;&#xD;&#xA; This interface provides all methods and properties which are necessary for controlling a&#xD;&#xA; ``BehaviourModel`` instance via interface reference variables.&#xD;&#xA;&#xD;&#xA; When operating via an interface reference variable it should be possible to decide exactly when the state machine is called.&#xD;&#xA; For this the methods ``StartModel``, ``AbortModel``, ``ResetModel`` and ``GetModelState`` has a parameter ``xCommit``.&#xD;&#xA; Calling one of these methods with the value ``xCommit:=FALSE`` will only prepare the state changes and will not trigger the state machine to execute the related actions for changing the state.&#xD;&#xA; Calling one of these methods with the value ``xCommit:=TRUE`` will prepare the state changes and will then trigger the state machine to execute the necessary action to reach the next stable state.&#xD;&#xA; It is important to know, that the state machine sometimes needs more than one invocation to transit from on state to the next stable state.&#xD;&#xA; With this in mind the following code example might be useful for handling a common behaviour model via an interface reference variable.&#xD;&#xA;&#xD;&#xA; .. admonition:: A code example for handling a common behaviour model via an interface reference variable&#xD;&#xA; &#xD;&#xA;  .. code-block:: codesys&#xD;&#xA;     :linenos:&#xD;&#xA; &#xD;&#xA;     VAR&#xD;&#xA;         itfBehaviourModel : CBML.IBehaviourModel;&#xD;&#xA;         eState : CBML.STATE;&#xD;&#xA;         /// Some variable to trigger the abort of the behaviour model&#xD;&#xA;         xSignal : BOOL;&#xD;&#xA;     END_VAR&#xD;&#xA; &#xD;&#xA;     CASE eState OF&#xD;&#xA;         CBML.STATE.DORMANT:&#xD;&#xA;             (* Prepare execting *)&#xD;&#xA;             itfBehaviourModel.StartModel(xCommit:=FALSE);&#xD;&#xA; &#xD;&#xA;         CBML.STATE.DONE:&#xD;&#xA;             (* Handle the ``Done`` state *)&#xD;&#xA;             itfBehaviourModel.ResetModel(xCommit:=FALSE);&#xD;&#xA; &#xD;&#xA;         CBML.STATE.ABORTED:&#xD;&#xA;             (* Handle the ``Aborted`` state *)&#xD;&#xA;             itfBehaviourModel.ResetModel(xCommit:=FALSE);&#xD;&#xA; &#xD;&#xA;         CBML.STATE.ERROR:&#xD;&#xA;             (* Handle the ``Error`` state *)&#xD;&#xA;             itfBehaviourModel.ResetModel(xCommit:=FALSE);&#xD;&#xA;     END_CASE&#xD;&#xA; &#xD;&#xA;     IF xSignal AND&#xD;&#xA;        eState = CBML.STATE.STARTING OR&#xD;&#xA;        eState = CBML.STATE.EXECUTING&#xD;&#xA;     THEN&#xD;&#xA;         itfBehaviourModel.AbortModel(xCommit:=FALSE);&#xD;&#xA;     END_IF&#xD;&#xA; &#xD;&#xA;     itfBehaviourModel.GetModelState(xCommit:=TRUE, eState=&gt;eState);&#xD;&#xA; &#xD;&#xA; There is a very important aspect of this code example: The state machine should definitely be called/triggered only once in a PLC cycle!&#xD;&#xA;" ObjectGUID="{cb56d6dd-1234-4a4f-ae14-d651e38b7693}">
    <Node Name="StartModel" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The parameter ``xCommit`` allows to call the state machine whenever it is needed.&#xD;&#xA; When ``xCommit`` is ``FALSE``, the state change to |STATE.STARTING| is being prepared but not executed yet.&#xD;&#xA; When ``xCommit`` is ``TRUE``, the state change to |STATE.STARTING| is being prepared as well as executed." ObjectGUID="{3bb4fcb3-ee10-4b1e-8cc4-146cd1b50151}" />
    <Node Name="ResetModel" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The parameter ``xCommit`` allows to call the state machine whenever it is needed.&#xD;&#xA; When ``xCommit`` is ``FALSE``, the state change to |STATE.RESETTING| is being prepared but not executed yet.&#xD;&#xA; When ``xCommit`` is ``TRUE``, the state change to |STATE.RESETTING| is being prepared as well as executed." ObjectGUID="{3c294a58-b160-4092-b471-466ab1b5f251}" />
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{26d8936a-57ef-46cf-bbf5-429a30e19191}">
      <Node Name="Set" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{17859219-5ed4-4f96-9a01-9e4d29fac1d8}" />
      <Node Name="Get" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{d663becb-0bb3-442b-8b95-be7b46daac07}" />
    </Node>
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{3c9b7114-226a-403a-a207-2c21c0de95bb}">
      <Node Name="Set" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{3c392da4-634e-4d3a-aeac-5aef1195a431}" />
      <Node Name="Get" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{7a857f64-9e1e-4f87-8100-f149b91ddcfd}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" With the method ``GetModelState`` the behaviour model offers to access the states of the state machine.&#xD;&#xA; The current states can then be looked into." ObjectGUID="{94a7e8e7-acbe-40bd-b3d3-6af11d525c17}" />
    <Node Name="ActionController" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{18a801af-1451-4491-bd2b-6c19fbab11dd}">
      <Node Name="Set" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{c748d26f-f4ea-41a1-8701-90abba0cf43e}" />
      <Node Name="Get" TypeGUID="{28747452-a93d-4b34-8d05-d2c6018edd7d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{92cc8516-2afd-4813-8fc2-9c286e6dd59f}" />
    </Node>
    <Node Name="AbortModel" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The parameter ``xCommit`` allows to call the state machine whenever it is needed.&#xD;&#xA;&#xD;&#xA; When ``xCommit`` is ``FALSE``, the state change to |STATE.CLEANING| is being prepared but not executed yet.&#xD;&#xA; When ``xCommit`` is ``TRUE``, the state change to |STATE.CLEANING| is being prepared as well as executed." ObjectGUID="{4e799ef2-916c-45ad-8b50-279e1b3c7b64}" />
  </Node>
  <Node Name="IActionProvider" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{427274ae-b82c-4165-8afe-567db143635d}" />
  <Node Name="IActionController2" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{74bb7e4b-796c-4b4b-b51c-ece3fea8e306}">
    <Node Name="ControlSampleAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" An action controller is used whenever it is necessary to have the actions of the action controller&#xD;&#xA; instead of those of the action provider called. ``ControlSampleAction`` is the action controller&#xD;&#xA; specifically used to control the first invocation of the |STATE.STARTING| state." ObjectGUID="{d8304014-802f-49be-9a05-9b047b273bba}" />
  </Node>
  <Node Name="IActionController" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" The behaviour of an action provider can mostly be influenced by an action controller.&#xD;&#xA; An action controller implements the ``IActionController`` interface and can be connected to a ``BehaviourModel`` instance via the ``ActionController`` property of the ``IBehaviourModel`` interface.&#xD;&#xA; If an action controller is connected to a ``BehaviourModel`` instance, the state machine will call the methods of the action controller instead of the methods of the action provider.&#xD;&#xA; The methods of the action controller will be called from the state machine parameterized with the related action provider method.&#xD;&#xA; So the action controller can encapsulate the original methods of the action controller and so create some specific modifications of their behaviour.&#xD;&#xA;&#xD;&#xA; .. admonition:: The exemplary implementation of the method ControlCleanupAction of an ActionController function block instance&#xD;&#xA; &#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;       :linenos:&#xD;&#xA; &#xD;&#xA;       METHOD ControlCleanupAction&#xD;&#xA;       VAR_INPUT&#xD;&#xA;           itfCleanupActionProvider : ICleanupActionProvider;&#xD;&#xA;           xAbortProposed : BOOL;&#xD;&#xA;           iErrorIDProposed: INT;&#xD;&#xA;       END_VAR&#xD;&#xA;       VAR_OUTPUT&#xD;&#xA;           xComplete : BOOL;&#xD;&#xA;           xAbort: BOOL;&#xD;&#xA;           iErrorID : INT;&#xD;&#xA;       END_VAR&#xD;&#xA; &#xD;&#xA;       (* Do some specific action before calling the original CleanupAction *)&#xD;&#xA; &#xD;&#xA;       itfCleanupActionProvider.CleanupAction(&#xD;&#xA;           xAbortProposed:=xAbortProposed,&#xD;&#xA;           iErrorIDProposed:=iErrorIDProposed,&#xD;&#xA;           xComplete=&gt;xComplete, // signal ready contition&#xD;&#xA;           xAbort=&gt;xAbort,  // signal abort condition&#xD;&#xA;           iErrorID=&gt;iErrorID // signal error condition&#xD;&#xA;       );&#xD;&#xA; &#xD;&#xA;       (* Do some specific action after calling the original CleanupAction *)&#xD;&#xA;" ObjectGUID="{bc987b7d-c9a1-486e-86ae-4cfea4adde59}">
    <Node Name="ControlStartAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" An action controller is used whenever it is necessary to have the actions of the action controller&#xD;&#xA; instead of those of the action provider called. ``ControlStartAction`` is the action controller&#xD;&#xA; specifically used to control the |STATE.STARTING| state." ObjectGUID="{7ed5707a-c451-4de6-8d0b-2aa140c24010}" />
    <Node Name="ControlResetAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" An action controller is used whenever it is necessary to have the actions of the action controller&#xD;&#xA; instead of those of the action provider called. ``ControlResetAction`` is the action controller&#xD;&#xA; specifically used to control the |STATE.RESETTING| state." ObjectGUID="{a084f8fa-62de-4e90-816e-4fccdaa4e5ba}" />
    <Node Name="ControlExitAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Intended for releasing external resources (like RTS handles)&#xD;&#xA;&#xD;&#xA; Do not call other internal function block instances in the context of this method.&#xD;&#xA; Call only external functions defined inside the RTS.&#xD;&#xA; For cleaning up other resources than external ones, please use the ``CleanupAction``.&#xD;&#xA; This method should be callable in the context of ``FB_EXIT`` for example&#xD;&#xA; before downloading a new application or before reseting an application." ObjectGUID="{2c3c91f5-f8d7-4969-ad01-903b17713de6}" />
    <Node Name="ControlCyclicAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" An action controller is used whenever it is necessary to have the actions of the action controller&#xD;&#xA; instead of those of the action provider called. ``ControlCyclicAction`` is the action controller&#xD;&#xA; specifically used to control the |STATE.EXECUTING| state." ObjectGUID="{c16839bc-8aea-45fd-809e-42e7dc26ebc9}" />
    <Node Name="ControlCleanupAction" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" An action controller is used whenever it is necessary to have the actions of the action controller&#xD;&#xA; instead of those of the action provider called. ``ControlCleanupAction`` is the action controller&#xD;&#xA; specifically used to control the |STATE.CLEANING| state." ObjectGUID="{779d2d38-c2fe-46c6-ad61-46832d9b1351}" />
  </Node>
  <Node Name="TimingControlledBehaviourModelBase" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{fb79d79d-25f5-4a36-b23d-29f704072047}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{39575c0a-8e25-45ba-a175-0fff2bd159dc}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{71e638de-b6aa-401b-ba16-a37d3c5c0f76}" />
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{7aa03b2b-e400-45a4-88d8-355fb1455e09}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{fdc45ab3-13fe-4fa9-a600-a6fd3b75823b}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{40a1a3ff-ecf9-4930-8734-7d4bcc3cd6e8}" />
    </Node>
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{ae36fdda-bb11-40a7-a588-24eaf66f2701}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e29911b5-6902-4a07-be60-ac61a0010774}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b992f0ff-569c-4ff0-945a-b7cfb776d673}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{dc51cadb-4688-4de9-854a-07ea18a734f3}" />
    <Node Name="GetConfiguration2" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Identifies the current configuration of an action provider, if connencted to the behaviour model&#xD;&#xA;&#xD;&#xA; An output returning ``TRUE`` signalizes that the corresponding behaviour has been implemented for the related action provider." ObjectGUID="{0d994d09-bc32-4fb3-acd8-ddd83082c46b}" />
    <Node Name="GetConfiguration" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Identifies the current configuration of an action provider, if connencted to the behaviour model&#xD;&#xA;&#xD;&#xA; An output returning ``TRUE`` signalizes that the corresponding behaviour has been implemented for the related action provider." ObjectGUID="{dc008e64-403f-43b3-a7e3-4778f97acaaa}" />
    <Node Name="ActionController" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{c2485ab8-ddf4-4410-8f46-7af40eb0ab05}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{25f9ef84-eaf5-4370-9d1f-0f452491875d}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2a236d5a-a99b-4379-bd9b-fc5b1fe2c256}" />
    </Node>
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2c9caaec-286a-4ec1-9be1-b1721690ac3a}" />
    <Node Name="StartAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5bbccb4d-429a-402c-86af-9f5fa1dbaa83}" />
    <Node Name="ResetAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1bd94593-e9dd-4909-b933-5f5947e83a45}" />
    <Node Name="ExitAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a28b12b8-e251-4585-ba9c-e5810a7dc2b6}" />
    <Node Name="CyclicAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{790b14b8-4716-40e4-9543-05dc923d6baa}" />
    <Node Name="CleanupAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{55dba96b-a74a-4b2c-8571-2afffb663126}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{118bbc14-5619-4121-a9e5-f42512c7451d}" />
    <Node Name="FB_EXIT" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{90d5dcf1-1cd3-4635-ae2e-76ed1402bd71}" />
  </Node>
  <Node Name="EdgeTriggeredTimingControlledBehaviourModelBase" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a93fa081-92af-4ef8-9921-b10d65f067aa}">
    <Node Name="SampleAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" See: |ISampleActionProvider.SampleAction|" ObjectGUID="{b779db8a-d99c-47a1-9498-87749dbbeb2d}" />
  </Node>
  <Node Name="EdgeTriggeredBehaviourModelBase" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2641db0e-05d8-4e09-8996-c19bd3bcb238}">
    <Node Name="SampleAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" See: |ISampleActionProvider.SampleAction|" ObjectGUID="{70f4fc0b-937d-4bb0-8f56-5fd0c739a18a}" />
  </Node>
  <Node Name="BehaviourModelBase" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9bdc6be1-45c3-4e8f-a9f3-b0f04f12bdbc}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{be6a98c1-f47f-46ce-aad3-789575434aad}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f14c543c-6856-405d-ba99-f3af15e1f3a7}" />
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{fb8c78b7-a961-4034-bf1e-2754965467fb}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{375bec25-915f-4c00-8e98-676f59039646}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{88259d78-86b2-41a2-ae2c-367111b11041}" />
    </Node>
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{ca5d8c93-b74d-4d9d-a463-59e915583427}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1890f1ff-087c-4493-89d1-c56c903fc037}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{34073245-49a6-47be-97cf-b7908ee6596b}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f0ba4d55-5468-4a5c-9203-10a21ee57230}" />
    <Node Name="GetConfiguration2" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Identifies the current configuration of an action provider, if connencted to the behaviour model&#xD;&#xA;&#xD;&#xA; An output returning ``TRUE`` signalizes that the corresponding behaviour has been implemented for the related action provider." ObjectGUID="{16c9246a-2534-40e6-b08d-4a3ba72935d8}" />
    <Node Name="GetConfiguration" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2fa90096-64d5-4de9-9db1-2ca21a52dbcb}" />
    <Node Name="ActionController" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{2ba14efb-a0ae-4d98-a5da-aa6d95bda9d4}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7272766c-cae4-46ff-9b8e-60fa147b30b6}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d2dac6d4-e638-4032-8fdd-21c72ab68f70}" />
    </Node>
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{eae02fa1-7466-4a8b-b125-af4fbbab3e35}" />
    <Node Name="StartAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{45719353-6fc3-485a-8d52-77e43dcd65cd}" />
    <Node Name="ResetAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{dbd329f5-abdb-41a1-8e4c-8941ebe81ec8}" />
    <Node Name="ExitAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9a6ebc10-1440-4c89-9474-01999b05190e}" />
    <Node Name="CyclicAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5ff10674-353e-4d48-87fd-bf9c349239e1}" />
    <Node Name="CleanupAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1432e7c5-be7d-4b38-8469-5cfa814f80e8}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{30b9e9a1-7db8-4b2e-a059-171ffec1e74d}" />
    <Node Name="FB_EXIT" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{785cc01e-bfdc-4ba8-b94e-0d4541b5ed09}" />
  </Node>
  <Node Name="STATE" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Every state listed below is represented by an element in the state chart.&#xD;&#xA; &#xD;&#xA; The `PLCopen` defines two different variables (``xEnable``/``xExecute``) for starting a function block depending on its type.&#xD;&#xA; For this reason a neutral name ``xControl`` has been chosen. The ``xControl`` input variable can act as a ``xExecute`` or an ``xEnable`` input variable.&#xD;&#xA; This depends on how the related action provider is decorated. If the action provider is decorated with |IEdgeTriggered|&#xD;&#xA; then the ``xControl`` input variable acts as an ``xExecute``. If the action provider is decorated with |ILevelControlled| then&#xD;&#xA; the ``xControl`` input variable acts as an ``xEnable``.&#xD;&#xA;&#xD;&#xA;     .. image:: @(STATE)&#xD;&#xA;       :width: 100%&#xD;&#xA; &#xD;&#xA;    :Dormant: ⇒ Waiting for ``xControl`` (``xEnable``/``xExecute``)&#xD;&#xA;    :Starting: | ⇒ ``StartAction`` is running, until ``xComplete`` is ``TRUE``, ``xBusy`` ⇒ ``TRUE``.&#xD;&#xA;               | At its beginning the ``SampleAction`` is probably executed one time.&#xD;&#xA;    :Executing: ⇒ ``CyclicAction`` is running until ``xComplete`` is ``TRUE``&#xD;&#xA;    :Cleaning: | ⇒ ``CleanupAction`` is running.&#xD;&#xA;               | At its end the ``ExitAction`` is probably executed one time.&#xD;&#xA;               | After a ``Ready Condition`` as input, only the output states&#xD;&#xA;               | ``Done`` (``xComplete`` is ``TRUE``) or ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) are possible.&#xD;&#xA;               | After a ``Error Condition`` as input, only the output state&#xD;&#xA;               | ``Error`` (``eErrorID`` ≠ ``ERROR.NO_ERROR``) is possible.&#xD;&#xA;    :Done: ``xDone`` ⇒ ``TRUE``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Error: ``xError`` ⇒ ``TRUE``, ``eErrorID`` ≠ ``ERROR.NO_ERROR``, ``xBusy`` ⇒ ``FALSE``&#xD;&#xA;    :Resetting: | ⇒ ``ResetAction`` is running, until ``xComplete`` is ``TRUE``.&#xD;&#xA;                | After that:&#xD;&#xA;                | - the outputs ``xDone`` and ``xError`` will be set to ``FALSE``.&#xD;&#xA;                | - The output ``eErrorID`` will be set to ``ERROR.NO_ERROR``." ObjectGUID="{bfedd66d-40cb-4e3a-94db-7ef774ad545c}" />
  <Node Name="ERROR" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Every function block in this document has a boolean output ``xError`` to indicate that there is an error condition reached.&#xD;&#xA; In this case a more detailed information will be signaled with the value of the output ``iErrorID`` of the functionblock |BehaviourModel|. The ``iErrorID`` represents an&#xD;&#xA; Integer value, indicating the reason for the error.&#xD;&#xA; It is neccecary to map the integer value of ``iErrorID`` to an domain specific enum data type ``ERROR``.&#xD;&#xA;&#xD;&#xA; **Error Domains and Error Codes** (``ERROR`` (Enum) and ``eErrorID`` (output)) and their organisation in different domains:&#xD;&#xA; &#xD;&#xA; In many cases this integer value of ``eErrorID`` is used as input for an additional FB which converts the number to a related localized string in an applicable language.&#xD;&#xA; The set of values for a specific ``eErrorID`` is are application dependent.&#xD;&#xA; In case several libraries are combined (several domains), there can be an overlap in the numbers of the ``eErrorID``,&#xD;&#xA; meaning that the same number identify a different error condition in a different domain.&#xD;&#xA; For this reason an value range definition for ``eErrorID`` per library must be done.&#xD;&#xA; &#xD;&#xA; The error handling of a function block should be designed in a way that only error codes are returned, which are documented in the affected library.&#xD;&#xA; It is very convenient but not recommended simply to return untreated error codes from sub libraries.&#xD;&#xA; This would result in a bad user experience. It is recommended to map foreign error codes to the error range of the affected library.&#xD;&#xA; &#xD;&#xA; In the following example we take a closer look to the relationship between two libraries. Each with a specific domain of error codes.&#xD;&#xA; The first library may be called the &quot;Memory Block Manager library&quot; and is build in the namespace ``MBM``.&#xD;&#xA; The second library my be called  the &quot;Function Block Factory&quot; and is build in the namespace ``FBF``.&#xD;&#xA; Each library defines its own ``ERROR`` Enum data type.&#xD;&#xA; &#xD;&#xA; .. admonition:: The ERROR Enum of the library &quot;Memory Block Manager&quot; (MBM)&#xD;&#xA; &#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;       :linenos:&#xD;&#xA; &#xD;&#xA;       {attribute 'qualified_only'}&#xD;&#xA;       TYPE ERROR : (&#xD;&#xA;           NO_ERROR := 0, // The defined operation was executed successfully&#xD;&#xA;           NO_MEMORY := 10 // The memory pool has no further capacity&#xD;&#xA;           HANDLE_INVALID := 20, // The object was not created properly or has been already released&#xD;&#xA;           WRONG_ALIGNMENT := 30, // The structure description aligns not properly to the block specification&#xD;&#xA;           (*...*)&#xD;&#xA;       END_TYPE&#xD;&#xA; &#xD;&#xA; .. admonition:: The ERROR Enum of the library &quot;Function Block Factory&quot; (FBF)&#xD;&#xA; &#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;       :linenos:&#xD;&#xA; &#xD;&#xA;       {attribute 'qualified_only'}&#xD;&#xA;       TYPE ERROR : (&#xD;&#xA;           NO_ERROR := 0, // The defined operation was executed successfully&#xD;&#xA;           TIMEOUT := 1, // The specified operation time was exceeded&#xD;&#xA;           INVALID_PARAM := 10, // One or more function parameters have no valid value&#xD;&#xA;           NO_MEMORY := 20, // The extension of memory pool is not possible&#xD;&#xA;           (*...*)&#xD;&#xA;       END_TYPE&#xD;&#xA; &#xD;&#xA; * Two libraries are isolated with a namespace (in this example ``FBF`` and ``MBM``).&#xD;&#xA; * Each ``ERROR`` Enum declaration should respect two predefined error codes.&#xD;&#xA; &#xD;&#xA;   * ``NO_ERROR`` ⇒ 0 (Zero)&#xD;&#xA;   * ``TIME_OUT`` ⇒ 1 (One)&#xD;&#xA; &#xD;&#xA; * If the ``TIME_OUT`` error code has no usage in a specific domain the value should not reused for an other error code.&#xD;&#xA; * Any error code need a short description about the background of its error condition.&#xD;&#xA; * A Enum data types should be isolated from other Enum data types with its own namespace (``{attribute 'qualified_only'}``).&#xD;&#xA;   ``FBF.ERROR.NO_MEMORY`` has a completely different meaning as ``MBM.ERROR.NO_MEMORY``.&#xD;&#xA; &#xD;&#xA; Working together with sub libraries brings up the need for mapping the different error domains to the one local domain.&#xD;&#xA; The next example demonstrates the possible design of an error code mapping function.&#xD;&#xA; It handles the error codes (from ``CS.ERROR`` and ``CO.ERROR``) of two sub libraries and tries to map these to&#xD;&#xA; the one local Error Enum (``CANOPEN_KERNEL_ERROR``) (All enum data types in this example have the base type ``INT``).&#xD;&#xA; &#xD;&#xA; .. admonition:: Example of an error code mapping function &quot;MapError&quot;&#xD;&#xA; &#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;       :linenos:&#xD;&#xA; &#xD;&#xA;       FUNCTION MapError : CANOPEN_KERNEL_ERROR&#xD;&#xA;       VAR_INPUT&#xD;&#xA;              iErrorID : INT;&#xD;&#xA;       END_VAR&#xD;&#xA; &#xD;&#xA;       MapError := CANOPEN_KERNEL_ERROR.CANOPEN_KERNEL_UNKNOWN_ERROR;&#xD;&#xA;       IF iErrorID = CS.ERROR.NO_ERROR THEN&#xD;&#xA;           MapError := CANOPEN_KERNEL_ERROR.CANOPEN_KERNEL_NO_ERROR;&#xD;&#xA;       ELSIF iErrorID &gt; CS.ERROR.FIRST_ERROR AND iErrorID &lt; CS.ERROR.LAST_ERROR THEN&#xD;&#xA;           CASE iErrorID OF&#xD;&#xA;               CS.ERROR.TIME_OUT           : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_KERNEL_TIMEOUT;&#xD;&#xA;               CS.ERROR.REQUEST_ERROR      : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_REQUEST_ERROR;&#xD;&#xA;               CS.ERROR.WRONG_PARAMETER    : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_WRONG_PARAMETER;&#xD;&#xA;               CS.ERROR.NODEID_UNKNOWN     : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_NODEID_UNKNOWN;&#xD;&#xA;               CS.ERROR.SDOCHANNEL_UNKNOWN : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_SDOCHANNEL_UNKNOWN;&#xD;&#xA;           ELSE&#xD;&#xA;               MapError := CANOPEN_KERNEL_ERROR.CANOPEN_KERNEL_OTHER_ERROR;&#xD;&#xA;           END_CASE&#xD;&#xA;       ELSIF iErrorID &gt; CO.ERROR.FIRST_ERROR AND iErrorID &lt; CO.ERROR.LAST_ERROR THEN&#xD;&#xA;           CASE iErrorID OF&#xD;&#xA;               CO.ERROR.TIME_OUT       : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_KERNEL_TIMEOUT;&#xD;&#xA;               CO.ERROR.NO_MORE_MEMORY : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_NO_MORE_MEMORY;&#xD;&#xA;               CO.ERROR.WRONG_PARAMETER: MapError := CANOPEN_KERNEL_ERROR.CANOPEN_WRONG_PARAMETER;&#xD;&#xA;               CO.ERROR.NODEID_UNKNOWN : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_NODEID_UNKNOWN;&#xD;&#xA;               CO.ERROR.NETID_UNKNOWN  : MapError := CANOPEN_KERNEL_ERROR.CANOPEN_NETID_UNKNOWN;&#xD;&#xA;           ELSE&#xD;&#xA;               MapError := CANOPEN_KERNEL_ERROR.CANOPEN_KERNEL_OTHER_ERROR;&#xD;&#xA;           END_CASE&#xD;&#xA;       END_IF&#xD;&#xA; &#xD;&#xA; This design assumes ``CS.ERROR.NO_ERROR`` has the same value as ``CO.ERROR.NO_ERROR`` and the rest of the value range of ``CS.ERROR`` and ``CO.ERROR`` is disjunct.&#xD;&#xA; " ObjectGUID="{c9b0fab5-80c5-42d9-8d73-fb67d2278005}" />
  <Node Name="ITimingControlled" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Used for |IActionProvider| instances whose behaviour model either requires a ``udiTimeLimit``&#xD;&#xA; or a ``udiTimeOut`` input. It can also require both of these inputs. Because of this the related |BehaviourModel| instance is using an |ITimingController| instance.&#xD;&#xA; &#xD;&#xA; This decorator is referenced by the following interfaces:&#xD;&#xA; :ref:`IETrigTl` | :ref:`IETrigTo` | :ref:`IETrigTlTo` | :ref:`IETrigATl` | :ref:`IETrigATo` |&#xD;&#xA; :ref:`IETrigATlTo` | :ref:`ILConTl` | :ref:`ILConTo` | :ref:`ILConTlTo` | :ref:`ILConTlC`" ObjectGUID="{498deb60-e0ae-4939-8980-5cbc1652b95a}" />
  <Node Name="ITimeOutConstraint" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Used for |IActionProvider| instances whose behaviour model requires a ``udiTimeOut`` input&#xD;&#xA; &#xD;&#xA; This decorator is referenced by the following interfaces:&#xD;&#xA; :ref:`IETrigTo` | :ref:`IETrigTlTo` | :ref:`IETrigATo` | :ref:`IETrigATlTo` | :ref:`ILConTo` | :ref:`ILConTlTo`" ObjectGUID="{1566d793-ea78-43c4-9479-20e88118ab2b}" />
  <Node Name="ITimeLimited" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Used for |IActionProvider| instances whose behaviour model requires a ``udiTimeLimit`` input&#xD;&#xA; &#xD;&#xA; This decorator is referenced by the following interfaces:&#xD;&#xA; :ref:`IETrigTl` | :ref:`IETrigTlTo` | :ref:`IETrigATl` | :ref:`IETrigATlTo` | :ref:`ILConTl` | :ref:`ILConTlTo` | :ref:`ILConTlC`" ObjectGUID="{ec363c74-de92-4ba3-b4e9-194c4e9ddb64}" />
  <Node Name="ILevelControlled" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Used for |IActionProvider| instances whose behaviour model requires a ``xEnable`` input&#xD;&#xA; &#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Level Controlled Function Blocks` for more information about the meaning of the ``xEnable`` input.&#xD;&#xA; &#xD;&#xA; This decorator is referenced by the following interfaces:&#xD;&#xA; :ref:`ILCon` | :ref:`ILConTl` | :ref:`ILConTlTo` | :ref:`ILConTo` | :ref:`ILConC` | :ref:`ILConTlC`" ObjectGUID="{f6d204cd-4b03-4876-95cd-79ad91843128}" />
  <Node Name="IHasContinuousBehaviour" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Used for |IActionProvider| instances whose behaviour model requires no ``xDone`` output&#xD;&#xA; &#xD;&#xA; This decorator is referenced by the following interfaces:&#xD;&#xA; :ref:`ILConC` | :ref:`LConTlC`" ObjectGUID="{7909dfd9-59a4-4524-81bf-71159d963186}" />
  <Node Name="IEdgeTriggered" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Used for |IActionProvider| instances whose behaviour model requires a ``xExecute`` input&#xD;&#xA;&#xD;&#xA; See :ref:`fld-Common Behaviour Model.fld-Edge Triggered Function Blocks` for more information about the meaning of the ``xExecute`` input.&#xD;&#xA; &#xD;&#xA; This decorator is referenced by the following interfaces:&#xD;&#xA; :ref:`IETrig` | :ref:`IETrigA` | :ref:`IETrigATl` | :ref:`IETrigATlTo` | :ref:`IETrigATo` | :ref:`IETrigTl` | :ref:`IETrigTlTo` | :ref:`IETrigTo`" ObjectGUID="{9ffaf6ac-3d6a-4c7e-9745-3e29f858ba20}" />
  <Node Name="IAbortable" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Used for |IActionProvider| instances whose behaviour model requires a ``xAbort`` input and a ``xAborted`` output&#xD;&#xA;&#xD;&#xA; This decorator is referenced by the following interfaces:&#xD;&#xA; :ref:`IETrigA` | :ref:`IETrigATl` | :ref:`IETrigATlTo` | :ref:`IETrigATo`" ObjectGUID="{de58432a-067c-4995-8575-cf25eb127023}" />
  <Node Name="StateMachine" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{58d80793-9f26-4bc3-8d25-2845e2dd1101}" />
  <Node Name="IBehaviourModel" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{598589a4-7f19-4a40-9483-bbbe09d49368}" />
  <Node Name="Regular Behaviour with xDone" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{d05a6841-df31-47f4-b069-aefb889d44a5}" />
  <Node Name="Continuous Behaviour without xDone" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{078a8387-6fa3-4873-a2b2-96b206087e71}" />
  <Node Name="Interfaces" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{1d14c8fc-76fc-4c49-8b86-709abbd6b4e8}" />
  <Node Name="ETrigTo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of the `PLCopen Edge Triggered Behavior Model (see: |IETrigTo|).&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{790087b6-45c3-4077-a813-ef82efa5e7c3}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{bee78bad-3dbc-409c-b78e-865a8ef43338}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1adc248e-d93b-4960-b713-ab1e270d7385}" />
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{21f4916d-6aa0-4ac3-91c4-57b195113ea8}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1f4c0d5c-700d-40c6-91d4-18ce80a2fc50}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1f6ff481-52f2-4c6e-aca2-f8fe43521399}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{0c83aaee-1fa8-4a68-b663-679c391521eb}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7ddb8258-d46f-42d3-baf2-0e741357ea03}" />
  </Node>
  <Node Name="ETrigTlTo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Edge Triggered Behavior Model` (see: |IETrigTlTo|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{144dc18b-45a1-45fc-a76e-f32c05d36023}">
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{1da05502-f269-4466-936a-77c52d4f4dde}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{8abc2935-d41b-43b0-b6f8-981704499c1c}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{565d022b-39d6-4273-acd6-1d6eb6a7c015}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{dcb360fd-12bf-461e-9dc2-93dbea8298cc}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e294434a-a3d4-4282-9f97-ce0362a325dc}" />
  </Node>
  <Node Name="ETrigTl" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Edge Triggered Behavior Model` (see: |IETrigTl|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{76991d29-38ea-4b58-8644-6654839fe8af}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{90516063-b05a-4725-b61c-588032852a99}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ae486b44-bfb1-41f8-a5c4-a24811edaf0f}" />
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{a627815d-6e2b-4265-8ce1-606a8ba99eab}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6eae71b6-207d-4352-b0b5-820937811dc2}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e5ed5cf6-224f-41bb-a46b-f26606b12487}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7087ad2d-46f9-4880-9efa-47cd18e6fe54}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{39a836fe-a17e-4f18-9444-98fdcbb388cf}" />
  </Node>
  <Node Name="ETrigATo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Edge Triggered Behavior Model` (see: |IETrigATo|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{2d4cc7b1-82db-4f3d-afa0-9b35d1cec8d5}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{cedd2b2b-e32d-4fa3-b7c3-8dd4f411a074}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7e7ff2a3-9862-4619-b671-7e8619ae9a14}" />
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{43fd9562-b8fd-40b6-91c8-77ded6ef469b}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9d9a6296-f317-4f39-a0b1-d87bca4806f5}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5c6ae7e2-8c1c-43a6-9d82-7e7f487890a2}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c71f106b-065f-457c-86b0-b7da8ae9ccdc}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{964f1ca0-6d10-4659-a8cb-fdf24115ca46}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f9aaa696-bd36-4cfa-bd65-3d8b16849361}" />
  </Node>
  <Node Name="ETrigATlTo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Edge Triggered Behavior Model` (see: |IETrigATlTo|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{19c9af1e-d6fa-4ae9-a3ea-3bb0999675cd}">
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{3b767867-9e60-4130-b736-36f2b2772b8a}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{32cbd3f3-b930-418c-aee2-5e1e6d8e6a2f}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d5a3e9dd-ef20-4413-8d7e-3512e36daa38}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c170000e-a5bf-4a55-a798-634118cad1c1}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{ae51f2fc-9683-45b5-8b67-2ee5d5f3e0ee}" />
  </Node>
  <Node Name="ETrigATl" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Base implementation of a `PLCopen Edge Triggered Behavior Model` (see: |IETrigATl|)&#xD;&#xA;&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{34917cfb-9d2e-4738-80c8-bdfdeab76383}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{dbb088c2-7c30-4f1b-9c34-732b2fb4f08e}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e59a617c-2ecb-4f95-b34f-f5fa9ea49741}" />
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{ea0142f5-6d3e-48f5-a6ec-214c003dda96}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{f528e99b-6013-479b-b67e-2867e70c8292}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{1257b622-4679-40fa-b509-8b569e71fc2c}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{76dd43f5-b74d-4cee-a1a5-2084329b12ee}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{3f2e6219-2d9c-4051-bc45-955c8e0592b4}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{40cb50cf-434d-4707-8727-bf7bc1e75cb2}" />
  </Node>
  <Node Name="ETrigA" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block is a base implementation of a `PLCopen Edge Triggered Behavior Model` (see: |IETrigA|).&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{cfea5a7d-f2f0-410d-a41e-c9a7308d330f}">
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{8a1db4d7-4d65-4bac-952f-913bd237ae58}" />
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{57ea3a39-7d02-4ec4-8593-a88785dda1ee}" />
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{40eebc73-3e42-4c01-970d-f51dd2ea766d}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{91eb8995-408d-4482-a7ef-ef368dd57bcd}" />
  </Node>
  <Node Name="ETrig" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block is a base implementation of a `PLCopen Edge Triggered Behavior Model` (see: |IETrig|).&#xD;&#xA; For use, this block should be extended and the specific inputs and outputs must be supplemented.&#xD;&#xA; The output ``eErrorID`` of the application-specific enum type ``ERROR`` must be added." ObjectGUID="{062444a6-2e8f-4c8e-8614-09e1f990a2f8}">
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{bbd6fc87-9fd5-4628-9193-35e7e54ca583}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d66bfc28-0fe3-45c2-8df8-95798169698a}" />
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{132602ba-8c7c-4cc8-9c8f-d44e53a76617}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{cb996b58-8bd6-49a9-860a-882e66ad1dcd}" />
  </Node>
  <Node Name="TimingController" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Basic implementation of the |ITimingController| interface" ObjectGUID="{222a2dac-f5d6-4e1c-83f3-35341c33f003}">
    <Node Name="StartOperationTimer" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{76d04ad4-b6b0-4e61-8995-dc327f03a9f6}" />
    <Node Name="StartInvocationTimer" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5335749c-e2e7-4dee-8162-91e5d918f259}" />
    <Node Name="CurrentControllerTime" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{9772c5d7-4ab0-43ae-9737-122450b5ab19}">
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{29047741-7080-49e6-b3a9-c54c1a794966}" />
    </Node>
    <Node Name="ControllerTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{aac613a2-f4ec-4458-8daf-4424d3bb3186}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{017d513c-eb17-4196-9f8c-d46df4a1d6e5}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{86c5483f-87fb-4479-a910-33d67146373e}" />
    </Node>
    <Node Name="ControllerTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{5cc9dae4-1590-4b14-8b72-0c4cd83b0634}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{51609606-9487-4423-a9ef-a6fd078b6013}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a50ddc3a-d1e8-4b56-95b1-3b36f80073e9}" />
    </Node>
    <Node Name="ControllerCheckTiming" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{4f598508-a9ac-4b6d-b476-742c6ce13763}" />
  </Node>
  <Node Name="Interfaces" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6a622ce7-b178-491d-a701-10ef7a17c777}" />
  <Node Name="ImplementationBase" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{f04a3412-1dae-4157-a8d6-d784a2aad61e}" />
  <Node Name="Enums" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{5d52e12a-9f38-4250-8fe4-ecad47380fa5}" />
  <Node Name="Decorators" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{372b8ae4-3d24-4052-8fbc-af329726c1a1}" />
  <Node Name="BehaviourModel" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The ``BehaviourModel`` function block will serve as a core for other more specialized function blocks like |ETrigATl|.&#xD;&#xA; Because `PLCopen` defines two different variables (``xEnable``/``xExecute``) for starting the function block depending on its type,&#xD;&#xA; a neutral name ``xControl`` has been chosen. The ``xControl`` input variable can act as a ``xExecute`` or an ``xEnable`` input variable.&#xD;&#xA; This depends on how the related action provider is decorated. If the action provider is decorated with |IEdgeTriggered|&#xD;&#xA; then the ``xControl`` input variable acts as an ``xExecute``. If the action provider is decorated with |ILevelControlled| then&#xD;&#xA; the ``xControl`` input variable acts as an ``xEnable``.&#xD;&#xA;&#xD;&#xA; Please take a look to a more detailed description of&#xD;&#xA;&#xD;&#xA; * :ref:`fld-Common Behaviour Model.fld-Edge Triggered Function Blocks`&#xD;&#xA; * :ref:`fld-Common Behaviour Model.fld-Level Controlled Function Blocks`" ObjectGUID="{65538e3d-5ea8-403f-a95b-b29a147e83c7}">
    <Node Name="_StateMachine" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a490747b-5bf7-4dca-a118-36220e93e86b}" />
    <Node Name="_HandleStartingState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d25c09fb-9f2e-47d0-b144-f18fda528aa3}" />
    <Node Name="_HandleResettingState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{0278b6f8-d333-442d-a6df-fe3aae1c3719}" />
    <Node Name="_HandleExecutingState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{0bac2db2-2c03-4df6-a7c4-bfa84d0a23e6}" />
    <Node Name="_HandleErrorState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e2301939-03e2-4387-9f4e-b8c8a5396595}" />
    <Node Name="_HandleDormantState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e3b38f06-3abb-405a-9f61-77ad407cd6dc}" />
    <Node Name="_HandleDoneState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{bf66fb80-58e8-4407-bb1b-ad4fd1f0b418}" />
    <Node Name="_HandleCleaningState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9bec686a-3a63-4fb5-99e2-6bbca2a27088}" />
    <Node Name="_HandleAbortedState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6b851ec8-f204-4d0b-ae29-6d3b1ae9f48a}" />
    <Node Name="StartModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2c3db977-2448-4dfa-b63f-ddf148dbbaf2}" />
    <Node Name="ResetModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{97557572-164e-443e-8511-bf8cea9b6705}" />
    <Node Name="ModelTimeOut" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{dded1919-ed06-433d-9fad-cf9ca8565b69}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d9806f90-b2f1-43ca-8c22-44ad54480d71}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{41d2f038-2cd1-41cd-a32d-dc481ddfbb54}" />
    </Node>
    <Node Name="ModelTimeLimit" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{e5c4053b-fa12-4326-9f52-906b663a2b64}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{4ea520fb-a18e-4332-8f2e-b85db6ecc3f3}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b9ec47d2-9c19-4e9b-ae21-dcee2cb2daa0}" />
    </Node>
    <Node Name="GetModelState" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{19846b48-dd32-4c00-9cb3-224833335ee4}" />
    <Node Name="GetConfiguration2" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Identifies the current configuration of an action provider, if connencted to the behaviour model&#xD;&#xA;&#xD;&#xA; An output returning ``TRUE`` signalizes that the corresponding behaviour has been implemented for the related action provider." ObjectGUID="{4d3c0b5d-341d-4ebd-99b1-d51c09c2383d}" />
    <Node Name="GetConfiguration" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{46cc72ef-0e6b-4c98-a09c-4c45b71447ac}" />
    <Node Name="ActionController" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{7c5cc4b5-f61f-4359-8dc0-95bfbff2ee12}">
      <Node Name="Set" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c83ff310-bdf7-429e-a799-b135f9a18fda}" />
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2c0cd6c6-a008-415d-8807-21f5dbafcd31}" />
    </Node>
    <Node Name="AbortModel" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{799bce9c-1aed-4df0-b8e7-a7079b98108b}" />
    <Node Name="_ResetAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{6a30c9db-4aaa-475e-a579-d8cb0219a6b9}" />
    <Node Name="_Execute" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{e4a70fe2-b694-41a9-b579-88e3b46fa04a}" />
    <Node Name="_CheckTimeOutCondition" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b5d05bed-92e0-4a23-b000-3dd214228346}" />
    <Node Name="_CheckParameter" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a72b8ae4-71e9-4ca5-bf0d-48e00d422fc1}" />
    <Node Name="_CheckAbortCondition" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a7321b0b-6290-4b4b-a67a-3c7060990f33}" />
  </Node>
  <Node Name="ActionController" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Basic implementation of the |IActionController| interface&#xD;&#xA;&#xD;&#xA; Every method will delegate directly to the related |IActionProvider| method." ObjectGUID="{ea0384c7-0574-4529-8cf1-88e38dd970c1}">
    <Node Name="ControlStartAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{38c55d6b-4ba6-4ae9-a5c8-2e7110758969}" />
    <Node Name="ControlSampleAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" An action controller is used whenever it is necessary to have the actions of the action controller&#xD;&#xA; instead of those of the action provider called. ``ControlSampleAction`` is the action controller&#xD;&#xA; specifically used to control the first invocation of the |STATE.STARTING| state." ObjectGUID="{94d56601-dc62-4309-a864-92dcce91f914}" />
    <Node Name="ControlResetAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b0abbb71-9277-43d8-97df-5a9029bb584d}" />
    <Node Name="ControlExitAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{2e798a7e-edbb-432c-9141-ef523d7c47d7}" />
    <Node Name="ControlCyclicAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5ba3d466-4d30-4f27-b324-650ceb5def51}" />
    <Node Name="ControlCleanupAction" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c49d572e-c8b8-47e3-af31-6af7f6668bb3}" />
  </Node>
  <Node Name="IsLibReleased" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function has been automatically generated from the project information." ObjectGUID="{8447e3d5-e1bf-4017-b985-a10363fbaae4}" />
  <Node Name="GetLibVersionNumber" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function has been automatically generated from the project information." ObjectGUID="{41a2ca8e-6d15-41e6-af74-dd47fac918c3}" />
  <Node Name="GetLibVersion" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function has been automatically generated from the project information." ObjectGUID="{5bc10611-265d-4929-b70a-88bbafb4ab1f}" />
  <Node Name="STATE" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{ae14fc39-d558-4bd0-879f-934a54c2a41f}" />
  <Node Name="ReuseByInheritance" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{53b05c4c-53f2-4134-89b2-6250595265ae}" />
  <Node Name="ReuseByComposition" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{d0717024-112d-4f10-a776-739c350d4442}" />
  <Node Name="Overview" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{5b48cf11-7be5-401f-ba36-51b83f07eb16}" />
  <Node Name="MCMA_Inhertitance" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{cb63f358-7533-42ab-b436-5ac66f99ef5b}" />
  <Node Name="MCMA_Composing" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{329b0efe-4bc6-4360-b974-7f5073362bee}" />
  <Node Name="ILConTo" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{8577c281-c4f5-4ebc-878b-534f8b278458}" />
  <Node Name="ILConTlTo" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{9ff2137e-893f-4745-b421-c4455dcbed46}" />
  <Node Name="ILConTlC" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{37a60efa-cfe2-4f14-8afa-cffe01f92500}" />
  <Node Name="ILConTl" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{3f07b885-9d8a-4e85-ad20-a5e7a80191eb}" />
  <Node Name="ILConC" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{298c44e9-dcc2-41b2-9eee-f649564024d8}" />
  <Node Name="ILCon" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6f67460c-63fe-40ce-884e-45202027a774}" />
  <Node Name="IETrigTo" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c2c92a9b-6f8e-4c7f-b4db-1abe59f1f61f}" />
  <Node Name="IETrigTlTo" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{61a61091-d680-4b5e-a712-4e4ec3403075}" />
  <Node Name="IETrigTl" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{512db38c-60cb-4df7-8f1c-65a6cdb893db}" />
  <Node Name="IETrigATo" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{02d1bbb9-740a-4e78-b611-1743434434fd}" />
  <Node Name="IETrigATlTo" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{73828967-b046-4201-a7ce-98de757eba35}" />
  <Node Name="IETrigATl" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{d2788a61-5d84-4378-8b38-5045bbf7a13b}" />
  <Node Name="IETrigA" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{0dc80294-efa1-41b8-83ad-9a3280cf9f12}" />
  <Node Name="IETrig" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{cd287d32-99dc-4a9b-a199-5ad542b8c0f9}" />
  <Node Name="Level Controlled Function Blocks" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{076d627e-7773-4fed-bfdd-dfc0f0f58bca}" />
  <Node Name="Edge Triggered Function Blocks" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c346b08e-0845-4aaa-b02f-c518bd2b9a88}" />
  <Node Name="Behaviour Model" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{16e31eea-c1b9-40c8-bba4-595967414c58}" />
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="Project Information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="Library Manager" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{8c1463b5-02f2-427d-bd06-9e39d42fcbff}" />
  <Node Name="Library Information" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c8706b13-1f28-4097-8c35-c12aa6824251}" />
  <Node Name="Images" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{141ba9a0-e7ad-45a9-97fb-cb0a4056a05f}" />
  <Node Name="Common Behaviour Model" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b9741afd-ccd3-4994-99f4-7d8a942952f6}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Development\CDS LibDevDoc\CBM-Spec\LaTeX\Overview.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{8dc39bee-9482-4e15-949f-66f3e1592387}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Development\CDS LibDevDoc\CBM-Spec\Images\ReuseByInheritance.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{38ca424d-79ce-4d8f-8e9b-7da649f1ea1f}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Development\CDS LibDevDoc\CBM-Spec\Images\ReuseByComposition.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{284d6242-eddf-48d7-9532-c61f3fcd9b6b}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Development\CDS LibDevDoc\CBM-Spec\Images\MCMA_Inhertitance.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{de00bae0-818b-4088-9600-4fcd7fd91178}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Development\CDS LibDevDoc\CBM-Spec\Images\MCMA_Composing.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{1e1b6cef-bd51-4ccd-9109-a16fe7631e4e}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Level-Controlled-Function-Blocks_without-xDone_ILConTlC.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{d131d123-9ae2-4ea0-bc50-99493a49e1ad}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Level-Controlled-Function-Blocks_without-xDone_ILConC.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{4c31c7c4-5f30-441e-aa50-b23737da4ea3}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Level-Controlled-Function-Blocks_with-xDone_ILConTo.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{bc6a6433-7e1d-4382-8659-1b3deac72561}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Level-Controlled-Function-Blocks_with-xDone_ILConTlTo.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{e5304c34-cf34-4791-9656-07aee468b019}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Level-Controlled-Function-Blocks_with-xDone_ILConTl.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{2db4b0f7-88c9-46f0-b0ac-18a23fe9d79d}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Level-Controlled-Function-Blocks_with-xDone_ILCon.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{911c9e88-708b-4f87-b09f-c7375a2a3f60}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrigTo.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{09267a60-adbd-4a9d-9faa-73b0ec69fdcb}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrigTlTo.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{180b83fd-1264-4571-9a93-5a0b49245a64}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrigTl.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{bfc7d88c-1a18-4386-bcd5-5a9ed5110e42}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrigATo.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{bf072d34-5ae6-404f-a72f-abbe0efe948a}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrigATlTo.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{186aea51-425c-487c-ab26-2a4324646df7}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrigATl.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c54107e5-10d1-42f1-a365-e778650fcb78}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrigA.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{7ae08b46-809a-44eb-bf5e-f9ff9e619a57}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Edge-Triggered-Function-Blocks_Interfaces_IETrig.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6cad55f6-1ff7-4bce-bda3-751a3f97ce2e}" />
  <Node Name="00000000-0000-0000-0000-000000000000|D:\Anna\CBML-Graphs\Behaviour-Model_Enums_STATE.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{d55150ab-4511-4d53-ad7a-fb0d4cc3af6d}" />
</Library>