<?xml version="1.0" encoding="utf-8"?>
<Library Name="3S CANopenSafety Slave, 3.5.4.0 (3S - Smart Software Solutions GmbH)">
  <Node Name="ObjectDictionary" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b7576bbe-6b82-4553-b517-50caa269e283}" />
  <Node Name="CopySRDOData" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Copies SRDO configuration settings from a given&#xD;&#xA; SRDO Object dictionary entry (OD_SRDO) to a&#xD;&#xA; ConfigSRDO entry in safe memory.&#xD;&#xA; After copying the new CRC value is calculated.&#xD;&#xA;" IsHidden="true" ObjectGUID="{ba0535cb-3a76-46a9-a907-1e6b5f0f4935}" />
  <Node Name="CalcSRDOConfigCRC" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the CANopen CRC value based on a given SRDO Object Dictionary entry.&#xD;&#xA;" IsHidden="true" ObjectGUID="{ed09a9e4-6e8e-46a8-8286-06967c0df55b}" />
  <Node Name="ReadCRCObject" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads CRC value in Object Dictionary for a SRDO specified&#xD;&#xA; by wSRDOComIndex. Function returns TRUE if CRC was read&#xD;&#xA; successfully. wCRC contains the read value.&#xD;&#xA;" IsHidden="true" ObjectGUID="{9db73d64-7cf9-441f-96f1-3dce7c11a540}" />
  <Node Name="OD_OBJECT" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{64570a7e-c891-494d-98a9-44c52e9319f0}" />
  <Node Name="ReadSRDOComObject" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads all SRDO configuration parameters from a given&#xD;&#xA; SRDO Communication Object and copies it to SRDO_ObjectInfo.&#xD;&#xA; The function return true if no error occurs while reading.&#xD;&#xA;" IsHidden="true" ObjectGUID="{e221b7f7-243c-40c7-851b-fb19238b4626}" />
  <Node Name="SRDO_OD_INFO" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Structure contains all SRDO config data which can be read from Object Dictionary.&#xD;&#xA;" IsHidden="true" ObjectGUID="{d5a927f4-f129-4da5-9d93-95b0731533c0}" />
  <Node Name="Object Dictionary" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{f3f09720-1e48-46c8-8e6d-272c742c3613}" />
  <Node Name="Functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{4443ac29-17c6-4f57-96d5-b9c2b62a1836}" />
  <Node Name="Enums" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{0dfdb088-0f70-418f-8c88-809e9dcbb652}" />
  <Node Name="OBJECT_PROPERTIES" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment="Object properties of a OD subobject" IsHidden="true" ObjectGUID="{7046cfb4-c272-4109-8830-58180fba8203}" />
  <Node Name="DATA_TYPE" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment="CANopen data types as defined by CiA-301" IsHidden="true" ObjectGUID="{0e67cf2c-7dd4-4ecb-90d4-ded0587c2e50}" />
  <Node Name="OD_SUBOBJECT_DATA" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{c408d6c6-9cdc-420e-8987-b3da6055e537}" />
  <Node Name="OD_OBJECT_DATA" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{0ccd2f87-aaf2-452f-ac8b-3648465fad5e}" />
  <Node Name="GetObjectDataPointer" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Calculates the data pointer of an OD subobject&#xD;&#xA; depending on host byte order.&#xD;&#xA;" IsHidden="true" ObjectGUID="{bd1e4878-e63b-4de9-80a0-b443b2ad83b3}" />
  <Node Name="SRDOObjectManager" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" The SRDOObjectManager implements read access &#xD;&#xA; to SRDO configuration objects in unsafe object &#xD;&#xA;	dictionary. This means read access to &#xD;&#xA; 	- SRDO communication parameters (16#1301-16#1340)&#xD;&#xA;		- SRDO mapping parameters (16#1381-16#13C0)&#xD;&#xA;		- SRDO configuration signature (16#13FF) &#xD;&#xA;		- Configuration Valid object (16#13FE)&#xD;&#xA;&#xD;&#xA; Note: Before using this function block method Setup must be called.&#xD;&#xA;" IsHidden="true" ObjectGUID="{014eacd1-11c7-478e-a241-70f6d0d44e01}">
    <Node Name="ReadCRC" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads the CRC of SRDO wSRDOComIndex from unsafe object dictionary.&#xD;&#xA; Returns TRUE if reading CRC was successful. The crc can be obtained by&#xD;&#xA; output wCRC.&#xD;&#xA; Note: This function doesn't check pointer or object index &#xD;&#xA; because this is already done by CheckConsistency when calling Setup.&#xD;&#xA;" IsHidden="true" ObjectGUID="{99385321-3225-4a85-a089-65b2ef39f7f2}" />
    <Node Name="ReadConfigurationValid" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads the Configuration Valid flag from unsafe Object Dictionary.&#xD;&#xA; Returns true if Configuration Valid is set.&#xD;&#xA; Note: This function doesn't check pointer or object index &#xD;&#xA; because this is already done by CheckConsistency when calling Setup.&#xD;&#xA;" IsHidden="true" ObjectGUID="{0b8c8d04-b207-4547-9113-38499a43719d}" />
    <Node Name="GetSRDOType" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Gets the allowed SRDO direction of a SRDO&#xD;&#xA; specified by wSRDOComIndex. The information is saved in a bitfield&#xD;&#xA; in the safety connector.&#xD;&#xA; The bitfield is defined as ARRAY [0..1] OF DWORD.&#xD;&#xA; 0 means Tx, 1 Rx&#xD;&#xA; Example:&#xD;&#xA; The SRDO direction for SRDO 1 is at Array index 0 bit 0.&#xD;&#xA; SRDO2 at index 0 bit 1&#xD;&#xA; ...&#xD;&#xA; SRDO32 at index 1 bit 0&#xD;&#xA; ...&#xD;&#xA; SRDO64 at index 1 bit 31^&#xD;&#xA;" IsHidden="true" ObjectGUID="{d6162678-78ae-4abd-9699-897107050b43}" />
    <Node Name="CheckConsistency" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Checks consistency of the unsafe Object Dictionary.&#xD;&#xA;	It checks if all needed Safety Objects are present&#xD;&#xA; and if index of these objects are in the right range. &#xD;&#xA; Returns true if no errors are detected, false otherwise.&#xD;&#xA;" IsHidden="true" ObjectGUID="{b8869152-bd2f-48df-af40-2bc4828d2c37}" />
    <Node Name="ReadSRDOODInfo" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Reads all SRDO configuration parameters of SRDO wSRDOComIndex &#xD;&#xA; from the unsafe object dictionary.&#xD;&#xA; The data will be copied to SRDO_ObjectInfo.&#xD;&#xA; The method returns true if read was successful.&#xD;&#xA;" IsHidden="true" ObjectGUID="{28cf670c-d921-44e9-b085-1a227c8b2b87}" />
    <Node Name="SRDOCount" TypeGUID="{5a3b8626-d3e9-4f37-98b5-66420063d91e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{9bf7c9cd-f628-4b0b-a34c-8ffb97e062c2}">
      <Node Name="Get" TypeGUID="{792f2eb6-721e-4e64-ba20-bc98351056db}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Returns the number of SRDOs in object dictionary" IsHidden="true" ObjectGUID="{99747acb-4647-4594-a6f3-e87926d1a07d}" />
    </Node>
    <Node Name="Setup" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This method setups the SRDOObjectManager and checks consistency of the unsafe&#xD;&#xA; Object Dictionary. This is the first method which have to be called &#xD;&#xA; before accessing any other method of this function block.&#xD;&#xA; For reading the ObjectDictionary both safe and unsafe connector are needed. &#xD;&#xA; The unsafe connector must be exactly the same as the unsafe stacl is working on.&#xD;&#xA; Otherwise it's not possible to read current values.&#xD;&#xA; Method returns ERR_OK if object dictionary contains no error, else ERR_FAILED. &#xD;&#xA;	Note: In case of ERR_FAILED calling other methods will lead to exceptions.&#xD;&#xA;" IsHidden="true" ObjectGUID="{309d0bab-fad9-4187-8732-094f63ed6600}" />
  </Node>
  <Node Name="Function Blocks" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{eaffabf9-f375-409b-94e8-f7b36305c196}" />
  <Node Name="Global Constants" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{a857c3d8-efbf-43a2-9852-c87761331762}" />
  <Node Name="_3SCANopenSafetySlave" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{ec361263-f1f8-441c-bc4f-a61b2ffc1c4a}" />
  <Node Name="BufferSizes" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Library parameters for Tx and RxSRDO buffer sizes.&#xD;&#xA; High Limit defines the highest array index.&#xD;&#xA; Values will be set by the configurator." ObjectGUID="{e5620941-2d83-4560-8a00-161f5d9b881c}" />
  <Node Name="Operational" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{e5adc4ca-21ec-43b3-be74-a264e8b0dcff}" />
  <Node Name="Cyclic Methods (state independent)" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{56b0a138-fe36-49e7-a4e3-42254c1e8190}" />
  <Node Name="States" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6f4c84d1-88b9-4ddd-af96-94a5222cfef0}" />
  <Node Name="CheckConfiguration and Stopped" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{5430b684-ae53-42e9-a724-a1623143658f}" />
  <Node Name="State Machine" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{e9da6b36-b804-4d78-a8a5-8723c637d653}" />
  <Node Name="CheckConfiguration" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{77123bc5-8127-4df4-8a9b-94b98fa5ab8b}" />
  <Node Name="State Transitions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{15e2e07f-1fc9-4ecb-8f86-a267c7c270a9}" />
  <Node Name="Structures" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{2c1ba4e4-2069-43df-9a30-b79b187fd71c}" />
  <Node Name="IBase" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{aef9bbd6-a9a2-4dc6-a3d9-a58946b6930d}" />
  <Node Name="GlobalConstants" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Global constants" IsHidden="true" ObjectGUID="{d42277c3-f8ce-4678-8b8f-1a270132da9a}" />
  <Node Name="Initialization" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{84dbc03f-0f52-4e5b-8e4e-a979389c2053}" />
  <Node Name="ICmpIoDrv" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{bbb5766d-e6a7-476c-8654-980d2bbe53c3}" />
  <Node Name="CANopenDeviceSIL2" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block implements a CANopen Safety Slave SIL2 I/O driver.&#xD;&#xA; The safe I/O driver is realized through a black channel approach. It sits on top of an unsafe CANopen Slave Stack.&#xD;&#xA; Communication between both stacks is realized over shared memory.&#xD;&#xA; &#xD;&#xA; Function block can be enabled/disabled by S_xEnable. When S_xEnable gets TRUE the function block checks every bus cycle&#xD;&#xA; all conditions for safe communication:&#xD;&#xA;		- Unsafe stack is in OPERATIONAL state&#xD;&#xA;		- Configuration valid object (16#13FE) is set to 16#A5&#xD;&#xA;		- Safety configuration signatures are correct&#xD;&#xA;		- Consistency of SRDO configuration data&#xD;&#xA;&#xD;&#xA; If a configuration error is detected (e.g. CRC mismatch) S_eError changes from NO_ERROR to a corresponding error code.&#xD;&#xA; If every condition is fulfilled the function block tries starting safe communication. &#xD;&#xA; S_xActive gets TRUE if all SRDOs are sent/received at least one time without any error.&#xD;&#xA;	When communication error occurs (SCT/SRVT timeout, data mismatch, ...), all SRDO communication is stopped: S_xActive = FALSE, S_eError &lt;&gt; NO_ERROR &#xD;&#xA;	Errors can be acknowledged by a rising edge of S_xErrorAck. Safe communication will be continued." ObjectGUID="{53b4815b-da18-49ec-9d11-230b2cf2f640}">
    <Node Name="CheckAllSRDOActive" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Method returns true if all enabled SRDOs are in ACTIVE state.&#xD;&#xA;" IsHidden="true" ObjectGUID="{815beffa-dc1d-471e-be95-4d34f8aed351}" />
    <Node Name="UpdateConfigSRDOs" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; This method calls UpdateConfigSRDO for each SRDO.&#xD;&#xA; It syncs the safe SRDO configuration settings to the Object Dictionary.&#xD;&#xA;" IsHidden="true" ObjectGUID="{2f384d85-16d4-4fca-9056-fe663e858c07}" />
    <Node Name="CheckForOperational" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; This method checks if a state transition to OPERATIONAL&#xD;&#xA; is allowed.&#xD;&#xA; It returns true if all transition conditions are fulfilled:&#xD;&#xA;		* Unsafe stack signals OPERATIONAL&#xD;&#xA;		  _pExchange^.eCANopenState = CST.CANOPEN_STATE.OPERATIONAL&#xD;&#xA;		* Configuration Valid flag is set in Object Dictionary&#xD;&#xA;		  _SRDOObjectManager.ReadConfigurationValid()&#xD;&#xA;		* SRDO configuration data is consistent&#xD;&#xA;       CheckSRDOConfigData()&#xD;&#xA;		* Calculated CRCs match to CRCs in Object Dictionary&#xD;&#xA;		  CheckCRCs()&#xD;&#xA;&#xD;&#xA;	The method returns false if state transition to OPERATIONAL&#xD;&#xA; is not allowed. Additionaly it returns the error code&#xD;&#xA; INVALID_CONFIGURATION if SRDO configuration contains errors&#xD;&#xA; (CRC mismatch, inconsistent data, Configuration valid flag not set)." IsHidden="true" ObjectGUID="{a3f4bfe0-d733-4fde-8a69-01a4abb8257e}" />
    <Node Name="UpdateConfigSRDO" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This method copies the current SRDO configuration data from Object Dictionary&#xD;&#xA; if unsafe stack signals a configuration data change (UnsafeSRDO.xConfigChanged).&#xD;&#xA; If data has changed it will be copied to safe memory by calling CopySRDOData.&#xD;&#xA; CopySRDOData calculates the CRC and saves it to the safe SRDO config.&#xD;&#xA; This CRC is also copied into the Safety Exchange. The unsafe stack uses this for deciding&#xD;&#xA; if the Configuration Valid flag may be set by SDO.&#xD;&#xA; The method returns true if new data was copied.&#xD;&#xA;" IsHidden="true" ObjectGUID="{cb0d5676-2ef7-4d31-b9c3-9722c071a6b8}" />
    <Node Name="SwitchToOperational" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; This function switches to the internal &#xD;&#xA; state machine state OPERATIONAL.&#xD;&#xA;&#xD;&#xA; In this state safe communication is &#xD;&#xA; performed.&#xD;&#xA;&#xD;&#xA; State transition only valid from &#xD;&#xA; &quot;CHECK_CONFIGURATION&quot; state.&#xD;&#xA;" IsHidden="true" ObjectGUID="{44e0da3d-6453-43c0-81bc-2b921698b7e5}" />
    <Node Name="UpdateVariables" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; This function sets the output variables&#xD;&#xA; of the CANopenDeviceSIL2 function block&#xD;&#xA; and reads current inputs.&#xD;&#xA; " IsHidden="true" ObjectGUID="{368bc051-b4fb-40b1-9a4a-486ad8cf16b6}" />
    <Node Name="StateMachine" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function runs one time per bus cycle and implements the safe state machine&#xD;&#xA; with the following states:&#xD;&#xA;&#xD;&#xA;	- CHECK_CONFIGURATION:&#xD;&#xA;	This is the initial state, where the slave&#xD;&#xA; waits until following conditions are true: &#xD;&#xA;		* Unsafe stack is operational&#xD;&#xA;		* Configuration Valid Flag is set&#xD;&#xA;		* calculated CRCs are matching to the CRCs in Object Dictionary&#xD;&#xA; If all conditions are true the state machine is set to OPERATIONAL.&#xD;&#xA; If a CRC mismatch is detected the state is set to STOPPED and &#xD;&#xA; the output S_eError is set to INVALID_CONFIGURATION.&#xD;&#xA;&#xD;&#xA; - OPERATIONAL:&#xD;&#xA; In this state safe communication is performed.&#xD;&#xA;	S_xActive output is set when all SRDOs are in ACTIVE state.&#xD;&#xA; ACTIVE means at least one SRDO was received or sent.&#xD;&#xA; A transition to STOPPED is performed in following error cases:&#xD;&#xA;		* Send or receive error detected&#xD;&#xA;		* Unsafe stack is not OPERATIONAL &#xD;&#xA;&#xD;&#xA; - STOPPED:&#xD;&#xA; This is the error state, where all received&#xD;&#xA; SRDOs are dismissed and SRDO sending is not active.&#xD;&#xA;" IsHidden="true" ObjectGUID="{2241ffdd-ca6b-4959-a762-09c35d7dec04}" />
    <Node Name="ResetSRDOs" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function resets the internal state&#xD;&#xA; of all SRDOs.&#xD;&#xA;&#xD;&#xA; It is called before the state transition &#xD;&#xA; to OPERATIONAL state is perfomed and it&#xD;&#xA; goes through all SRDOs of the slave and &#xD;&#xA; sets their state to NOT_ACTIVE.&#xD;&#xA;" IsHidden="true" ObjectGUID="{7c76559a-77ee-4a04-96c4-c89a28d3b9b4}" />
    <Node Name="SetupSRDOs" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This method goes through all SRDOs,&#xD;&#xA; setups their I/O channels and syncs&#xD;&#xA; the safe SRDO configuration with unsafe&#xD;&#xA; Object Dictionary. Furthermore it invalidates the&#xD;&#xA; associated unsafe SRDO in Safety Exchange.&#xD;&#xA; The method return ERR_OK if no error occurs,&#xD;&#xA; otherwise ERR_FAILED.&#xD;&#xA;" IsHidden="true" ObjectGUID="{2e6b411c-66fb-4132-a7bb-b9a0ae806c5b}" />
    <Node Name="CheckSRDOConfigData" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This method checks consistency of SRDO config data.&#xD;&#xA; It returns false if an error is detected.&#xD;&#xA;" IsHidden="true" ObjectGUID="{82730368-52bd-4fc2-afbe-1b2535605c6e}" />
    <Node Name="SendSRDO" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function sends a specific SRDO, by&#xD;&#xA; writing it to the exchange buffer.&#xD;&#xA;&#xD;&#xA; It is called by the SendSRDOs function,&#xD;&#xA; which goes through all SRDOs of the &#xD;&#xA; slave.&#xD;&#xA;&#xD;&#xA; The function generates the inverse data&#xD;&#xA; for the SRDO, copies the whole SRDO to&#xD;&#xA; the exchange buffer and sets the COBID &#xD;&#xA; of the SRDO.&#xD;&#xA; A COBID unequal 0 of a SRDO in the &#xD;&#xA; exchange buffer triggers the CANopen &#xD;&#xA; unsafe stack to send the SRDO.&#xD;&#xA;&#xD;&#xA; A TTL for every SRDO is also generated&#xD;&#xA; by this function and is defined as follows:&#xD;&#xA; TTL = (current us Timestamp + Refresh Time in us) OR 1&#xD;&#xA; A value of 0 means that no TTL check should&#xD;&#xA; be perfomed. All other TTL values are checked &#xD;&#xA; in the driver and only messages where the TTL &#xD;&#xA; is smaller then the current timestamp are sent&#xD;&#xA; to the CANBus.&#xD;&#xA;&#xD;&#xA; Additionally, this function checks if&#xD;&#xA; the previous sending of this SRDO was &#xD;&#xA; successful, by reading the COBID from&#xD;&#xA; the exchange buffer. When a SRDO was &#xD;&#xA; sent by the unsafe CANopen stack, it&#xD;&#xA; overwrites the COBID with zero. If the&#xD;&#xA; check fails the SRDO state is set to&#xD;&#xA; SEND_ERROR.&#xD;&#xA;" IsHidden="true" ObjectGUID="{d2bef5be-6975-496f-b42a-85d41ed4295b}" />
    <Node Name="SwitchToCheckConfig" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; This function switches to the internal &#xD;&#xA; state machine state CHECK_CONFIGURATION.&#xD;&#xA;&#xD;&#xA;	The state machine waits until following conditions are true: &#xD;&#xA;		* Unsafe stack is operational&#xD;&#xA;		* Configuration Valid Flag is set&#xD;&#xA;		* calculated CRCs are matching to the CRCs in Object Dictionary&#xD;&#xA; If all conditions are true the state machine is set to OPERATIONAL.&#xD;&#xA;&#xD;&#xA; State transition only valid from &quot;STOPPED&quot; &#xD;&#xA; state.&#xD;&#xA;" IsHidden="true" ObjectGUID="{5b3eae37-7068-493d-b64a-b54c32ba3060}" />
    <Node Name="SetupIoChannels" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function configures the I/O channels&#xD;&#xA; of a given SRDO.&#xD;&#xA;&#xD;&#xA; It is called by the SetupSRDOs method,&#xD;&#xA; which parses the whole I/O configuration.&#xD;&#xA; All I/O channels of a given SRDO with the&#xD;&#xA; given parameter ID are read from the I/O&#xD;&#xA; configuration and driver specific information,&#xD;&#xA; which is used in IoDrvReadInputs and &#xD;&#xA; IoDrvWriteOutputs to read and write I/O data,&#xD;&#xA; is set.&#xD;&#xA;&#xD;&#xA; dwDriverSpecific is initialized by CANopen &#xD;&#xA; configurator as follows:&#xD;&#xA; 16 bit (value: 0) | &#xD;&#xA; 8 bit Stopbit in SRDO | &#xD;&#xA; 8 bit Startbit in SRDO&#xD;&#xA; &#xD;&#xA; This function modifies dwDriverSpecific&#xD;&#xA; as follows:&#xD;&#xA; 16 bit SRDO Array Index | &#xD;&#xA; 8 Bit value 0x80 | &#xD;&#xA; 8 bit Start Bit in SRDO&#xD;&#xA;&#xD;&#xA; Stop bit is marked with 0x80 to detect that&#xD;&#xA; this I/O channel is already configured.&#xD;&#xA;" IsHidden="true" ObjectGUID="{caa47c44-5e4f-4cb0-9ae4-4e199db6a8f8}" />
    <Node Name="ReceiveSRDOs" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function receives SRDOs from&#xD;&#xA; exchange buffer and checks them.&#xD;&#xA;&#xD;&#xA; It is called from OPERATIONAL state&#xD;&#xA; of the internal state machine and &#xD;&#xA; goes through all SRDOs, checks the &#xD;&#xA; SCT and SRVT of each one and copies&#xD;&#xA; the valid SRDO into the save SRDO&#xD;&#xA; which is used in IoDrvReadInputs function.&#xD;&#xA;&#xD;&#xA; The function returns NO_ERROR if no&#xD;&#xA; error ocurred on receiving.&#xD;&#xA;" IsHidden="true" ObjectGUID="{8a35286b-cf99-4a6f-bf22-9c86218fcfe4}" />
    <Node Name="ReadConfig" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This method reads the IoConfig and setups the function block.&#xD;&#xA; It reads the real unsafe connector (the one the unsafe stack is working on) in the safety exchange.&#xD;&#xA; This is necessary to get access to the current SRDO configuration values in unsafe Object Dictionary.&#xD;&#xA; This connector will be handed over (together with safe connector) &#xD;&#xA; to the SRDO Object Manager by calling Setup method.&#xD;&#xA; Furthermore SetupSRDOs is called which setups the safe Tx/RxSRDO Arrays &#xD;&#xA; and the associated I/O channels.&#xD;&#xA; The method returns ERR_OK if no error occurs, otherwise ERR_FAILED.&#xD;&#xA;" IsHidden="true" ObjectGUID="{3c35410d-c383-4f08-bfbd-5ca792a30927}" />
    <Node Name="CheckCRCs" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This method reads the CRCs of all SRDOs in Object Dictionary&#xD;&#xA; via the SRDOObjectManager. It returns TRUE if all CRCs match to the&#xD;&#xA; calculated CRCS saved in the corresponding SafeSRDO.&#xD;&#xA; In case of a CRC mismatch false is returned. &#xD;&#xA;" IsHidden="true" ObjectGUID="{3fd5acb2-bd26-4d75-b618-01a4f70b3ebe}" />
    <Node Name="DiscardSRDOs" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function receives all SRDOs from&#xD;&#xA; the exchange buffer and discards them.&#xD;&#xA;&#xD;&#xA; It is called in all states of the &#xD;&#xA; internal state machine, beside of &#xD;&#xA; the OPERATIONAL state, to receive and&#xD;&#xA; discard all received SRDOs, because &#xD;&#xA; they are only handled in OPERATIONAL&#xD;&#xA; state.&#xD;&#xA; " IsHidden="true" ObjectGUID="{008a32d4-f630-47dd-bf72-95b690e99071}" />
    <Node Name="SwitchToStopped" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; This function switches to the internal &#xD;&#xA; state machine state STOPPED.&#xD;&#xA;&#xD;&#xA; This state is the error state, where &#xD;&#xA; all received SRDOs are dismissed and SRDO sending is stopped.&#xD;&#xA;&#xD;&#xA; State transition is valid from every state.&#xD;&#xA; " IsHidden="true" ObjectGUID="{5d7113ff-b03d-44d5-aabb-a3631170160d}" />
    <Node Name="SendSRDOs" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function sends SRDOs, by copying them to exchange &#xD;&#xA; buffer.&#xD;&#xA;&#xD;&#xA; It is called from OPERATIONAL state of the internal state &#xD;&#xA; machine and goes through all SRDOs, checks the sending &#xD;&#xA; condition of each one and copies SRDOs, which should be &#xD;&#xA; send, to the exchange buffer.&#xD;&#xA;&#xD;&#xA; The sending condition is defined as follows:&#xD;&#xA; dwTimeDiff + dwHalfCycleTime) &gt;= (uiRefreshTime * DWORD#1000)&#xD;&#xA;&#xD;&#xA; - dwTimeDiff is the elapsed time since last sending.&#xD;&#xA;&#xD;&#xA; - dwHalfCycleTime is half of the last cycle time.&#xD;&#xA;&#xD;&#xA; The function returns SRDO_SEND_ERROR if an error occurs.&#xD;&#xA; Else NO_ERROR will be returned.&#xD;&#xA;" IsHidden="true" ObjectGUID="{7cf387fb-dce4-4653-a34f-aca1fa03292c}" />
    <Node Name="FB_Exit" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This is an implicit function.&#xD;&#xA;&#xD;&#xA; It is not implemented here, and just&#xD;&#xA; returns always TRUE.&#xD;&#xA;&#xD;&#xA; .. cds:ranges::&#xD;&#xA;&#xD;&#xA;     :bInCopyCode: [TRUE,FALSE]&#xD;&#xA;" IsHidden="true" ObjectGUID="{4e7368cd-8e66-4cf2-8417-9d40a8a9be62}" />
    <Node Name="FB_Init" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This is an implicit function.&#xD;&#xA;&#xD;&#xA; This function initializes some local&#xD;&#xA; variables of the FB, which are identifying&#xD;&#xA; the implemented I/O driver and remember&#xD;&#xA; the interface pointers.&#xD;&#xA;&#xD;&#xA; Furthermore it registers the local FB as&#xD;&#xA; an I/O driver to the I/O manager.&#xD;&#xA;&#xD;&#xA; .. cds:ranges::&#xD;&#xA;&#xD;&#xA;     :bInitRetains: [TRUE,FALSE]&#xD;&#xA;     :bInCopyCode: [TRUE,FALSE]&#xD;&#xA;" IsHidden="true" ObjectGUID="{ea24b66a-99cc-4e26-bbce-342d3c9763c6}" />
    <Node Name="FB_Reinit" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This is an implicit function.&#xD;&#xA;&#xD;&#xA; It is not implemented here, and just&#xD;&#xA; returns always TRUE.&#xD;&#xA;&#xD;&#xA; .. cds:ranges::&#xD;&#xA;&#xD;&#xA;     :~dummy_IN: [TRUE]&#xD;&#xA;" IsHidden="true" ObjectGUID="{779df8c4-7565-4fe0-a4e6-8a083ed234f5}" />
    <Node Name="IoDrvStartBusCycle" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function triggers one bus cycle.&#xD;&#xA;&#xD;&#xA; It is called in the same context as the&#xD;&#xA; bus cycle of the unsafe CANopenSlave stack,&#xD;&#xA; and always at the beginning of the task&#xD;&#xA; cycle.&#xD;&#xA;&#xD;&#xA; This function calculates the current time&#xD;&#xA; and triggers the state machines of the&#xD;&#xA; slave.&#xD;&#xA;&#xD;&#xA; The following error codes may be returned:&#xD;&#xA;&#xD;&#xA; - ERR_OK: This error code is always returned.&#xD;&#xA;&#xD;&#xA; .. cds:ranges::&#xD;&#xA;&#xD;&#xA;     :pConnector: [VALID_CONNECTOR,INVALID_CONNECTOR]&#xD;&#xA;     :~eSlaveState_IN: [STATE_STOPPED,STATE_ERROR,STATE_OPERATIONAL,STATE_CONFIG]&#xD;&#xA;     :~eDiagCode_IN: [DIAG_ERROR,DIAG_NO_ERROR]&#xD;&#xA;     :~xEnable_IN: [TRUE,FALSE]&#xD;&#xA;     :~xErrorAck_IN: [TRUE,FALSE]&#xD;&#xA;     :~xCRCValid_IN: [YES,NO,NONE]&#xD;&#xA;     :~xSRDOReceived_IN: [TRUE,FALSE]&#xD;&#xA;     :~eSlaveState_OUT: [STATE_STOPPED,STATE_ERROR,STATE_OPERATIONAL,STATE_CONFIG]&#xD;&#xA;     :~xActive_OUT: [TRUE,FALSE]&#xD;&#xA;" IsHidden="true" ObjectGUID="{32f95ebe-2a46-43d5-9d7a-f6b4863b8930}" />
    <Node Name="IoDrvUpdateConfiguration" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" IoDrvUpdateConfiguration is called on a new download or reset.&#xD;&#xA;&#xD;&#xA; Update or reset configuration&#xD;&#xA;&#xD;&#xA; This function is called when the I/O driver is&#xD;&#xA; initialized as well as when it is cleaned up.&#xD;&#xA;&#xD;&#xA; On cleanup, the parameter pConnectorList is zero.&#xD;&#xA; If pConnectorList is set unequal zero, the&#xD;&#xA; configuration is parsed, and all data structures&#xD;&#xA; are set up.&#xD;&#xA;&#xD;&#xA; - Search for CANopen Safety Connector&#xD;&#xA;&#xD;&#xA; - Set TxSRDO and RxSRDO pointer in base function block.&#xD;&#xA;&#xD;&#xA; - Init Safety Exchange by calling InitExchange&#xD;&#xA;&#xD;&#xA; - Call ReadConfig: Read and check SRDO config. Update dwDriverSpecific of I/O channels&#xD;&#xA;&#xD;&#xA; - Set diagnostic flags of CANopen Safety Slave to&#xD;&#xA;   available, found and configured&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; The following error codes may be returned:&#xD;&#xA;&#xD;&#xA; - ERR_OK: No errors occured.&#xD;&#xA;&#xD;&#xA; - ERR_FAILED: Failed updating configuration.&#xD;&#xA;&#xD;&#xA; - ERR_PARAMETER: Invalid pConnectorList or nCount.&#xD;&#xA;&#xD;&#xA; .. cds:ranges::&#xD;&#xA;&#xD;&#xA;     :pConnectorList: [VALID_CONNECTOR_LIST,INVALID_CONNECTOR_LIST]&#xD;&#xA;     :nCount: [0,VALID_CONNECTOR_LIST_COUNT]&#xD;&#xA;     :~xSRDOValid_IN: [YES,NO,NONE]&#xD;&#xA;     :~CRC_IN: [VALID_CRC,INVALID_CRC1,INVALID_CRC2]&#xD;&#xA;     :~UnsafeConfigSRDO_IN: [NULL,VALID_CONFIG_SRDO,INVALID_CONFIG_SRDO]&#xD;&#xA;     :~result: [ERR_FAILED,ERR_OK,ERR_PARAMETER]&#xD;&#xA;" IsHidden="true" ObjectGUID="{0bafc962-6841-4286-b55a-d697972e25d0}" />
    <Node Name="IoDrvGetModuleDiagnosis" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This method stores the diagnostic information&#xD;&#xA; of this slave in the corresponding connector.&#xD;&#xA; CONNECTOR_ACTIVE flag is set according to S_xActive,&#xD;&#xA; which is the output of the CANopenDeviceSIL2 FB,&#xD;&#xA; indicating safe communication.&#xD;&#xA;&#xD;&#xA; The following error codes may be returned:&#xD;&#xA;&#xD;&#xA; - ERR_OK: This error code is always returned.&#xD;&#xA;&#xD;&#xA; .. cds:ranges::&#xD;&#xA;&#xD;&#xA;     :pConnector: [VALID_CONNECTOR,INVALID_CONNECTOR]&#xD;&#xA;     :~xActive_IN: [TRUE,FALSE]&#xD;&#xA;     :~dwFlags_OUT: [ACTIVE,INACTIVE]&#xD;&#xA;" IsHidden="true" ObjectGUID="{37d8bc1e-894a-49f5-a83f-8515e182aa85}" />
  </Node>
  <Node Name="Library Manager" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{a34438c5-dc3b-49be-a802-a9384242e5c4}" />
  <Node Name="Project Information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
</Library>