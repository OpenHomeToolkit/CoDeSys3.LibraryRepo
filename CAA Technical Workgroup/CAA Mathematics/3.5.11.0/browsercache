<?xml version="1.0" encoding="utf-8"?>
<Library Name="CAA Mathematics, 3.5.11.0 (CAA Technical Workgroup)">
  <Node Name="SubVector" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will subtract two input vectors :math:`v_{1}, v_{2} \in \mathbb{R^{3}}` and store the result within vector :math:`v \in \mathbb{R^{3}}`:&#xD;&#xA;&#xD;&#xA; .. math::&#xD;&#xA;    v = v_{1}-v_{2}&#xD;&#xA;&#xD;&#xA; :return:&#xD;&#xA;   The return value is not used." ObjectGUID="{cff976f7-ff6e-4167-a12a-c7ae1d306af2}" />
  <Node Name="ScalProd3DStand" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will calculate the cosine of the angle being drawn by two input vectors :math:`v_{1}, v_{2} \in \mathbb{R^{3}}`.&#xD;&#xA; :return:&#xD;&#xA;    If one of the input vector equals the null vector, 0 will be returned." ObjectGUID="{66950949-0f1b-430b-8bf7-10cf7fe3cc43}" />
  <Node Name="ScalProd3D" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will calculate the scalar product of two vectors :math:`v_{1}, v_{2} \in \mathbb{R^{3}}`&#xD;&#xA; :return:&#xD;&#xA;    :math:`v_{1} \cdot v_{2} \in \mathbb{R}`" ObjectGUID="{61a3bf43-53a4-41a5-b32b-d7c7609b5c18}" />
  <Node Name="Norm3D" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will return the length/norm of a three dimensional vector :math:`v \in \mathbb{R^{3}}`&#xD;&#xA;&#xD;&#xA; :return:&#xD;&#xA;    The length/norm of the input vector :math:`v`" ObjectGUID="{c86970f4-3729-4d02-97b7-28bbcd5f72e5}" />
  <Node Name="MakeNormed3D" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will scale an input vector :math:`v \in \mathbb{R^{3}}` to norm 1, as far as :math:`v` is not the null vector.&#xD;&#xA; :return:&#xD;&#xA;    ``TRUE``: If :math:`v` is not the null vector " ObjectGUID="{d8a2b08c-e29d-48ab-8b7f-4dc546c6e5a0}" />
  <Node Name="CrossProductNormed" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will calculate the Cartesian product of two vectors :math:`v_{1}, v_{2} \in \mathbb{R^{3}}`.&#xD;&#xA; The result will be returned in vector :math:`v = \frac{v_{1} \times v_{2}}{\left \| v_{1} \times v_{2}\right \|} \in \mathbb{R^{3}}`.&#xD;&#xA; &#xD;&#xA; .. note::&#xD;&#xA;    Keep in mind that, due to rounding errors, the input of two collinear vectors will not necessarily result in the null vector. " ObjectGUID="{c4b88d91-75ac-4a1b-a2d3-3428c9bb45b6}" />
  <Node Name="CrossProduct" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will calculate the Cartesian product (outer product) of two vectors :math:`v_{1}, v_{2} \in \mathbb{R^{3}}`.&#xD;&#xA; The result will be returned in vector :math:`v = v_{1} \times v_{2} \in \mathbb{R^{3}}`.&#xD;&#xA;&#xD;&#xA; .. note::&#xD;&#xA;    Keep in mind that, due to rounding errors, the input of two collinear vectors will not necessarily result in the null vector. " ObjectGUID="{cce38907-02b5-4da6-865f-341cd2a80a30}" />
  <Node Name="AddMultiplicatedVector" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will multiply the input vector :math:`v_{2} \in \mathbb{R}` by a scalar :math:`a \in \mathbb{R}` &#xD;&#xA; and will add this product to the input vector :math:`v_{1} \in \mathbb{R}`:&#xD;&#xA; &#xD;&#xA; .. math::&#xD;&#xA;    b = v_{1} + a \cdot v_{2}&#xD;&#xA; :return:&#xD;&#xA;    The return value is not used." ObjectGUID="{9b4c80d1-db47-4e82-9c3e-dea74144a265}" />
  <Node Name="PolarToCartesian" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will change the polar coordinates of the two dimensional space :math:`(r, \varphi) \in \mathbb{R_{0}^{+}} \times \left( -\pi, \pi\right]`&#xD;&#xA; to Cartesian coordinates :math:`(x,y) \in \mathbb{R^{2}}`, which are connected via:&#xD;&#xA;&#xD;&#xA; .. math::&#xD;&#xA;    x = \cos(\varphi) \cdot r&#xD;&#xA;&#xD;&#xA;    y = \sin(\varphi) \cdot r" ObjectGUID="{b6c87d8b-bd6e-4e9c-a1ea-cbc210fbdecf}" />
  <Node Name="CartesianToPolar" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will change the Cartesian coordinates of the two dimensional space :math:`(x,y) \in \mathbb{R^{2}}`, &#xD;&#xA; to polar coordinates :math:`(r, \varphi) \in \mathbb{R_{0}^{+}} \times \left( -\pi, \pi\right]`, which are connected via:&#xD;&#xA; &#xD;&#xA; .. math::&#xD;&#xA;    r=\sqrt{x^{2} + y^{2}}&#xD;&#xA;&#xD;&#xA;    \varphi = \arctan\left(y, x\right)" ObjectGUID="{a43efea2-cba6-477c-a2bf-f5e892b3fa09}" />
  <Node Name="ProjectPointOnPlane" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will project a point :math:`x \in \mathbb{R^{3}}` onto a plane in direction of the normal vector. &#xD;&#xA; The return is the distance of the point :math:`x` to the plane." ObjectGUID="{87fa2bb9-8fef-41f2-b0d1-af5ce8138814}" />
  <Node Name="CalcHesseRepresentation" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will retrieve the normal form (due to Hesse) of a plane :math:`E` in the three dimensional space:&#xD;&#xA; :math:`E\colon(x-p)\cdot n = 0`, where :math:`n` is the normed normal on the plane and :math:`p` a point on the plane.&#xD;&#xA; The plane is originally specified by three of its points." ObjectGUID="{6ba9fbc5-2a38-4a38-adb6-f2f26163f58d}" />
  <Node Name="ProjectPointOnLine" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will project the point :math:`x \in \mathbb{R^{3}}` onto a straight line: thereby, the direction vector &#xD;&#xA; of the straight line is taken as normal vector of a plane that is moved along the line as long as it touches the point :math:`x`. &#xD;&#xA; The intersection point of the plane with the line corresponding to this location is the projected point. " ObjectGUID="{43cccd0d-115e-44c1-b649-7c24afdcdcf4}" />
  <Node Name="atan2" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will return the angle :math:`\varphi` (azimuth) necessary for changing Cartesian to polar coordinates.&#xD;&#xA; :return:&#xD;&#xA;    The angle :math:`\varphi \in \left(-\pi, \pi \right]`, whose sine and cosine correspond to the input values." ObjectGUID="{21d31c7b-fb2d-438b-87ac-2e3841abb445}" />
  <Node Name="Variance" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | This function will update the experimental variance of the mean with respect to the new input parameter :math:`x_{n}`,&#xD;&#xA;   which will be added to a series of data :math:`x_{n-1},\dots,n_{1}` (stemming from previous calls).&#xD;&#xA; | The variance :math:`s` of the data :math:`x_{n},\dots,x_{1}` is calculated according to: :math:`s = \frac{1}{n}\sum_{i=1}^{n}\left(x_{i} - \bar{x}\right)`, &#xD;&#xA;   where :math:`\bar{x}` is the arithmetic mean of the data." ObjectGUID="{bb6d69fa-96b9-4bf0-8f24-8c47cc65b825}" />
  <Node Name="Statistics_LREAL" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | This function block will update the values of minimum, maximum and average with respect to the integral input parameter :math:`x_{n}`,&#xD;&#xA;   which will be added to a set of integral data :math:`x_{n-1},\dots,n_{1}` (stemming from previous calls).&#xD;&#xA; | The arithmetic mean :math:`\bar{x}` of the values :math:`x_{n},\dots,x_{1}` is calculated by:&#xD;&#xA; &#xD;&#xA; .. math::&#xD;&#xA;    \bar{x} = \frac{1}{n}\sum_{i=1}^{n}x_{i}" ObjectGUID="{9f3847f1-ac68-4b26-9971-d623681d7eaf}" />
  <Node Name="Statistics_DINT" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will update the values of minimum, maximum and average with respect to the integral input parameter :math:`x_{n}`,&#xD;&#xA; which will be added to a set of integral data :math:`x_{n-1},\dots,x_{1}` (stemming from previous calls).&#xD;&#xA;&#xD;&#xA; .. math::&#xD;&#xA;    \left \lfloor \frac{\sum_{i=1}^{n}x_{i}+\left \lfloor \frac{n}{2} \right \rfloor}{n} \right \rfloor&#xD;&#xA; .. note::&#xD;&#xA;    Pay attention, that the returned average is of type ``DINT``. In contrast to the arithmetic mean the result will be rounded." ObjectGUID="{d73ea16f-8044-41c6-bab4-18a18a6c6f8b}" />
  <Node Name="MeasureFrequence" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will measure the average frequency of an input signal over a defined number of periods.&#xD;&#xA;&#xD;&#xA; .. note::&#xD;&#xA;    The function block has to be called with a frequency higher than the maximum frequency of the input signal to be able to calculate the correct result." ObjectGUID="{7310be5f-0c27-4976-bc0c-10a3fbfa7aad}" />
  <Node Name="Vector Functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{cbc77102-f34c-476f-9a24-a64d4e4424ab}" />
  <Node Name="Polar coordinates" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{8a456048-7c2f-4e37-8e10-fbcd4f42ff20}" />
  <Node Name="Plane Functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b62b1f5d-b5f6-44cf-bc91-1e549076f07c}" />
  <Node Name="Line Functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c34c8b89-8bb9-4fef-b124-d116bc284060}" />
  <Node Name="CharCurve_LREAL" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will evaluate a piecewise linear function (the characteristic curve) at an integral point :math:`x \in \mathbb{R}`. &#xD;&#xA; The characteristic curve is specified by a defined number of integral sampling points :math:`(x_{1}, y_{1}), \dots , (x_{n}, y_{n}) \in \mathbb{R^{2}}`" ObjectGUID="{9309ff8d-949b-4490-a426-1cf922917b0d}" />
  <Node Name="CharCurve_DINT" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will evaluate a piecewise linear function (the characteristic curve) at an integral point :math:`x \in \mathbb{Z}`. &#xD;&#xA; The characteristic curve is specified by a defined number of integral sampling points :math:`(x_{1}, y_{1}), \dots , (x_{n}, y_{n}) \in \mathbb{Z^{2}}`" ObjectGUID="{37698193-fb48-4ef3-be5c-d62f1325b4d8}" />
  <Node Name="PolynomialValue" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block evaluates a given polynomial  of arbitrary degree,&#xD;&#xA; :math:`p(x) = c_{n}x^{n} + c_{n-1}x^{n-1} + \dots + c_{1}x + c_{0}` with :math:`c_{i} \in \mathbb{R}, n \in \mathbb{N_{0}}` at a point :math:`x \in \mathbb{R}` by use of the Horner scheme." ObjectGUID="{76f146c4-6f8e-4ec0-8e7a-fd1b67ef127a}" />
  <Node Name="Integral" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will approximate the integral function of the fuction :math:`f = f(t)` over the time interval between the first function call :math:`t_{0}`&#xD;&#xA; and the actual time :math:`t_{n}`: :math:`\int_{t_{0}}^{t_{n}}f(t)\mbox{d}t`. The size of the time intervals :math:`[t_{i+1}, t_{i}]` are integers and measured in micro seconds.&#xD;&#xA; The approximation is carried out by use of the explicit (:math:`x = f(t_{n-1})`) resp. implicit (:math:`x = f(t_{n})`) Euler method:&#xD;&#xA;&#xD;&#xA; .. math::&#xD;&#xA;    \int_{t_{0}}^{t_{n}}f(t)\mbox{d}t \doteq \int_{t_{0}}^{t_{n-1}}f(t)\mbox{d}t + (t_{n} - t_{n-1}) \cdot x " ObjectGUID="{e2425009-7e4d-4215-b78d-c29d88172b2d}" />
  <Node Name="Derivative" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function block will approximate the first derivative :math:`f\prime` of a function :math:`f = f(t)` at the actual time :math:`t_{n}`&#xD;&#xA; with the respect to the values of the last three function calls according to the BDF method:&#xD;&#xA;&#xD;&#xA; .. math::&#xD;&#xA;    f\prime (t_{n}) \doteq \frac{3 (f(t_{n}) - f(t_{n-3})) + f(t_{n-1}) - f(t_{n-2})}{3(t_{n-2}-t_{n-3})+4(t_{n-1}-t_{n-2})+3(t_{n}-t_{n-1})}" ObjectGUID="{9cf2efc1-ba2c-4b58-ac2a-2d711f395b02}" />
  <Node Name="CalcRootParable" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" By use of this function block the root of a linear function :math:`y = a \cdot x^{2} + b \cdot x + c` with :math:`a\mbox{, }b\mbox{, }c\mbox{, }x \in \mathbb{R}`, &#xD;&#xA; if there are some, are calculated." ObjectGUID="{e37fe1f7-d894-4224-917c-91d190703139}" />
  <Node Name="CalcRootLin" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" By use of this function block the root of a linear function :math:`y = a \cdot x + b` with :math:`a\mbox{, }b\mbox{, }x \in \mathbb{R}`, if there is one, will be calculated." ObjectGUID="{427adfb4-0426-4afa-b517-6359e73a8c06}" />
  <Node Name="sgn" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will return the result of the signum function applied to input value :math:`x`:&#xD;&#xA;&#xD;&#xA; .. math::&#xD;&#xA;    \text{sgn}(x) = \begin{cases} -1 &amp;\mbox{if } x &lt; 0 \\0 &amp;\mbox{if } x = 0 \\1 &amp;\mbox{if } x &gt; 0 \end{cases}" ObjectGUID="{0524dbea-4410-48e4-9cef-bafc58d1842a}" />
  <Node Name="LimitAlarm_LREAL" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | This function block checks whether the value :math:`x \in \mathbb{R}` lies between an lower bound&#xD;&#xA;   :math:`x_{u} \in \mathbb{R}` and an upper bound :math:`x_{o} \in \mathbb{R}`.&#xD;&#xA; | The output value will be set according to the result. " ObjectGUID="{bd45de2e-bcf4-4af7-8f64-352dcaf89620}" />
  <Node Name="LimitAlarm_DINT" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | This function block checks whether an integral value :math:`x \in \mathbb{Z}` lies between an integral lower bound&#xD;&#xA;   :math:`x_{u} \in \mathbb{Z}` and an integral upper bound :math:`x_{o} \in \mathbb{Z}`.&#xD;&#xA; | The output value will be set according to the result. " ObjectGUID="{449db56c-4bef-42f0-9506-938083a07c06}" />
  <Node Name="Hysteresis_LREAL" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | This function block will set the output variable to ``TRUE``, if the input value :math:`x \in \mathbb{R}` is smaller&#xD;&#xA;   than a lower bound :math:`x_{u} \in \mathbb{R}`.&#xD;&#xA; | It will set the output variable to ``FALSE``, if the input value :math:`x` exceeds the upper bound :math:`x_{o} \in \mathbb{R}`.&#xD;&#xA; | If :math:`x` lies between the lower and the upper bound, the value of the output variable will rest unchanged by the module." ObjectGUID="{d3e20e45-05e7-46a8-9f6d-3127115134af}" />
  <Node Name="Hysteresis_DINT" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | This function block will set the output variable to ``TRUE``, if the integral value :math:`x \in \mathbb{Z}`&#xD;&#xA;   is smaller than an integral lower bound :math:`x_{u} \in \mathbb{Z}`&#xD;&#xA; | It will set the Boolean output variable to ``FALSE``, if the input value :math:`x` exceeds the integral upper bound :math:`x_{o} \in \mathbb{Z}`. &#xD;&#xA; | If :math:`x` lies between the lower and upper bound, the value of the output will rest unchanged by the module. " ObjectGUID="{d42030d4-46ae-4f76-a2a0-970a63b9feed}" />
  <Node Name="fmod" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will return the modulo of the integral division :math:`\frac{x}{m}`:&#xD;&#xA; &#xD;&#xA; .. math::&#xD;&#xA;    x\ \mathrm{mod}\ m = x - \left \lfloor \frac{x}{m} \right \rfloor \cdot m&#xD;&#xA;&#xD;&#xA; .. note::&#xD;&#xA;    The invalid input :math:`m=0` will result in the return 0." ObjectGUID="{ac053fd0-4b60-46de-a03e-c60e210db771}" />
  <Node Name="LinearTrafo" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function will calculate the linear transformation :math:`y \in \mathbb{R}` of :math:`x \in \mathbb{R}` according to&#xD;&#xA;&#xD;&#xA; .. math::&#xD;&#xA;    \frac{y - y_{1}}{y_{2}-y_{1}} = \frac{x-x_{1}}{x_{2}-x_{1}}&#xD;&#xA;&#xD;&#xA;    \mathrm{with}\ x_{1}, x_{2}, y_{1}, y_{2} \in \mathbb{R}\ \mathrm{and}\ x_{1} \neq x_{2} \land x_{1} \leq x \leq x_{2}" ObjectGUID="{3e3b8d4e-4526-4cd6-99a5-a465cb0830a3}" />
  <Node Name="VECTOR3D" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" This structure defines a vector :math:`\vec{0P} = \vec{P}` of the three dimensional space by specifying the floating-point values of &#xD;&#xA; the x-, y- and z-component of its target point :math:`P`." ObjectGUID="{11700823-e823-45ec-9e1c-1229859b1ddd}" />
  <Node Name="POINT2_LREAL" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" This structure defines a vector :math:`\vec{0P} = \vec{P}` of the two dimensional space by specifying the floating-point values of &#xD;&#xA; the x- and y-component of its target point :math:`P`." ObjectGUID="{98fe67ca-ef72-4fcf-b564-dfb98adf2e31}" />
  <Node Name="POINT2_DINT" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" This structure defines a vector :math:`\vec{0P} = \vec{P}` of the two dimensional space by specifying the integral values of &#xD;&#xA; the x- and y-component of its target point :math:`P`." ObjectGUID="{b2c1fe6b-7530-4ea6-90f7-266d9c794db5}" />
  <Node Name="PLANE_H" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" This structure defines a plane in the three dimensional space according to the normal form due to Hesse:&#xD;&#xA; :math:`ax + by + cz + d = 0`, where :math:`n` represents the normed normal of the plane." ObjectGUID="{b79de283-16d3-4c22-bcad-adbb7be2ec5e}" />
  <Node Name="LINE_3D" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" This structure defines a straight line in the three dimensional space by specifying two (not identical) points being part of it. " ObjectGUID="{8cd12352-3e21-4e67-bc10-7aa20a917bca}" />
  <Node Name="GlobalConstants" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{bdb0d618-4c90-420b-8c8e-f572f8184e99}" />
  <Node Name="trigonometrical functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{a527c8c7-8a4f-441d-84f0-c60f6c222e45}" />
  <Node Name="statistical functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{298cc6f1-26ab-4056-a7c6-24b6ba0a6289}" />
  <Node Name="signals" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{2875404f-ca1b-4e0f-9496-4ba724ca9529}" />
  <Node Name="geometrical functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{8ef54724-7d28-48dd-bdae-a2e76283bedf}" />
  <Node Name="function manipulators" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{789e478d-003c-4da3-ac3a-3250f99d34ea}" />
  <Node Name="analytical functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{a989576e-60d6-43d6-a625-170bf969c01c}" />
  <Node Name="analog monitors" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{71f7ebea-6190-4eb5-9290-725d2823a8af}" />
  <Node Name="Transformations" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{0346ad6b-3520-4dd1-8f9a-2c146013c07c}" />
  <Node Name="IsLibReleased" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function has been automatically generated from the project information." ObjectGUID="{445d2b8e-e5c5-54ec-8b5c-0abf82faae3a}" />
  <Node Name="GetLibVersionNumber" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function has been automatically generated from the project information." ObjectGUID="{e5561e6b-e4a3-52c2-afe2-127b8d3ac083}" />
  <Node Name="GetLibVersion" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function has been automatically generated from the project information." ObjectGUID="{d754badd-b8c8-5d3b-840b-2496c8e67b65}" />
  <Node Name="Structs" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{7ba811f1-321c-474f-ada3-8fd65587a3cf}" />
  <Node Name="Global Variables" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{1e6839ed-31a1-44a4-ad2d-d034938437da}" />
  <Node Name="Functions" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{efcd0fe6-6469-48d8-90cd-1506d49fa27f}" />
  <Node Name="VersionConstants" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{d91a83ec-d559-4395-8d06-e1dd3aebd716}" />
  <Node Name="Project information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="Library Manager" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{980b578a-c0a7-4e73-a867-d54ac0b3bf7a}" />
  <Node Name="Library Information" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{c8706b13-1f28-4097-8c35-c12aa6824251}" />
  <Node Name="GetSupplierVersion" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This is a necessary module for each CAA library.&#xD;&#xA; :return:&#xD;&#xA;   | Indicates the implementation version assigned by the manufacturer. The more significant byte contains the release version, the less significant byte the implementation version.&#xD;&#xA;   | Example: The return 522=16#020A indicates release version 2 and implementation version 10." ObjectGUID="{b325a742-f054-48e1-83d3-526dda29e744}" />
  <Node Name="CAA Mathematics" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{40e8f9a8-0355-4371-a8ec-1ed49980f995}" />
</Library>