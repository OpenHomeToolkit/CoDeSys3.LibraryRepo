<?xml version="1.0" encoding="utf-8"?>
<Library Name="CmpSchedule, 3.5.9.0 (System)">
  <Node Name="SchedWaitSleep" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Function to sleep a specified time interval in microseconds _without_ consuming processor load!&#xD;&#xA;  &lt;/description&gt;&#xD;&#xA;  &lt;param name=&quot;ptSleepUs&quot; type=&quot;IN&quot;&gt;Time to sleep in microseconds&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;error code&lt;/result&gt;" ObjectGUID="{285bbde2-c152-402b-a02f-7c176f849269}" />
  <Node Name="SchedWaitBusy" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Function to wait busy during a specified time interval. This consumes maximum of processor load!&#xD;&#xA;  &lt;/description&gt;&#xD;&#xA;  &lt;param name=&quot;ptSleepUs&quot; type=&quot;IN&quot;&gt;Time to sleep in microseconds&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;error code&lt;/result&gt;" ObjectGUID="{75832b33-3041-49ff-bdd9-2bd41bf635c4}" />
  <Node Name="SchedUnregisterExternalEvent" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &lt;description&gt;&#xD;&#xA; &lt;p&gt;Unregister an external event, which was registered by&#xD;&#xA; SchedRegisterExternalEvent() before.&lt;/p&gt;&#xD;&#xA; &lt;p&gt;This function should be called on system shutdown&lt;/p&gt;&#xD;&#xA; &lt;p&gt;Valid Hook: CH_EXIT2&lt;/p&gt;&#xD;&#xA; &lt;/description&gt;&#xD;&#xA; &lt;param name=&quot;hExtEvent&quot; type=&quot;IN&quot;&gt;Handle to the external event, that should be unregistered.&lt;/param&gt;&#xD;&#xA; &lt;errorcode name=&quot;RTS_IEC_RESULT&quot; type=&quot;ERR_OK&quot;&gt;Event was deregistered successfully&lt;/errorcode&gt;&#xD;&#xA; &lt;errorcode name=&quot;RTS_IEC_RESULT&quot; type=&quot;ERR_PARAMETER&quot;&gt;The event handle was not registered before&lt;/errorcode&gt;&#xD;&#xA; &lt;result&gt;Error code&lt;/result&gt;" ObjectGUID="{b0f45370-e742-4782-abb9-3a827e8da7af}" />
  <Node Name="SchedSetTaskInterval" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Set the actual interval of a cyclic task. If the specified task is no cyclic task, the function return an error.&#xD;&#xA; 	This interface can be used to synchronize a task to another task or to events.&#xD;&#xA;  &lt;/description&gt;&#xD;&#xA;  &lt;param name=&quot;hSchedTask&quot; type=&quot;IN&quot;&gt;Handle to the task&lt;/param&gt;&#xD;&#xA;  &lt;param name=&quot;tInterval&quot; type=&quot;IN&quot;&gt;New interval in microseconds!&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;error code&lt;/result&gt;" ObjectGUID="{c6ca4351-e95d-406d-bfdc-57c679ae84ea}" />
  <Node Name="SchedRegisterExternalEvent" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &lt;description&gt;&#xD;&#xA; &lt;p&gt;Register an external event, which might be used later by&#xD;&#xA; event tasks. You should register those events during the system&#xD;&#xA; startup, so that the scheduler knows all events when the&#xD;&#xA; application is loaded.&lt;/p&gt;&#xD;&#xA; &lt;p&gt;Valid Hook: CH_INIT2&lt;/p&gt;&#xD;&#xA; &lt;p&gt;Note: the parameter pszExtEventName needs to be constantly&#xD;&#xA; allocated. It might either be a constant string, a global string&#xD;&#xA; variable, or a dynamically allocated string. But the memory needs&#xD;&#xA; to be valid during the life time of the event handle.&lt;/p&gt;&#xD;&#xA; &lt;/description&gt;&#xD;&#xA; &lt;param name=&quot;pszExtEventName&quot; type=&quot;IN&quot;&gt;Name of the event, as it was specified in the device description. This parameter needs to be constantly allocated&lt;/param&gt;&#xD;&#xA; &lt;param name=&quot;pResult&quot; type=&quot;INOUT&quot;&gt;Error Code&lt;/param&gt;&#xD;&#xA; &lt;errorcode name=&quot;RTS_IEC_RESULT&quot; type=&quot;ERR_OK&quot;&gt;Event was registered successfully&lt;/errorcode&gt;&#xD;&#xA; &lt;errorcode name=&quot;RTS_IEC_RESULT&quot; type=&quot;ERR_NOMEMORY&quot;&gt;There was not enough memory to register the new event handle&lt;/errorcode&gt;&#xD;&#xA; &lt;result&gt;handle to the event&lt;/result&gt;" ObjectGUID="{64585137-31c4-437e-a762-62d2dfe00057}" />
  <Node Name="SchedPostExternalEvent" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &lt;description&gt;&#xD;&#xA; &lt;p&gt;Execute all tasks, that are registered for the given&#xD;&#xA; event. The execution context may vary depending on the&#xD;&#xA; scheduler type. It might be executed synchronously in the&#xD;&#xA; context of the caller, or a system task (e.g. ontop of an&#xD;&#xA; OS) is just signaled to execute the task code.&lt;/p&gt;&#xD;&#xA; &lt;p&gt;Note, that the result ERR_NO_OBJECT might not be a&#xD;&#xA; real error. Depending on the system it might be OK, that&#xD;&#xA; no task was registered for this event.&lt;/p&gt;&#xD;&#xA; &lt;/description&gt;&#xD;&#xA; &lt;param name=&quot;hExtEvent&quot; type=&quot;IN&quot;&gt;Handle to the external event, which tasks should be signaled&lt;/param&gt;&#xD;&#xA; &lt;errorcode name=&quot;RTS_IEC_RESULT&quot; type=&quot;ERR_OK&quot;&gt;Event was signaled successfully&lt;/errorcode&gt;&#xD;&#xA; &lt;errorcode name=&quot;RTS_IEC_RESULT&quot; type=&quot;ERR_PARAMETER&quot;&gt;The event handle was not found&lt;/errorcode&gt;&#xD;&#xA; &lt;errorcode name=&quot;RTS_IEC_RESULT&quot; type=&quot;ERR_NO_OBJECT&quot;&gt;There was no task, registered on this event&lt;/errorcode&gt;&#xD;&#xA; &lt;result&gt;Error Code&lt;/result&gt;" ObjectGUID="{57cb902e-746f-4562-91d9-f503f40c85fd}" />
  <Node Name="SchedGetTaskInterval" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Get the actual interval of a cyclic task. If the specified task is no cyclic task, the function return an error.&#xD;&#xA;  &lt;/description&gt;&#xD;&#xA;  &lt;param name=&quot;hSchedTask&quot; type=&quot;IN&quot;&gt;Handle to the task&lt;/param&gt;&#xD;&#xA;  &lt;param name=&quot;ptInterval&quot; type=&quot;OUT&quot;&gt;Interval of the task in microseconds!&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;error code&lt;/result&gt;" ObjectGUID="{a401a7cf-b36a-41ad-ab5b-902c4c22363c}" />
  <Node Name="SchedGetTaskHandleByName" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Function returns the handle to the task specified by name.&#xD;&#xA;  &lt;/description&gt;	&#xD;&#xA;  &lt;param name=&quot;pszTaskName&quot; type=&quot;IN&quot;&gt;Task name&lt;/param&gt;&#xD;&#xA;  &lt;param name=&quot;pResult&quot; type=&quot;OUT&quot;&gt;ERR_OK or Error code&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;Scheduler task handle&lt;/result&gt;" ObjectGUID="{042dea55-f0a1-4b14-9e36-171197d36eea}" />
  <Node Name="SchedGetTaskHandleByIndex" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Function returns the task handle of a task specified by an index.&#xD;&#xA;  &lt;/description&gt;	&#xD;&#xA;  &lt;param name=&quot;pApp&quot; type=&quot;IN&quot;&gt;If an application is specified, only the task of this application is returned.&#xD;&#xA; 	If NULL, the task with the index in all tasks i returned.&#xD;&#xA;  &lt;/param&gt;&#xD;&#xA;  &lt;param name=&quot;pResult&quot; type=&quot;OUT&quot;&gt;ERR_OK or Error code&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;Handle to the task&lt;/result&gt;" ObjectGUID="{6114d169-0e91-4a59-a531-0a3c167403dd}" />
  <Node Name="SchedGetTaskEventByHandle" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Function returns the handle to the task event. With this event a task can be activaed externally,&#xD;&#xA; 	e.g. for external triggered event tasks. The event can be sent by SysEventSet(EventHandle);&#xD;&#xA;  &lt;/description&gt;	&#xD;&#xA;  &lt;param name=&quot;hSchedTask&quot; type=&quot;IN&quot;&gt;Scheduler task handle&lt;/param&gt;&#xD;&#xA;  &lt;param name=&quot;pResult&quot; type=&quot;OUT&quot;&gt;ERR_OK or Error code&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;Event handle. Can be used with SysEventSet(hEvent) of the SysEvent.library to wakeup the task&lt;/result&gt;" ObjectGUID="{9788f825-77ba-4a59-af72-c9600f1ade62}" />
  <Node Name="SchedGetProcessorLoad" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;Returns the processor load of all IEC tasks&lt;/description&gt;&#xD;&#xA;  &lt;param name=&quot;pResult&quot; type=&quot;OUT&quot;&gt;Pointer to error code&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;Processor load in percent&lt;/result&gt;" ObjectGUID="{041f0011-bdbc-4d7a-94fa-e09c2fd221ff}" />
  <Node Name="SchedGetNumOfTasks" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;&#xD;&#xA; 	Is called to get the number of all registerd IEC tasks in the scheduler.&#xD;&#xA;  &lt;/description&gt;	&#xD;&#xA;  &lt;param name=&quot;pApp&quot; type=&quot;IN&quot;&gt;If an application is specified, only the tasks of this application is returned.&#xD;&#xA; 	If NULL, number of all tasks is returned.&#xD;&#xA;  &lt;/param&gt;&#xD;&#xA;  &lt;param name=&quot;pResult&quot; type=&quot;OUT&quot;&gt;ERR_OK or Error code&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;Number of tasks&lt;/result&gt;" ObjectGUID="{75299bf2-ffdc-4bc1-90e9-02652cc887d2}" />
  <Node Name="SchedGetCurrentTask" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment="  &lt;description&gt;Is called to get the schedule handle of the current running task&lt;/description&gt;&#xD;&#xA;  &lt;param name=&quot;pResult&quot; type=&quot;OUT&quot;&gt;ERR_OK or Error code&lt;/param&gt;&#xD;&#xA;  &lt;result&gt;Handle to the current running task or RTS_INVALID_HANDLE if failed&lt;/result&gt;" ObjectGUID="{d85deac5-bc0c-4dd9-8899-e984493b7147}" />
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="Project Information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="Bibliotheksverwalter" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{af03653c-47ea-485b-9bc6-c9a01432f58d}" />
</Library>