<?xml version="1.0" encoding="utf-8"?>
<Library Name="SysEvent, 3.4.4.0 (System)">
  <Node Name="SysEventSet" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &lt;description&gt;Set the given Event. With this operation, a task is activated if it waits for the&#xD;&#xA;	event with SysEventWait.&lt;/description&gt;&#xD;&#xA; &lt;result&gt;&lt;p&gt;RESULT: Returns the runtime system error code (see CmpErrors.library).&lt;/p&gt;&lt;/result&gt;" ObjectGUID="{788178af-060a-4069-9856-8ae69b0c62ac}" />
  <Node Name="SysEventCreate" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &lt;description&gt;Create a new event object specified with name. Two components can open the same event, if they specify&#xD;&#xA;	the same name.&#xD;&#xA;	&lt;p&gt;IMPLEMENTATION NOTE:&lt;/p&gt;&#xD;&#xA;	&lt;ul&gt;&#xD;&#xA;		&lt;li&gt;If a name is specified in szEvent, typically a system wide event is created.&lt;/li&gt;&#xD;&#xA;		&lt;li&gt;If an event still exists with this name, the routine returns the handle to the existing event&lt;/li&gt;&#xD;&#xA;		&lt;li&gt;szEvent can be NULL, so a new unique event with an empty name must be created&lt;/li&gt;&#xD;&#xA;		&lt;li&gt;If SysEventWait() is done after SysEventSet(), the event should signal the task!&lt;/li&gt;&#xD;&#xA;		&lt;li&gt;An event must not be used to signal several tasks!&lt;/li&gt;&#xD;&#xA;	&lt;/ul&gt;&#xD;&#xA;	&lt;p&gt;TARGET SPECIFIC IMPLEMENTATION:&lt;/p&gt;&#xD;&#xA;	&lt;ul&gt;&#xD;&#xA;		&lt;li&gt;CoDeSys Control RTE:&#xD;&#xA;			- If szEvent is specified, the event will work as a system wide Windows event. In this case, every call to SysEventSet/Wait will &#xD;&#xA;				call the corresponding Windows API-functions and this may last an unpredictable time!&#xD;&#xA;			- In case SysEventCreate is called with a NULL-pointer in szEvent, the event can be used to synchronize RTE-tasks only. The calls&#xD;&#xA;				to SysEventSet/Wait keep their real time capabilities.&#xD;&#xA;		&lt;/li&gt; &#xD;&#xA;  &lt;/ul&gt;&#xD;&#xA; &lt;/description&gt;&#xD;&#xA; &lt;result&gt;&lt;p&gt;RESULT: Handle to the event or RTS_INVALID_HANDLE if failed.&lt;/p&gt;&lt;/result&gt;" ObjectGUID="{e8a9f73f-9853-42cd-af87-dd9e296ca0de}" />
  <Node Name="Project Information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="SysEventWait" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &lt;description&gt;Wait for the given Event&lt;/description&gt;&#xD;&#xA; &lt;result&gt;&lt;p&gt;RESULT: Returns the runtime system error code (see CmpErrors.library):&#xD;&#xA;	&lt;ul&gt;&#xD;&#xA;		&lt;li&gt;ERR_OK: if event was received&lt;/li&gt;&#xD;&#xA;		&lt;li&gt;ERR_TIMEOUT: for timeout&lt;/li&gt;&#xD;&#xA;	&lt;/ul&gt;&#xD;&#xA; &lt;/p&gt;&lt;/result&gt;" ObjectGUID="{66568b44-45c0-406c-afdf-ce9f0ae5fbc0}" />
  <Node Name="SysEventDelete" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &lt;description&gt;Delete an exisiting event object&lt;/description&gt;&#xD;&#xA; &lt;result&gt;&lt;p&gt;RESULT: Returns the runtime system error code (see CmpErrors.library).&lt;/p&gt;&lt;/result&gt;" ObjectGUID="{c0aac24b-7b3a-4aea-8d78-c305e3a17ac4}" />
</Library>