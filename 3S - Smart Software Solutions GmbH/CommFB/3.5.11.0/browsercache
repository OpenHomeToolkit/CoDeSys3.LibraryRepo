<?xml version="1.0" encoding="utf-8"?>
<Library Name="CommFB, 3.5.11.0 (3S - Smart Software Solutions GmbH)">
  <Node Name="WRRECdefault" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{fb2210d2-5e1f-4a9a-b61f-3504e70421f5}">
    <Node Name="Waiting" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{94f79c29-16ec-4acd-a593-7302498d7826}" />
    <Node Name="Start" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{c04c6fba-2856-4159-b232-6971c8cc3e69}" />
    <Node Name="PosResponse" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{7ffc4399-d9ff-473b-99ed-7cc847908582}" />
    <Node Name="NegResponse" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{5ddca21a-e37b-4656-bea8-7d2e08579ba4}" />
  </Node>
  <Node Name="WRRECbase" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{d41698d9-db5b-40b4-bbd6-acf9e91b6e07}" />
  <Node Name="WRREC_State" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{9d6e4a31-2ef4-49e0-8cff-5272828c56cc}" />
  <Node Name="RDRECdefault" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{f428b0f8-6ca3-47a1-8b80-9f5c9dce88d2}">
    <Node Name="Waiting" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{fa260d8d-c039-472c-a9d4-bd0768fed27b}" />
    <Node Name="Start" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{29298d71-c190-46f0-9d83-923a5770e09d}" />
    <Node Name="PosResponse" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a89ae603-701c-45b2-ac9d-dc0ab6a2d092}" />
    <Node Name="NegResponse" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{91fe60e4-09d1-4ca1-86b1-934674f5b83e}" />
    <Node Name="CopyData" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{12ed8cdc-e530-45f9-83da-4c8170059f0d}" />
  </Node>
  <Node Name="RDRECbase" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{33a528a5-c809-4d29-b3b7-94ad124cc302}" />
  <Node Name="RDREC_State" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{f2de3072-6256-4c1f-91f3-a1ccce7da003}" />
  <Node Name="InstanceHandler" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{5c5dca87-c894-4f65-8bc2-317f22a692bf}">
    <Node Name="RegisterInterfaces" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{4ffccdba-e9df-443b-9350-358cb61900c5}" />
    <Node Name="RegisterExtIO" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{b66f8b9c-5f9f-4ca6-b8a9-9e055abcbd6b}" />
    <Node Name="RegisterExt" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d1e4d44d-1c3b-4b83-a777-fd995cbec61a}" />
    <Node Name="RegisterDiag" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d510148f-6084-4aab-9e74-d303ad67428a}" />
    <Node Name="Register" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{276822f0-27df-4b15-8ff4-1987c71699d2}" />
    <Node Name="GetIOFactory" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{91d7ff16-098e-4a45-9fca-a89622e52995}" />
    <Node Name="GetFactoryExt" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsExcludedFromBuild="true" ObjectGUID="{e1da6324-729d-4cd0-9aa9-c746b6d81689}" />
    <Node Name="GetFactory" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{87efeb5a-bb9c-43a5-a1ac-ae168c025553}" />
    <Node Name="GetDiagFactory" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{11d4a8dc-0000-4a57-930c-e40fbb033195}" />
    <Node Name="GetConnectionManagerFactory" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{d9cdfa39-079d-458d-9c52-b636229faef0}" />
    <Node Name="CreateID" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{59073b19-756d-47f4-bc58-9871ac9b487e}" />
  </Node>
  <Node Name="IConnectionManagerClient" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{1f44cbc9-970b-4611-b313-ce8f32c49057}">
    <Node Name="ReleaseCnf" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{7fbe0720-543c-4e22-9c44-9f7a9fea4a52}" />
    <Node Name="ErrorInd" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{a7e0efb2-ee1f-4f19-b647-ff9615d75f2e}" />
    <Node Name="ConnectCnf" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{a2b37d2b-5bd3-48eb-8021-c98d4c126f99}" />
  </Node>
  <Node Name="IConnectionManager" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{1b1284bb-2c39-46c9-af21-380c5a43728b}">
    <Node Name="UpdateAddress" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{6604240f-dd32-4f29-98df-50b4eb1b28a2}" />
    <Node Name="ReleaseReq" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{20882f95-6ca5-4131-8d41-e633af9daa3a}" />
    <Node Name="ConnectReq" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{9bb6ffb7-b0ee-4cdb-8f50-3c1b96218d87}" />
  </Node>
  <Node Name="ICommFBFactoryIO" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{598c2a9e-a0fb-495b-857f-651b986f51a3}">
    <Node Name="PutOutputData" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{0cef4890-63a8-402d-ae84-e83c7ef8d59a}" />
    <Node Name="GetInputData" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{634a4b4b-a09c-4889-b8dc-5104f3661d5a}" />
    <Node Name="CheckOwner" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{1aebf684-1598-4865-a974-84dc02651d0d}" />
  </Node>
  <Node Name="ICommFBFactoryExt" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{bfc4b521-e9ac-4780-a8f6-9eedd4f60a06}">
    <Node Name="TryGetID" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{5ec3814a-fc43-4b01-bbfa-0fd9a4f7395f}" />
    <Node Name="TryGetAddress" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{d0ff3694-b426-42ed-819c-44a9d1d54042}" />
  </Node>
  <Node Name="ICommFBFactory" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{2f1143be-726b-40eb-a45b-50031b763449}">
    <Node Name="ReleaseWRREC" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{cde679bc-271b-4bd4-80de-3ddf237af2b6}" />
    <Node Name="ReleaseRDREC" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{73d173a3-3f2f-4ec9-9321-aff91cbbb042}" />
    <Node Name="GetWRREC" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{e480cef7-8ccf-4817-90e6-453a57f879a7}" />
    <Node Name="GetRDREC" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{580fa7e4-334c-458f-810a-f2c319f5af44}" />
    <Node Name="CheckOwner" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{e7a7e6a9-93a8-4d0a-b5a6-ca7272703b04}" />
  </Node>
  <Node Name="ICommFBDiagProvider" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{79d78041-9258-45b7-b611-894b6d89c83f}">
    <Node Name="GetDiag" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{4f176f26-9226-47b1-808a-043e3f4d08cf}" />
    <Node Name="GetAlarm" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{1eed95d8-a8cc-41b4-80f7-c7368adb85f3}" />
    <Node Name="CheckOwner" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{b1eb7276-33d1-4b93-97ff-d5ba3be205cd}" />
  </Node>
  <Node Name="ICommFBConnectionManagerFactory" TypeGUID="{6654496c-404d-479a-aad2-8551054e5f1e}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{fd490ae3-01cb-471a-8106-8c57a860075b}">
    <Node Name="ReleaseConnectionManager" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{e321d229-7a25-4d9d-9484-c607c6c3873b}" />
    <Node Name="GetConnectionManager" TypeGUID="{f89f7675-27f1-46b3-8abb-b7da8e774ffd}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{a5a38a36-2c67-46de-8c36-78d646a61fb6}" />
  </Node>
  <Node Name="ConnectionManagerClientInternal" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{fd5a24ca-eaa8-4942-8b51-447a5b2d1fbd}">
    <Node Name="ReleaseCnf" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{8e7849f6-3e45-4013-a8de-b55f065346ac}" />
    <Node Name="ErrorInd" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{9966e985-d204-44f9-a5ce-f90e3e6a6b8b}" />
    <Node Name="ConnectCnf" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" ObjectGUID="{a74baafa-3727-4e5d-9a33-90b2c91172b2}" />
  </Node>
  <Node Name="CNCT_State" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" IsHidden="true" ObjectGUID="{f2420454-b89b-434d-a87e-b7f8a2b1ed5f}" />
  <Node Name="SLOT_ID" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" Provides the ID of a Profibus slot to a given Profibus DP-slave handle " ObjectGUID="{fd7ca1be-c86a-44d8-8ccf-9f1c6886b72e}" />
  <Node Name="ID" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function converts the physical identification of a slot or a DP-slave to a handle which can be used with Communication Function Blocks.&#xD;&#xA;" ObjectGUID="{f3c8e2a3-9d08-45dd-8795-8b10401ff0fe}" />
  <Node Name="ADDR" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" This function converts a handle which addresses a slot or a DP-slave into its physical address." ObjectGUID="{1f46981c-5032-452e-985f-e8b03125b721}" />
  <Node Name="PN_DEVICE_ID" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{c284315c-4b28-4abe-b120-e371e7e96a6c}" />
  <Node Name="PN_ADDR" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" | data structure for physical/native identification or subslot of a PROFINET IO Device." ObjectGUID="{c47a08c8-d2f4-4d7a-801d-785811b6a362}" />
  <Node Name="IO_SYSTEM_TYPE" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{c92eaa45-312c-4223-92e1-5134242146ed}" />
  <Node Name="ID_TO_ADDR" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; The function block ID_TO_ADDR converts the handle used for the Communication Function Blocks&#xD;&#xA; to the physical identification of a slot of a PROFIBUS DP-slave or subslot of a PROFINET IO Device.&#xD;&#xA;&#xD;&#xA; .. admonition:: Code-Example: see |RALARM|&#xD;&#xA;&#xD;&#xA;    .. code-block:: codesys&#xD;&#xA; &#xD;&#xA; | &#xD;&#xA;" ObjectGUID="{d0bab1e9-1c62-4544-865d-f2323c4dc7fc}" />
  <Node Name="DP_DEVICE_ID" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{cb67c988-d33a-451d-8d66-d5072e021a2a}" />
  <Node Name="DP_ADDR" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" | data structure for physical/native identification of a slot of a PROFIBUS DP-slave." ObjectGUID="{2c4c59cf-f622-4b98-8cd2-3724a6e08ac4}" />
  <Node Name="ADDR_TYPE" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" | Uniform data structure (UNION) for physical identification of a slot of a PROFIBUS DP-slave or subslot of a PROFINET IO Device.&#xD;&#xA; | (see: |AddressConcept|, |ADDR_TO_ID|, |ID_TO_ADDR|)" ObjectGUID="{0be6145e-367d-4a84-84f0-60a68e629dce}" />
  <Node Name="ADDR_TO_ID" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA; | The function block ADDR_TO_ID converts the physical identification of a slot of a PROFIBUS DP-slave or subslot of a PROFINET IO Device to a handle which can be used with the Communication Function Blocks.&#xD;&#xA;&#xD;&#xA; .. admonition:: Code-Example: get ID with ADDR_TO_ID&#xD;&#xA;&#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;    &#xD;&#xA;        PROGRAM PLC_PRG&#xD;&#xA;        VAR&#xD;&#xA;            ID : DWORD := CommFB.Constants.INVALID_ID;&#xD;&#xA;            convertAddr : CommFB.ADDR_TO_ID;&#xD;&#xA;            addr : CommFB.ADDR_TYPE;    &#xD;&#xA;            errorCode : UDINT;  &#xD;&#xA;        END_VAR&#xD;&#xA;        &#xD;&#xA;        addr.SYSTEM := CommFB.IO_SYSTEM_TYPE.PROFINET_IO;&#xD;&#xA;        addr.PN.MASTER := PN_Controller.MasterID;&#xD;&#xA;        addr.PN.D.STATIONNAME := 'wago1';&#xD;&#xA;        //addr.PN.D.INSTANCE := ?;      Instance Nr - not relevant for ADDR_TO_ID()&#xD;&#xA;        //addr.PN.D.DEVICE := ?;        Device-ID   - not relevant for ADDR_TO_ID()&#xD;&#xA;        //addr.PN.D.VENDOR := ?;        Vendor-ID   - not relevant for ADDR_TO_ID()&#xD;&#xA;        addr.PN.API := 0;&#xD;&#xA;        addr.PN.SLOT := 2;              &#xD;&#xA;        addr.PN.SUBSLOT := 1;&#xD;&#xA;        &#xD;&#xA;        convertAddr(EN := TRUE, ADDR := addr);&#xD;&#xA;        IF(convertAddr.ENO) THEN&#xD;&#xA;            ID := convertAddr.ID;       // --&gt; use this ID in RDREC, WRREC etc.&#xD;&#xA;        ELSE    &#xD;&#xA;            errorCode := convertAddr.STATUS;        //failed !&#xD;&#xA;        END_IF&#xD;&#xA;&#xD;&#xA; | &#xD;&#xA;" ObjectGUID="{5161bf82-7645-4eca-8762-c6c281eca346}" />
  <Node Name="Overview" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{2d910318-7f5f-4606-81b3-c561aa8b0e15}" />
  <Node Name="Description" TypeGUID="{a56744ff-693f-4597-95f9-0e1c529fffc2}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{0b964d0f-27e2-438c-9ac8-a27fe9668176}" />
  <Node Name="internal" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{0a9c538b-e0c8-42ee-8a9e-b28075468f05}" />
  <Node Name="WRREC" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | **Write Data Record (WRREC)**&#xD;&#xA; | This function block executes an acyclic write of user or system record-data.&#xD;&#xA; | The ID parameter identifies the slot or subslot of the Field Device the process data record is written to. &#xD;&#xA; | The INDEX input of the WRREC function block contains an integer which identifies the data record to be written. &#xD;&#xA; | The data record shall be stored in the variable given at the RECORD parameter.&#xD;&#xA; | The LEN input contains the length of the data record to be written in byte. &#xD;&#xA; | The variable given as RECORD parameter shall be at least of LEN byte.&#xD;&#xA; | The values of the RECORD and LEN parameters shall not be changed as long as the BUSY output is true.&#xD;&#xA; | If the data record is written successfully, the DONE output indicates that the read data record is written to the Field Device.&#xD;&#xA; | If an error occurred, the ERROR output indicates an error and the STATUS output contains the error code." ObjectGUID="{217ef9f1-e885-4091-9848-6b80a26c7ecc}" />
  <Node Name="SETIO_PART" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA;The SETIO_PART function block sets the output data for a subset of the output data associated to a slot or subslot of a Field Device.&#xD;&#xA;The output data are addressed within the slot or subslot through the OFFSET and LEN parameters. &#xD;&#xA;The SETIO_PART function block sets the output data to the Host Controller interface into the cyclically written output data of the Field Device. &#xD;&#xA;The function block is invoked by a 1 of the EN input. If the Output data are stored successfully and the Field Device is still cyclically communicating, the ENO output is set to 1.&#xD;&#xA;&#xD;&#xA;If the Output data are stored successfully and the Field Device is still cyclically communicating, the ENO output is set to 1&#xD;&#xA;&#xD;&#xA;Never use GETIO-/SETIO_PART FBs concurrently with %I/%Q-Input/Output-Mapping for the same slot/subslot !&#xD;&#xA;" ObjectGUID="{4a9c08c8-7e07-483d-9560-4b698ff1f35a}" />
  <Node Name="RDREC" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | **Read Process Data Record (RDREC)**&#xD;&#xA; | This function block executes an acyclic read of user or system record-data.&#xD;&#xA; | The function is invoked when REQ input is equal to TRUE.&#xD;&#xA; | The ID parameter identifies the slot or subslot of the Field Device the data record is read from. &#xD;&#xA; | The INDEX input of the READ function block contains an integer which identifies the data record to be read, e.g. Profinet Diagnosis- or I&amp;M-Data.&#xD;&#xA; | The MLEN parameter specifies the count of bytes which shall be read as an maximum. &#xD;&#xA; | The variable given as RECORD parameter shall be at least of MLEN byte.&#xD;&#xA; | If the data record is read successfully, the VALID output indicates that the read data record is stored in the RECORD parameter. &#xD;&#xA; | The LEN output contains the actual length of the data that has been read in byte.&#xD;&#xA; | If an error occurred, the ERROR output indicates an error and the STATUS output contains the error code.&#xD;&#xA;&#xD;&#xA; .. admonition:: Code-Example: use RDREC to read the diagnosis of a PN-Slave&#xD;&#xA;&#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;    &#xD;&#xA;        PROGRAM PLC_PRG&#xD;&#xA;        VAR&#xD;&#xA;            rdrec : CommFB.RDREC;   &#xD;&#xA;            buffer : ARRAY[0..255] OF BYTE;&#xD;&#xA;            readError : DWORD;&#xD;&#xA;            &#xD;&#xA;            diagReader : ProfinetCommon.DiagnosisDataReader;&#xD;&#xA;            channelDiag : ProfinetCommon.ChannelDiagnosisData;&#xD;&#xA;        END_VAR&#xD;&#xA;             &#xD;&#xA;        // Read Diagosis-Data:&#xD;&#xA;        rdrec.ID := pnDevice.ID;                // &quot;pnDevice&quot; is a Profinet slave in the device tree&#xD;&#xA;        rdrec.INDEX := TO_INT(ProfinetCommon.DiagnosisRecordIndex.Device);      // = 16#F80C --&gt; get all diagnosis for this device&#xD;&#xA;        rdrec.MLEN := TO_INT(SIZEOF(buffer));&#xD;&#xA;        rdrec.RECORD := ADR(buffer);&#xD;&#xA;        rdrec();&#xD;&#xA;        &#xD;&#xA;        IF(rdrec.VALID AND rdrec.REQ) THEN&#xD;&#xA;            //here we have valid data&#xD;&#xA;            diagReader.InitData(rdrec.RECORD, TO_UINT(rdrec.LEN));&#xD;&#xA;            WHILE(diagReader.Read()) DO&#xD;&#xA;               ; // do something useful with diag-data       &#xD;&#xA;            END_WHILE   &#xD;&#xA;        ELSIF(rdrec.ERROR) THEN&#xD;&#xA;            readError := rdrec.STATUS;      // read service failed&#xD;&#xA;        END_IF&#xD;&#xA;        rdrec.REQ := rdrec.BUSY;            // only read once&#xD;&#xA; " ObjectGUID="{d9fbb3df-cbc7-4a28-b57a-e0ee2393ee08}" />
  <Node Name="RDIAG" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | Read Diagnosis data from DP Slave.&#xD;&#xA; | This service is for Profibus only, Profinet uses a different, more advanced Diagnosis. &#xD;&#xA; &#xD;&#xA;  .. admonition:: Code-Example: Profibus DP Diagnosis&#xD;&#xA; &#xD;&#xA;     .. code-block:: codesys&#xD;&#xA;     &#xD;&#xA;         PROGRAM PLC_PRG&#xD;&#xA;         VAR&#xD;&#xA;             readDiag : CommfB.RDIAG;&#xD;&#xA;             diag : CommFB.DP_DIAG;&#xD;&#xA;             sMessage : STRING;&#xD;&#xA;         END_VAR&#xD;&#xA;         &#xD;&#xA;         readDiag.REQ := TRUE;&#xD;&#xA;         readDiag.ID := CommFB.ID(EN := TRUE, Master := CIFX_PB.MasterID, SEGMENT := 0, STATION := 3, SLOT := 0);&#xD;&#xA;         readDiag.MLEN := TO_INT(SIZEOF(diag));&#xD;&#xA;         readDiag(DINFO := diag);&#xD;&#xA;         IF(readDiag.VALID) THEN&#xD;&#xA;             IF(diag.status1.Diag.Station_Non_Existent) THEN&#xD;&#xA;                 sMessage := 'Station with Address = 3 is not available !';&#xD;&#xA;             END_IF&#xD;&#xA;         END_IF        &#xD;&#xA;" ObjectGUID="{c5b58f61-3843-42d6-973c-c6c3d2d08db5}" />
  <Node Name="RALARM_MODE" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Filter scope of  |RALARM|.F_ID input." ObjectGUID="{3d01c37c-0555-41fe-8394-dbb1741e5426}" />
  <Node Name="RALARM" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | The RALARM function block is used to receive alarm information of alarms from a PROFIBUS DP or a PROFINET IO subsystem.&#xD;&#xA; &#xD;&#xA;  .. admonition:: Code-Example: receive Alarm&#xD;&#xA; &#xD;&#xA;     .. code-block:: codesys&#xD;&#xA;     &#xD;&#xA;         PROGRAM PLC_PRG&#xD;&#xA;         VAR&#xD;&#xA;             ralarm : CommFB.RALARM;&#xD;&#xA;             alarm : CommFB.AINFO_TYPE;		&#xD;&#xA;             convertID : CommFB.ID_TO_ADDR;&#xD;&#xA;             addr : CommFB.ADDR_TYPE;				&#xD;&#xA;             message : STRING;&#xD;&#xA;         END_VAR&#xD;&#xA;         &#xD;&#xA;         &#xD;&#xA;         ralarm.EN := TRUE;&#xD;&#xA;         ralarm.MODE := CommFB.RALARM_MODE.ALL_ALARMS;       // receive all alarms from all devices connected to the controller&#xD;&#xA;         ralarm.F_ID := PN_Controller.MasterID;              // Filter ID, if MODE = ALL_ALARMS use MasterID here, else the ID of a slot/subslot&#xD;&#xA;         &#xD;&#xA;         ralarm(ainfo := alarm);&#xD;&#xA;         WHILE(ralarm.NEW) DO&#xD;&#xA; &#xD;&#xA;             convertID(EN := TRUE, ID := ralarm.ID, ADDR := addr);&#xD;&#xA;             IF(convertID.ENO) THEN&#xD;&#xA;                 IF(addr.SYSTEM = CommFB.IO_SYSTEM_TYPE.PROFINET_IO) THEN&#xD;&#xA;                     message := 'Station ';&#xD;&#xA;                     message := concat(message, addr.PN.D.STATIONNAME);&#xD;&#xA;                     message := concat(message, ' (Slot = ');&#xD;&#xA;                     message := concat(message, TO_STRING(addr.PN.SLOT));    &#xD;&#xA;                     message := concat(message, ') sends an alarm !');   &#xD;&#xA;                     &#xD;&#xA;                     //Log Alarm to PLC-Logger&#xD;&#xA;                     CmpLog.LogAdd2(CmpLog.LogConstants.LOG_STD_LOGGER, 555, CmpLog.LogClass.LOG_WARNING, 0, 0, message);   &#xD;&#xA;                 END_IF      &#xD;&#xA;             END_IF             &#xD;&#xA;             &#xD;&#xA;             ralarm(ainfo := alarm);     // exec-again&#xD;&#xA;         END_WHILE&#xD;&#xA; " ObjectGUID="{30000b14-dffc-4fca-ba84-ce8151efe9e5}" />
  <Node Name="PN_AINFO" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" Alarm information of a profinet device (see: |RALARM|).&#xD;&#xA; (see IEC 61158-6)" ObjectGUID="{58c695ac-304e-486a-9a07-0358892da7f8}" />
  <Node Name="GETIO_PART" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" &#xD;&#xA;The GETIO_PART function block gets a subset of the input data associated to a slot or subslot of a Field Device.&#xD;&#xA;The input data are addressed within the slot or subslot through OFFSET and LEN parameters. &#xD;&#xA;The GETIO_PART function block gets the input data from the Host Controller interface out of the cyclically read input data of the Field Device. The function block is invoked by a 1 of the EN input.&#xD;&#xA;&#xD;&#xA;If the input data are valid, the ENO output is set to 1, the ERROR output is set to 0, and the input data are stored in the variable given at the INPUTS parameter. &#xD;&#xA;The variable passed to the INPUTS parameter shall be of appropriate size to receive the input data. &#xD;&#xA;&#xD;&#xA;Never use GETIO-/SETIO_PART FBs concurrently with %I/%Q-Input/Output-Mapping for the same slot/subslot ! &#xD;&#xA;" ObjectGUID="{bd69db5b-9f68-4c3f-ab2e-16010fa11131}" />
  <Node Name="ErrorCode" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment="&#xD;&#xA; * The ``STATUS`` output has the data type DWORD which is interpreted as a packed array of four bytes.&#xD;&#xA; *&#xD;&#xA; * | Byte 0:	``Function_Num``&#xD;&#xA; * | Byte 1:	``Error_Decode``&#xD;&#xA; * | Byte 2:	``Error_Code_1``&#xD;&#xA; * | Byte 3:	``Error_Code_2``&#xD;&#xA; * &#xD;&#xA; * The Elements are used as specified in IEC 61158-6 (Profibus DP, Profinet IO)&#xD;&#xA; * &#xD;&#xA; * Exception: If ``Function_Num`` has a value of 16#40, no protocol element is used.&#xD;&#xA; * This is the case for example if the validation of one input parameter failed.&#xD;&#xA; * In this case ``Error_Decode`` value of 16#82..16#8F reports an error at parameter number 2 - 15.&#xD;&#xA; * &#xD;&#xA; * Other fixed error codes are defined in this enum.&#xD;&#xA; " ObjectGUID="{0ea83946-0470-4697-83c0-4b8f9811c9c0}" />
  <Node Name="DP_DIAG" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" | Data structure containing DP Slave diagnosis data (see: |RDIAG|).&#xD;&#xA; | (see IEC 61158-6)" ObjectGUID="{6b4cdf9f-0ef9-4dbf-9870-844452a05a5b}" />
  <Node Name="DP_AINFO" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" | Alarm information of a profibus device (see: |RALARM|).&#xD;&#xA; | (see IEC 61158-6)" ObjectGUID="{4b43e083-02e7-4f9e-bd9a-b953c4763244}" />
  <Node Name="DP Address" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b3f8c00f-4ca3-4ae9-8a3d-929b20a901a6}" />
  <Node Name="Constants" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" ObjectGUID="{64bb6af4-43c3-4bd8-9df2-83ff119f5ca4}" />
  <Node Name="CNCT" TypeGUID="{6f9dac99-8de1-4efc-8465-68ac443b7d08}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" Comment=" | This function block establishes a Profinet DeviceAccess-AR or a Profibus-DPV2 connection.&#xD;&#xA; | Supervisors need this connections to access a Field Device, e.g. for writing parameters.&#xD;&#xA; | One instance of a CNCT function block provides one instance of a peer-to-peer connection to a Field Device. Only one connection to the same Field Device can be established.&#xD;&#xA; | &#xD;&#xA; | A connection is established when the REQ input is equal to TRUE. The IO Subsystem remains connected as long as the function block is called with REQ = TRUE or an error is indicated.&#xD;&#xA; | The variable given D_ADDR input shall identify the destination Field Device. The ID output identifies the established connection to this Field Device (used for the functions blocks |RDREC| and |WRREC|.&#xD;&#xA; | If the connection is established successfully, the VALID output indicates that the connection can be used.&#xD;&#xA; | &#xD;&#xA;&#xD;&#xA; .. note:: In case of inactivity, which means there are no read-/write-services transfered on the established connection, the connection may be aborted by the IO subsystem (e.g. after 20 sec.)     &#xD;&#xA;&#xD;&#xA; .. note:: The CNCT function block defines a connection to a slot or subslot of a Field Device and returns a handle via the ID output. &#xD;&#xA;    This connection establishes an Application Relationship (AR) to the Field Device. If another connection and handle is needed to the same Field Device the existing AR may be used.&#xD;&#xA; &#xD;&#xA; .. admonition:: Code-Example: establish a Supervisor connection&#xD;&#xA; &#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;     &#xD;&#xA;        PROGRAM PLC_PRG&#xD;&#xA;        VAR&#xD;&#xA;            cnct : CommFB.CNCT;&#xD;&#xA;            startConnect : BOOL;        //establish a Supervisor connection&#xD;&#xA;            rdrec : CommFB.RDREC;&#xD;&#xA;            loadData : BOOL;&#xD;&#xA;            buffer : ARRAY[0..255] OF BYTE;&#xD;&#xA;        END_VAR&#xD;&#xA;        &#xD;&#xA;        cnct.D_ADDR.SYSTEM := CommfB.IO_SYSTEM_TYPE.PROFINET_IO;&#xD;&#xA;        cnct.D_ADDR.PN.D.STATIONNAME := 'pnDevice';&#xD;&#xA;        cnct.D_ADDR.PN.D.VENDOR := 16#011D;         //get this data from GSDML or DCP_Identify / Scan&#xD;&#xA;        cnct.D_ADDR.PN.D.DEVICE := 16#02EE;&#xD;&#xA;        cnct.D_ADDR.PN.D.INSTANCE := 0;&#xD;&#xA;        &#xD;&#xA;        cnct.D_ADDR.PN.SLOT := 0;&#xD;&#xA;        cnct.D_ADDR.PN.SUBSLOT := 1;&#xD;&#xA;        &#xD;&#xA;        cnct.REQ := startConnect;&#xD;&#xA;        cnct();&#xD;&#xA;        IF(cnct.VALID) THEN&#xD;&#xA;            loadData := TRUE;&#xD;&#xA;        ELSIF(cnct.ERROR) THEN&#xD;&#xA;            //re-connect, if connection timed out&#xD;&#xA;            startConnect := (cnct.STATUS = CommFB.ErrorCode.TIMEOUT);&#xD;&#xA;        END_IF&#xD;&#xA;        &#xD;&#xA;        // Read Diagnosis-Data&#xD;&#xA;        rdrec.REQ := loadData;&#xD;&#xA;        rdrec.ID := cnct.ID;&#xD;&#xA;        rdrec.INDEX := TO_INT(ProfinetCommon.DiagnosisRecordIndex.Device);&#xD;&#xA;        rdrec.MLEN := TO_INT(SIZEOF(buffer));&#xD;&#xA;        rdrec.RECORD := ADR(buffer);&#xD;&#xA;        rdrec();&#xD;&#xA;        &#xD;&#xA;        IF(rdrec.REQ) THEN&#xD;&#xA;            IF(rdrec.VALID) THEN&#xD;&#xA;                loadData := FALSE;&#xD;&#xA;                startConnect := FALSE;  //Release connection&#xD;&#xA;            END_IF&#xD;&#xA;        END_IF&#xD;&#xA;        rdrec.REQ := rdrec.BUSY;&#xD;&#xA;         " ObjectGUID="{1a0938d0-793f-43ea-b09a-2fa860cf65f3}">
    <Node Name="ReleaseCnf" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{8cc0a5fd-4858-416d-8ec5-71670ed3d8ec}" />
    <Node Name="ConnectCnf" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{a158add4-2555-4cd8-a806-92f9c1f32f76}" />
    <Node Name="AbortInd" TypeGUID="{f8a58466-d7f6-439f-bbb8-d4600e41d099}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94};{3b83b776-fb25-43b8-99f2-3c507c9143fc}" IsHidden="true" ObjectGUID="{af6d1849-a5b6-4fbd-a087-b3e903fac7c4}" />
  </Node>
  <Node Name="Addresses" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{619a37b9-b14d-4532-91d7-73a09c278031}" />
  <Node Name="AddressConcept" TypeGUID="{ffbfa93a-b94d-45fc-a329-229860183b1d}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" ===============&#xD;&#xA; Address Concept&#xD;&#xA; ===============&#xD;&#xA; | &#xD;&#xA; | IO Systems like PROFIBUS DP and PROFINET IO use different address concepts. &#xD;&#xA; | This results in different functions or function parameters to identify a Field Device, a slot or subslot inside a Field Device.&#xD;&#xA; | &#xD;&#xA; | In order to provide an uniform interface for the use with different types of IO communication subsystems, all Communication Function Blocks hide the address concept of the specific IO Systems. &#xD;&#xA; | The Function Blocks use an abstract ''ID'', a handle of data type DWORD, to uniquely identify a Profibus-Module or a Profinet-Submodule within an application.&#xD;&#xA; | Therefore an application program is able to use the Communication Function Blocks without knowledge of the explicit hardware configuration (e.g. the MAC address or Station-Name of a Field Device or the slot-position of a module). &#xD;&#xA; | This way an application or library can be developed without dependencies to hardware configuration data such as a specific IO-Driver or an addressing method.&#xD;&#xA; | &#xD;&#xA; | &#xD;&#xA;&#xD;&#xA; Generating a CommFB-ID&#xD;&#xA; ======================&#xD;&#xA; | There are different methods, generic and more specific ones, to generate an ID for identifying a Profibus/Profinet device:&#xD;&#xA;&#xD;&#xA; .. note:: The actual value of ID should never be manipulated or created,&#xD;&#xA;    only use the IDs created from theses sources described here.&#xD;&#xA;    The value of ID can differ depending on the project structure or the driver version ! &#xD;&#xA;&#xD;&#xA; | &#xD;&#xA;&#xD;&#xA; Profibus DP&#xD;&#xA; ===========&#xD;&#xA; | The input parameter ID of the Communication Function Blocks addresses one slot of a DP-slave or a DP-slave (Slot 0). &#xD;&#xA; | This handle may be generated by using one of the following functions:&#xD;&#xA;&#xD;&#xA; * |ID|: Conversion of a physical address of a DP-slave to the handle&#xD;&#xA;&#xD;&#xA; * |ADDR|: Conversion of a handle to the physical address of a DP-slave&#xD;&#xA;&#xD;&#xA; * |SLOT_ID|: Addressing a slot of a DP-slave&#xD;&#xA;&#xD;&#xA; |&#xD;&#xA;&#xD;&#xA; Profinet IO&#xD;&#xA; =============&#xD;&#xA; | The input parameter ID of the Communication Function Blocks addresses a Profinet-Submodule.&#xD;&#xA; | A Profinet Module is just a container for at least one submodule. IO-Data and Parameters are always assigned to a submodule.&#xD;&#xA; | The shortest way to get the ID of a submodule is to call the GetID()-method of the Profinet-Slave function block which is generated for each Profinet-Slave device:&#xD;&#xA;&#xD;&#xA; .. admonition:: Code-Example: ID with GetID() - method&#xD;&#xA;&#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;    &#xD;&#xA;        PROGRAM PLC_PRG&#xD;&#xA;        VAR&#xD;&#xA;            ID : DWORD := CommFB.Constants.INVALID_ID;&#xD;&#xA;        END_VAR&#xD;&#xA;    &#xD;&#xA;        ID := PNSlave.GetID(API := 0, SLOT := 1, SUBSLOT = 1);	// get ID of 1. module&#xD;&#xA;&#xD;&#xA; |&#xD;&#xA; &#xD;&#xA; Device Diagnosis&#xD;&#xA; ==================&#xD;&#xA; | A generic way for obtaining an CommFB-ID is by calling the method IDevice.GetDeviceInfo().&#xD;&#xA; | For an underlying Profinet/Profibus slave or module, the generic DEVICE_INFO structure, which is returned by this method, contains the unique CommFB-ID:&#xD;&#xA;&#xD;&#xA; .. admonition:: Code-Example: ID with generic Device Diagnosis&#xD;&#xA;&#xD;&#xA;    .. code-block:: codesys&#xD;&#xA;    &#xD;&#xA;        FUNCTION ListStationnames : DINT&#xD;&#xA;        VAR_IN_OUT&#xD;&#xA;            controller : DED.IDevice;&#xD;&#xA;        END_VAR&#xD;&#xA;        &#xD;&#xA;        VAR&#xD;&#xA;            i : DINT;&#xD;&#xA;            childDevice : DED.IDevice;&#xD;&#xA;            deviceInfo : DED.DEVICE_INFO;&#xD;&#xA;            &#xD;&#xA;            convertID : CommFB.ID_TO_ADDR;&#xD;&#xA;            pnAddress : CommFB.ADDR_TYPE;&#xD;&#xA;            stationName : STRING;&#xD;&#xA;        END_VAR&#xD;&#xA;        &#xD;&#xA;        FOR i := 0 TO TO_DINT(controller.ChildNodeCount - 1) DO&#xD;&#xA;            childDevice := DED.INode_TO_IDevice(controller.GetChild(TO_UDINT(i)));&#xD;&#xA;            IF(childDevice &lt;&gt; 0 AND_THEN childDevice.GetDeviceInfo(deviceInfo) = DED.ERROR.NO_ERROR) THEN&#xD;&#xA;                convertID(EN := TRUE, ID := deviceInfo.idSystem, ADDR := pnAddress);&#xD;&#xA;                IF(convertID.ENO) THEN&#xD;&#xA;                    IF(pnAddress.SYSTEM = CommFB.IO_SYSTEM_TYPE.PROFINET_IO) THEN&#xD;&#xA;                        //we have a valid Profinet Address:&#xD;&#xA;                        stationName := pnAddress.PN.D.STATIONNAME;&#xD;&#xA;                    END_IF&#xD;&#xA;                END_IF&#xD;&#xA;            END_IF&#xD;&#xA;        END_FOR&#xD;&#xA;&#xD;&#xA; | &#xD;&#xA;&#xD;&#xA; Address Conversion&#xD;&#xA; ====================&#xD;&#xA; | For some use cases it may be necessary to use native PROFIBUS DP and PROFINET IO addressing.&#xD;&#xA; | These function blocks can be used for obtaining an ID to a native, protocol specific address and vice versa (see examples in the function block's description)&#xD;&#xA; | The handle may be generated by local means of the PLC or its configuration system or may be generated by using one of the following functions:&#xD;&#xA;&#xD;&#xA; * |ADDR_TO_ID|: Conversion of a address of a PROFINET IO Device to the handle&#xD;&#xA;&#xD;&#xA; * |ID_TO_ADDR|: Conversion of a handle to the address of a PROFINET IO Device&#xD;&#xA;&#xD;&#xA; |&#xD;&#xA;" ObjectGUID="{71003b0f-a879-4760-b7e7-43a60ae694ca}" />
  <Node Name="AINFO_TYPE" TypeGUID="{2db5746d-d284-4425-9f7f-2663a34b0ebc}" EmbeddedTypeGUIDs="{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}" Comment=" | This union either contain Profibus or Profinet alarm information, depending on the used IO subsytem type (see: |RALARM|)." ObjectGUID="{406c9b69-07cd-4f68-98f6-648eff1b3a53}" />
  <Node Name="Project Settings" TypeGUID="{8753fe6f-4a22-4320-8103-e553c4fc8e04}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{6470a90f-b7cb-43ac-9ae5-94b2338b4573}" />
  <Node Name="Project Information" TypeGUID="{085afe48-c5d8-4ea5-ab0d-b35701fa6009}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{11c0fc3a-9bcf-4dd8-ac38-efb93363e521}" />
  <Node Name="Images" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{56ea2099-1ccd-43e1-b00e-7be9c21b5478}" />
  <Node Name="CommFB" TypeGUID="{738bea1e-99bb-4f04-90bb-a7a567e74e3a}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{e481e6df-fa97-47c7-a458-f3dbd4e73a14}" />
  <Node Name="Bibliotheksverwalter" TypeGUID="{adb5cb65-8e1d-4a00-b70a-375ea27582f3}" EmbeddedTypeGUIDs="" ObjectGUID="{ee40785b-2a85-4eb3-b4a1-b8940b60184b}" />
  <Node Name="00000000-0000-0000-0000-000000000000|C:\Users\w.doll\Desktop\CommFB\description.rst" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{9bac55bd-08b3-46ea-b214-01b45a18752e}" />
  <Node Name="00000000-0000-0000-0000-000000000000|C:\Users\w.doll\Desktop\CommFB\Overview.png" TypeGUID="{9001d745-b9c5-4d77-90b7-b29c3f77a23b}" EmbeddedTypeGUIDs="" ProvidesLanguageModel="false" ObjectGUID="{b5d7aeb5-c34e-4190-9374-c247c414d7d2}" />
</Library>